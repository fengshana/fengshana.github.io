<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Fsn</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://fengshana.github.io/"/>
  <updated>2020-04-26T02:26:07.717Z</updated>
  <id>https://fengshana.github.io/</id>
  
  <author>
    <name>Fsn</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2020年redis面试全套视频教程笔记</title>
    <link href="https://fengshana.github.io/2020/04/24/%E9%9D%A2%E8%AF%95%E9%A2%98/Redis%E7%9B%B8%E5%85%B3/"/>
    <id>https://fengshana.github.io/2020/04/24/%E9%9D%A2%E8%AF%95%E9%A2%98/Redis%E7%9B%B8%E5%85%B3/</id>
    <published>2020-04-24T02:41:21.509Z</published>
    <updated>2020-04-26T02:26:07.717Z</updated>
    
    <content type="html"><![CDATA[<p>观看笔记：<a href="https://www.bilibili.com/video/BV18J411V7oq?p=1" target="_blank" rel="noopener">https://www.bilibili.com/video/BV18J411V7oq?p=1</a>  </p><h2 id="Redis核心数据结构介绍"><a href="#Redis核心数据结构介绍" class="headerlink" title="Redis核心数据结构介绍"></a>Redis核心数据结构介绍</h2><p>一线大厂Redis开发最佳实践<br>Redis轻松实现新浪微博与微信  </p><p>课程内容：  </p><ol><li>Redis核心数据结构精讲</li><li>微博与微信消息流Redis实现</li><li>微信点赞、收藏与标签基于Redis实现</li><li>微博与微信朋友关注模型基于Redis实现</li><li>互联网电商场景Redis使用那些事</li><li>Redis深度学习路线指引</li></ol><h3 id="五种数据结构"><a href="#五种数据结构" class="headerlink" title="五种数据结构"></a>五种数据结构</h3><ul><li>字符串string</li><li>哈希hash</li><li>列表list（可以实现队列的功能，但是功能远远比队列强大）</li><li>集合set</li><li>有序集合zset</li></ul><h2 id="string应用场景解析"><a href="#string应用场景解析" class="headerlink" title="string应用场景解析"></a>string应用场景解析</h2><h3 id="String结构"><a href="#String结构" class="headerlink" title="String结构"></a>String结构</h3><blockquote><p>字符串常用操作</p></blockquote><figure class="highlight q"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">SET <span class="built_in">key</span> <span class="built_in">value</span> <span class="comment">//存入字符串键值对</span></span><br><span class="line">MSET <span class="built_in">key</span> <span class="built_in">value</span> [<span class="built_in">key</span> <span class="built_in">value</span> ...] <span class="comment">//批量存储字符串键值对</span></span><br><span class="line">SETNX <span class="built_in">key</span> <span class="built_in">value</span> <span class="comment">//存入一个不存在的字符串键值对</span></span><br><span class="line">GET <span class="built_in">key</span> <span class="comment">//获取一个字符串键值</span></span><br><span class="line">MGET <span class="built_in">key</span> [<span class="built_in">key</span> ...] <span class="comment">//批量获取字符串键值</span></span><br><span class="line">DEL <span class="built_in">key</span> [<span class="built_in">key</span> ...] <span class="comment">//删除一个键</span></span><br><span class="line">EXPIRE <span class="built_in">key</span> seconds <span class="comment">//设置一个键的过期时间（秒）</span></span><br></pre></td></tr></table></figure><blockquote><p>原子相减</p></blockquote><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">INCR <span class="built_in">key</span> <span class="comment">//将key中储存的数字值加1</span></span><br><span class="line">DECR <span class="built_in">key</span> <span class="comment">//将key中储存的数字值减1</span></span><br><span class="line">INCRBY <span class="built_in">key</span> increment <span class="comment">//将key所储存的值加上increment</span></span><br><span class="line">DECRBY <span class="built_in">key</span> decrement <span class="comment">//将key所储存的值减去decrement</span></span><br></pre></td></tr></table></figure><h3 id="String应用场景"><a href="#String应用场景" class="headerlink" title="String应用场景"></a>String应用场景</h3><blockquote><p>单值缓存</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SET</span> <span class="keyword">key</span> <span class="keyword">value</span></span><br><span class="line"><span class="keyword">GET</span> <span class="keyword">key</span></span><br></pre></td></tr></table></figure><blockquote><p>对象缓存</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">1) <span class="keyword">SET</span> <span class="keyword">user</span>:<span class="number">1</span> <span class="keyword">value</span>(<span class="keyword">json</span>格式数据)</span><br><span class="line"><span class="number">2</span>) MSET <span class="keyword">user</span>:<span class="number">1</span> <span class="keyword">name</span> hhhhhh <span class="keyword">user</span>:<span class="number">1</span>:balance <span class="number">1888</span></span><br><span class="line">   MGET <span class="keyword">user</span>:<span class="number">1</span>:<span class="keyword">name</span> <span class="keyword">user</span>:<span class="number">1</span>:balance</span><br><span class="line"></span><br><span class="line">其实这个地方根据不同的情况下，<span class="keyword">SET</span>与MSET有不同的优劣；  </span><br><span class="line">MSET更好一些的原因：</span><br><span class="line"><span class="keyword">SET</span>第一种用起来简单；但是从性能上来说或者其他的使用方便度来说，都是不如MSET的；</span><br><span class="line">假如需要进行改一用户的余额，使用第一种方式<span class="keyword">SET</span>将如何实现；使用第二种方式MSET该如何实现；</span><br><span class="line">那么在这种情况下属于第二种MSET方便一些，因为是要该用户的某一属性的值，使用第一种方式<span class="keyword">SET</span>就可能麻烦一点，因为将要将该<span class="keyword">key</span>的<span class="keyword">json</span>数据全部拿回来，然后把这个<span class="keyword">json</span>数据进行反序列化，然后再去进行修改<span class="keyword">json</span>数据当中的该值，然后再去设置到redis当中去；</span><br><span class="line">如果是使用的第二种方式MSET，由于<span class="keyword">key</span>当中存储的是该用户的某一个属性值，所以直接对该需要进行修改的该属性<span class="keyword">key</span>进行操作即可；从这推测，<span class="keyword">hash</span>更适用一些；</span><br></pre></td></tr></table></figure><blockquote><p>分布式锁</p></blockquote><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">SETNX product:<span class="number">10001</span> <span class="literal">true</span> <span class="comment">//返回1代表获取锁成功</span></span><br><span class="line">SETNX product:<span class="number">10001</span> <span class="literal">true</span> <span class="comment">//返回0代表获取锁失败</span></span><br><span class="line">.....执行业务操作</span><br><span class="line">DEL product:<span class="number">10001</span> <span class="comment">//执行完业务释放锁</span></span><br><span class="line"></span><br><span class="line">SET product:<span class="number">10001</span> <span class="literal">true</span> ex <span class="number">10</span> nx <span class="comment">//防止程序意外终止导致死锁</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//NX即Not Exists：不存在</span></span><br><span class="line">SETNX </span><br><span class="line">格式：setnx key value</span><br><span class="line">    将key的值设为value，当且仅当key不存在；</span><br><span class="line">    若指定的key已经存在，则setnx不做任何操作；</span><br><span class="line">    SETNX是[ SET <span class="keyword">if</span> <span class="keyword">not</span> exists ]（如果不存在，则SET）的简写；</span><br><span class="line">可用版本：</span><br><span class="line">    &gt;= <span class="number">1.0</span><span class="number">.0</span></span><br><span class="line">时间复杂度：</span><br><span class="line"></span><br><span class="line">    Redis，单线程；那么在多线程的情况下，多个线程同时对productId为<span class="number">10001</span>的商品做一个SETNX的命令操作，那么谁SETNX进行设置成功，那么也就代表着当前该线程拿到了这把锁，既可以进行相关的业务操作；执行完业务操作之后，将该productId为<span class="number">10001</span>的产品在redis缓存当中直接delete掉；那么也就意味着这把锁给释放掉了；那么后续的多线程依然可以对不同的产品id进行相关加锁；</span><br><span class="line">    这种写法存在很多问题；只是引出相关的一个例子；</span><br></pre></td></tr></table></figure><table>  <tr>    <th>id</th>    <th>name</th>    <th>balance</th>  </tr>  <tr>    <td>1</td>    <td>AaaaBbbb</td>    <td>1888</td>  </tr>  <tr>    <td>2</td>    <td>yangguo</td>    <td>16000</td>  </tr>  <tr>    <td>3</td>    <td>AaaBbb2</td>    <td>2400</td>  </tr>  <tr>    <td>4</td>    <td>Bbbb3</td>    <td>1888</td>  </tr>  <tr>    <td>5</td>    <td>Aa4</td>    <td>1888</td>  </tr></table><h3 id="String应用场景-1"><a href="#String应用场景-1" class="headerlink" title="String应用场景"></a>String应用场景</h3><blockquote><p>计数器</p></blockquote><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">INCR <span class="string">article:</span><span class="string">readcount:</span>&#123;文章id&#125;</span><br><span class="line">GET <span class="string">ariticle:</span><span class="string">readcount:</span>&#123;文章id&#125;</span><br></pre></td></tr></table></figure><blockquote><p>Web集群session共享</p></blockquote><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">spring <span class="keyword">session</span>+redis实现<span class="keyword">session</span>共享</span><br></pre></td></tr></table></figure><blockquote><p>分布式系统全局序列号</p></blockquote><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INCRBY orderId <span class="number">1000</span> <span class="comment">//redis批量生成序列号提升性能</span></span><br></pre></td></tr></table></figure><h2 id="hash应用场景解析"><a href="#hash应用场景解析" class="headerlink" title="hash应用场景解析"></a>hash应用场景解析</h2><h3 id="Hash结构"><a href="#Hash结构" class="headerlink" title="Hash结构"></a>Hash结构</h3><blockquote><p>Hash常用操作</p></blockquote><figure class="highlight q"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">HSET <span class="built_in">key</span> field <span class="built_in">value</span> <span class="comment">//存储一个哈希表key的值</span></span><br><span class="line">HSETNX <span class="built_in">key</span> field <span class="built_in">value</span> <span class="comment">//存储一个不存在的哈希表key的键值</span></span><br><span class="line">HMSET <span class="built_in">key</span> field <span class="built_in">value</span> [ field <span class="built_in">value</span> ...] <span class="comment">//在一个哈希表key中存储多个键值对</span></span><br><span class="line">HGET <span class="built_in">key</span> field <span class="comment">//获取哈希表key对应的field键值</span></span><br><span class="line">HMGET <span class="built_in">key</span> field [ field ...] <span class="comment">//批量获取哈希表key中多个field键值</span></span><br><span class="line">HDEL <span class="built_in">key</span> field [ field ...] <span class="comment">//删除哈希表key中field的数量</span></span><br><span class="line">HLEN <span class="built_in">key</span> <span class="comment">//返回哈希表key中field的数量</span></span><br><span class="line">HGETALL <span class="built_in">key</span> <span class="comment">//返回哈希表key中所有的键值</span></span><br><span class="line"></span><br><span class="line">HINCRBY <span class="built_in">key</span> field increment <span class="comment">//为哈希表key中field键的值加上增量increment</span></span><br></pre></td></tr></table></figure><blockquote><p>对象缓存</p></blockquote><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">HMSET<span class="built_in"> user </span>&#123;userId&#125;:name lalala &#123;userId&#125;:balance 1888</span><br><span class="line">HMSET<span class="built_in"> user </span>1:name lalala 1:balance 1888</span><br><span class="line">HMGET<span class="built_in"> user </span>1:name 1:balance</span><br></pre></td></tr></table></figure><blockquote><p>电商购物车</p></blockquote><p>1） 以用户id为key<br>2） 商品id为field<br>3） 商品数量为value</p><blockquote><p>购物车操作</p></blockquote><p>1） 添加商品-&gt;hset cart:1001 10088 1<br>2） 增加数量-&gt;hincrby cart:1001<br>3） 商品总数-&gt;hlen cart:1001<br>4） 删除商品-&gt;hdel cart:1001 10088<br>5） 获取购物车所有商品-&gt;hgetall cart:1001  </p><h2 id="hash结构的优缺点解析"><a href="#hash结构的优缺点解析" class="headerlink" title="hash结构的优缺点解析"></a>hash结构的优缺点解析</h2><blockquote><p>hash结构的优点</p></blockquote><p>1） 同类数据归类整合储存，方便数据管理<br>2） 相比String操作消耗内存与CPU更小<br>3） 相比String储存更节省空间  </p><blockquote><p> 缺点</p></blockquote><p>1） 过期功能不能使用在field上，只能用在key上<br>2） Redis集群架构下不适合大规模使用  </p><h2 id="list应用场景解析"><a href="#list应用场景解析" class="headerlink" title="list应用场景解析"></a>list应用场景解析</h2><blockquote><p>List常用操作</p></blockquote><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">LPUSH<span class="built_in"> key</span> <span class="keyword">value</span> [ <span class="keyword">value</span> ...] //将一个或多个值<span class="keyword">value</span>插入<span class="built_in">到key</span>列表的表头（最左边）</span><br><span class="line">RPUSH<span class="built_in"> key</span> <span class="keyword">value</span>[ <span class="keyword">value</span> ...] //将一个或多个值<span class="keyword">value</span>插入<span class="built_in">到key</span>列表的表尾（最右边）</span><br><span class="line">LPOP<span class="built_in"> key</span> //移除并返<span class="built_in">回key</span>列表的头元素</span><br><span class="line">RPOP<span class="built_in"> key</span> //移除并返<span class="built_in">回key</span>列表的尾元素</span><br><span class="line">LRANGE<span class="built_in"> key</span> <span class="keyword">start</span> stop //返回列<span class="built_in">表key</span>中指定区间内的元素，区间以偏移量<span class="keyword">start</span>和stop指定</span><br><span class="line">BLPOP<span class="built_in"> key</span> [<span class="built_in"> key</span> ...] timeout //<span class="built_in">从key</span>列表表头弹出一个元素，若列表中没有元素，阻塞等待timeout秒，如果timeout=<span class="number">0</span>，则一直阻塞等待</span><br><span class="line">BRPOP<span class="built_in"> key</span> [<span class="built_in"> key</span> ...] timeout //<span class="built_in">从key</span>列表表尾弹出一个元素，若列表中没有元素，阻塞等待timeout秒，如果timeout=<span class="number">0</span>，一直阻塞等待</span><br></pre></td></tr></table></figure><blockquote><p>常用数据结构</p></blockquote><figure class="highlight protobuf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Stack（栈）=LPUSH+LPOP-&gt;FILO（first in last out）</span><br><span class="line">Queue（队列）=LPUSH+RPOP</span><br><span class="line">Blocking MQ（阻塞队列）=LPUSH+BRPOP</span><br></pre></td></tr></table></figure><h2 id="set应用场景解析"><a href="#set应用场景解析" class="headerlink" title="set应用场景解析"></a>set应用场景解析</h2><h2 id="微博与微信关注模型解析"><a href="#微博与微信关注模型解析" class="headerlink" title="微博与微信关注模型解析"></a>微博与微信关注模型解析</h2><h2 id="一线大厂redis开发最佳实践"><a href="#一线大厂redis开发最佳实践" class="headerlink" title="一线大厂redis开发最佳实践"></a>一线大厂redis开发最佳实践</h2><h2 id="分布式锁场景解析"><a href="#分布式锁场景解析" class="headerlink" title="分布式锁场景解析"></a>分布式锁场景解析</h2><h2 id="现场模拟高并发场景"><a href="#现场模拟高并发场景" class="headerlink" title="现场模拟高并发场景"></a>现场模拟高并发场景</h2><h2 id="基于redisson框架实现分布式锁"><a href="#基于redisson框架实现分布式锁" class="headerlink" title="基于redisson框架实现分布式锁"></a>基于redisson框架实现分布式锁</h2><h2 id="redis主从架构锁失效问题解析"><a href="#redis主从架构锁失效问题解析" class="headerlink" title="redis主从架构锁失效问题解析"></a>redis主从架构锁失效问题解析</h2><h2 id="redisson分布式锁实现原理"><a href="#redisson分布式锁实现原理" class="headerlink" title="redisson分布式锁实现原理"></a>redisson分布式锁实现原理</h2><h2 id="双十一大促如何将分布式锁的性能提升100倍"><a href="#双十一大促如何将分布式锁的性能提升100倍" class="headerlink" title="双十一大促如何将分布式锁的性能提升100倍"></a>双十一大促如何将分布式锁的性能提升100倍</h2><h2 id="redis集群方案比较-哨兵模式详解"><a href="#redis集群方案比较-哨兵模式详解" class="headerlink" title="redis集群方案比较-哨兵模式详解"></a>redis集群方案比较-哨兵模式详解</h2><h2 id="redis集群方案比较-高可用集群模式"><a href="#redis集群方案比较-高可用集群模式" class="headerlink" title="redis集群方案比较-高可用集群模式"></a>redis集群方案比较-高可用集群模式</h2><h2 id="redis安装"><a href="#redis安装" class="headerlink" title="redis安装"></a>redis安装</h2><h2 id="redis集群搭建过程详解"><a href="#redis集群搭建过程详解" class="headerlink" title="redis集群搭建过程详解"></a>redis集群搭建过程详解</h2><h2 id="验证集群"><a href="#验证集群" class="headerlink" title="验证集群"></a>验证集群</h2><h2 id="轻松搭建redis缓存高可用集群"><a href="#轻松搭建redis缓存高可用集群" class="headerlink" title="轻松搭建redis缓存高可用集群"></a>轻松搭建redis缓存高可用集群</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;观看笔记：&lt;a href=&quot;https://www.bilibili.com/video/BV18J411V7oq?p=1&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.bilibili.com/video/BV18J411V7oq
      
    
    </summary>
    
    
      <category term="笔记" scheme="https://fengshana.github.io/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="笔记" scheme="https://fengshana.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Redis" scheme="https://fengshana.github.io/tags/Redis/"/>
    
  </entry>
  
  <entry>
    <title>线程池源码分析</title>
    <link href="https://fengshana.github.io/2020/04/24/%E9%9D%A2%E8%AF%95%E9%A2%98/%E7%BA%BF%E7%A8%8B%E6%B1%A0%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    <id>https://fengshana.github.io/2020/04/24/%E9%9D%A2%E8%AF%95%E9%A2%98/%E7%BA%BF%E7%A8%8B%E6%B1%A0%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/</id>
    <published>2020-04-24T02:40:04.420Z</published>
    <updated>2020-04-24T05:03:15.277Z</updated>
    
    <content type="html"><![CDATA[<p>观看笔记：  </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;观看笔记：  &lt;/p&gt;

      
    
    </summary>
    
    
      <category term="笔记" scheme="https://fengshana.github.io/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="笔记" scheme="https://fengshana.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="源码" scheme="https://fengshana.github.io/tags/%E6%BA%90%E7%A0%81/"/>
    
      <category term="线程池" scheme="https://fengshana.github.io/tags/%E7%BA%BF%E7%A8%8B%E6%B1%A0/"/>
    
  </entry>
  
  <entry>
    <title>Mybatis源码分析</title>
    <link href="https://fengshana.github.io/2020/04/24/%E9%9D%A2%E8%AF%95%E9%A2%98/Mybatis%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/"/>
    <id>https://fengshana.github.io/2020/04/24/%E9%9D%A2%E8%AF%95%E9%A2%98/Mybatis%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90/</id>
    <published>2020-04-24T01:35:17.226Z</published>
    <updated>2020-04-24T05:03:15.273Z</updated>
    
    <content type="html"><![CDATA[<p>观看笔记：<a href="https://www.bilibili.com/video/BV1yE41187A3?from=search&amp;seid=14718277397907237551" target="_blank" rel="noopener">https://www.bilibili.com/video/BV1yE41187A3?from=search&amp;seid=14718277397907237551</a>  </p><p>课程内容：</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;观看笔记：&lt;a href=&quot;https://www.bilibili.com/video/BV1yE41187A3?from=search&amp;amp;seid=14718277397907237551&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https
      
    
    </summary>
    
    
      <category term="笔记" scheme="https://fengshana.github.io/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="笔记" scheme="https://fengshana.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Mybatis" scheme="https://fengshana.github.io/tags/Mybatis/"/>
    
      <category term="源码" scheme="https://fengshana.github.io/tags/%E6%BA%90%E7%A0%81/"/>
    
  </entry>
  
  <entry>
    <title>微信支付</title>
    <link href="https://fengshana.github.io/2020/04/23/%E9%9D%A2%E8%AF%95%E9%A2%98/%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98/"/>
    <id>https://fengshana.github.io/2020/04/23/%E9%9D%A2%E8%AF%95%E9%A2%98/%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98/</id>
    <published>2020-04-22T22:54:44.581Z</published>
    <updated>2020-04-23T00:27:52.391Z</updated>
    
    <content type="html"><![CDATA[<h2 id="记录"><a href="#记录" class="headerlink" title="记录"></a>记录</h2><p>重点是复习一下微信支付流程。  </p><p>昨天面试官问我，比如说支付验签、在支付过程中前端用户进行输入购买商品的支付金额这个时候被抓包了怎么办、接口加密、在已经是支付跳转这些时候，支付金额通过抓包被篡改怎么办等支付方面的问题。  </p><h2 id="微信特性"><a href="#微信特性" class="headerlink" title="微信特性"></a>微信特性</h2><ul><li>微信授权</li><li>微信支付</li><li>微信退款</li></ul><p>难点：需要吃透微信的官方文档；一定要按照文档的要求去做；而不是自己YY；  </p><h3 id="第一个关键点"><a href="#第一个关键点" class="headerlink" title="第一个关键点"></a>第一个关键点</h3><p>获取OpenId的方式：  </p><ul><li>手工方式（使用手工方式的原因目的在于仔细去看微信的官方文档）</li><li>利用第三方SDK（相较于手工方式，高级的方式）</li></ul><p>在实际开发当中使用推荐第三方SDK进行开发微信支付模块。  </p><p>第一步是要完成网页授权，只有通过授权才能够获取得到OpenId，而有了OpenId，才能够继续做下一系列的操作；所以获取OpenId是第一个关键点；  </p><p>强调：一定要单独、仔细、完整的看一遍，甚至看几遍都是可以的；</p><h3 id="微信网页授权"><a href="#微信网页授权" class="headerlink" title="微信网页授权"></a>微信网页授权</h3><p>注意一定要以微信官方文档为准，跟其思路进行。  </p><ul><li>官方文档<br>- <a href="http://mp.weixin.qq.com/wiki" target="_blank" rel="noopener">http://mp.weixin.qq.com/wiki</a><br>- <a href="https://pay.weixin.qq.com/wiki/doc/api/index.html" target="_blank" rel="noopener">https://pay.weixin.qq.com/wiki/doc/api/index.html</a></li><li>调试<br>- <a href="https://natapp.cn/" target="_blank" rel="noopener">https://natapp.cn/</a></li><li>第三方SDK<br>- <a href="https://github.com/Wechat-Group/weixin-java-tools" target="_blank" rel="noopener">https://github.com/Wechat-Group/weixin-java-tools</a></li></ul><p>微信官方文档当中，分有普通商户以及服务商版本；</p><p>简单介绍普通商户版本以及服务商版本(<a href="https://pay.weixin.qq.com/wiki/doc/api/index.html)：" target="_blank" rel="noopener">https://pay.weixin.qq.com/wiki/doc/api/index.html)：</a>  </p><p>普通商户即普通商家；个人身份是不能够申请微信支付的；必须有着企业的资质才能够进行申请；个人开发者如果想要进行开发调试的话可以向朋友借账号等方式；  </p><p>服务商版可以理解为微信的代理商；接入代理商则往往可能是微信方进行提供了技术以及一些更低费率等等；其实普通商户版本以及服务商版本差别并不太大；  </p><p>现在还多了一个银行服务商，我猜大概也就是银行资质的与微信进行合作；  </p><p>要介绍的是普通商户版本当中的公众号开发支付，即也就是选择JSAPI支付方式（用户通过微信扫码、关注公众号等方式进入商家H5页面，并在微信内调用JSSDK完成支付）；跳转至（<a href="https://pay.weixin.qq.com/wiki/doc/api/jsapi.php?chapter=7_1）；" target="_blank" rel="noopener">https://pay.weixin.qq.com/wiki/doc/api/jsapi.php?chapter=7_1）；</a>  </p><p>再次强调：仔细查阅官方API文档；其实不管任何支付也都是这样；比如说PayPal（想哭）；难点在于需要去完完整整的理清楚；  </p><p>往往很多时候的不成功不是由于自身开发不好，而是由于官方文档上并没有去仔细阅读；  </p><p>场景介绍、开发步骤、案例介绍….等等都需要仔细查阅，而不是只看一个这种；  </p><p>业务流程：<br> 微信客户端发起支付（展示、生成二维码等不太重要）<br> （重要的是）第四步，请求支付订单然后生成商户订单，再调用统一下单API（第五步）；<br>调用之后返回一个预付单信息；<br>注意是预付单信息；预付单信息返回之后；<br>需要去进行生成JSAPI页面；<br>即在另外一个页面上调用预支付的一些参数；并且签名然后发起支付；<br>发起支付之后，就会有一个异步通知商户支付结果（第十步，很重要）；<br>第一步下单返回的是一个预付单信息；并不是直接下单成功；<br>一般来说不仅仅是微信支付；支付宝也好，最终支付成功之后，会有一个异步的通知；支付完成之后，需要将相关的订单修改成已支付状态（成功/失败）；<br>根据异步通知来的；<br>也可以使用订单查询的API；进行查询订单支付结果；<br>如能接收到异步通知其实就可以进行修改支付结果了；</p><ul><li>文档说明<ul><li>阅读对象</li><li>版本说明</li></ul></li><li>术语<ul><li>支付模式</li><li>名词解释</li></ul></li><li>支付账户<ul><li>支付账户</li></ul></li><li>接口规则<ul><li>协议规则</li><li>参数规定</li><li>安全规范</li><li>获取OpenId</li></ul></li><li>JSAP支付<ul><li>场景介绍</li><li>案例介绍</li><li>开发步骤</li><li>业务流程</li><li>获取微信版本号</li><li>微信内H5调起支付</li><li>收货地址共享</li><li>支付常见问题</li></ul></li><li>API列表<ul><li>统一下单</li><li>查询订单</li><li>关闭订单</li><li>申请退款</li><li>查询退款</li><li>下载交易账单</li><li>下载资金账单</li><li>支付结果通知</li><li>退款结果通知</li><li>拉取订单评价数据</li></ul></li><li>最佳实践<ul><li>支付回调和查单实现指引</li><li>支付验收指引</li><li>网络排查指引</li><li>最佳安全实践</li><li>跨域冗灾方案</li><li>回调通知注意事项</li></ul></li><li>运营规范<ul><li>运营规范</li></ul></li><li>SDK与DEMO下载</li><li>联系我们</li></ul><h2 id="文档说明"><a href="#文档说明" class="headerlink" title="文档说明"></a>文档说明</h2><h3 id="阅读对象"><a href="#阅读对象" class="headerlink" title="阅读对象"></a>阅读对象</h3><p>链接：<a href="https://pay.weixin.qq.com/wiki/doc/api/jsapi.php?chapter=1_1" target="_blank" rel="noopener">https://pay.weixin.qq.com/wiki/doc/api/jsapi.php?chapter=1_1</a>  </p><p>本文阅读对象：商户系统（在线购物平台、人工收银系统、自动化智能收银系统或者其他）集成微信支付涉及的技术架构师、研发工程师、测试工程师、系统运维工程师等；</p><h3 id="版本说明"><a href="#版本说明" class="headerlink" title="版本说明"></a>版本说明</h3><p>链接：<a href="https://pay.weixin.qq.com/wiki/doc/api/jsapi.php?chapter=1_2" target="_blank" rel="noopener">https://pay.weixin.qq.com/wiki/doc/api/jsapi.php?chapter=1_2</a></p><ul><li>2019.05.06<ul><li>企业付款到银行卡接口，北京银行 银行编码从1032修改为4836；</li></ul></li><li>2019.03.12<ul><li>财付通10位海关注册编码变更为：4403169D3W（原编码440316T004不再使用）</li></ul></li><li>2019.03.06<ul><li>支付结果通知回调频率调整为15s / 15s / 30s / 3m / 10m / 20m / 30m / 30m / 30m / 30m / 60m / 3h / 3h / 3h / 6h / 6h / - 总计24h4m</li></ul></li><li>2019.01.10<ul><li>企业付款接口增加接口频率说明</li></ul></li><li>2019.01.03<ul><li>除合单支付外，字段spbill_create_ip（终端IP）支持IPV6和IPV4两种格式</li></ul></li><li>2019.12.24<ul><li>境内申请退款接口，退款原因下发条件更新</li><li>不超过1元的部分退款，将不会下发退款原因</li></ul></li><li>2018.12.12<ul><li>报关接口新增返回参数</li><li>verify_department-验核机构</li><li>verify_department_trade_id-验核机构交易流水号</li></ul></li><li>2018.12.10<ul><li>企业付款接口新增错误码；</li><li>NO_AUTH</li><li>企业付款备注（desc）参数中的敏感词会被转成字符*</li></ul></li><li>2018.12.09<ul><li>新增支付凭证处开放电子发票入口功能</li><li>统一下单、付款码支付、委托代扣接口新增电子发票开票入口开放参数</li></ul></li><li>2018.12.01<ul><li>企业付款接口新增错误码：<ul><li>PAY_CHANNEL_NOT_ALLOWED</li><li>RECV_ACCOUNT_NOT_ALLOWED</li><li>SENDNUM_LIMIT</li></ul></li></ul></li><li>2018.11.30<ul><li>企业付款接口规则变更：<ul><li>付款到零钱-商户号单日出款总额，由100万降低至10万</li><li>付款到零钱-商户号单人单日付款额度，由2万降低至5000</li><li>付款到银行卡-商户号单日出款总额，由100万降低至10万</li><li>付款到银行卡-商户号单人单日付款额度，由5万降低至2万</li><li>付款到零钱-新增两个商户资金安全相关的错误码</li><li>付款到银行卡-新增三个商户资金安全相关的错误码</li></ul></li></ul></li><li>2018.11.27<ul><li>付款码支付规则变更<ul><li>1000元以下免密支付次数从“每日5次”变更为“每日10次”</li></ul></li></ul></li><li>2018.11.12<ul><li>支付产品名字变更<ul><li>公众号支付-变更为-JSAPI支付</li><li>扫码支付-变更为-Native支付</li><li>刷卡支付-变更为-付款码支付</li></ul></li></ul></li><li>2018.07.06<ul><li>SDK&amp;DEMO更新</li></ul></li><li>2018.05.06<ul><li>报关API新增支付人信息校验结果返回</li></ul></li><li>2018.03.07<ul><li>新增H5支付API</li></ul></li><li>2018.02.15<ul><li>新增小程序支付API</li></ul></li><li>2017.10.15<ul><li>新增资金账单下载API</li></ul></li><li>2017.07.15<ul><li>新增退款结果通知API</li></ul></li><li>2017.07.13<ul><li>添加“场景信息 scene_info”字段</li><li>添加状态机图</li></ul></li><li>2017.06.07<ul><li>申请退款与查询退款接口删除参数：op_user_id</li><li>代金券接口删除参数：coupon_type、locked_num、used_num</li></ul></li><li>2017.03.20<ul><li>退款接口参数refund_id字段长度变更—原“28”位变更为“32”位</li><li>退款接口参数out_refund_no字段长度变更—原“28”位变更为“64”位</li></ul></li><li>2017.03.15<ul><li>更新单品优惠功能</li><li>更新银行类型列表</li></ul></li><li>2017.02.21<ul><li>下载对账单接口-新增充值退款对账单下载（bill_type=RECHARGE_REFUND）</li></ul></li><li>2016.10.11<ul><li>查询退款接口-退款状态-删除“NOTSURE”状态</li></ul></li><li>2016.09.09<ul><li>退款接口增加字段（可选）—-支持可用余额退款</li><li>增加退款错误码”余额不足“</li></ul></li><li>2016.08.24<ul><li>文档左侧导航栏增加“错误码”栏</li></ul></li><li>2015.07.29<ul><li>受理机构更名为：服务商</li><li>受理机构子商户更名为：特约商户</li></ul></li><li>2014.12.12<ul><li>更新付款码支付java版本Demo</li><li>企业红包更名为“代金券\立减优惠”</li><li>邮件中不附带证书，按照指引去商户系统下载</li></ul></li><li>2014.12.11<ul><li>发布新建版本，本文档适用于V3版本商户号接入微信支付，旧版本账号没有MCHID，需要登录商户系统升级（详细请参考升级指引）。</li></ul></li></ul><h2 id="术语"><a href="#术语" class="headerlink" title="术语"></a>术语</h2><h3 id="支付模式"><a href="#支付模式" class="headerlink" title="支付模式"></a>支付模式</h3><blockquote><p>支付产品  </p></blockquote><ol><li>付款码支付<br>付款码支付是用户展示微信钱包内的“刷卡条码/二维码”给商户系统扫描后直接完成支付的模式。主要应用线下面对面收银的场景。</li><li>Native支付<br>Native支付是商户系统按照微信支付协议生成支付二维码，用户再用微信“扫一扫”完成支付的模式。该模式适用于PC网站支付、实体店单品或者订单支付、媒体广告支付等场景。</li><li>JSAP支付<br>JSAP支付是用户在微信中打开商户的H5页面，商户在H5页面通过调用微信支付提供的JSAP接口调起微信支付模块完成支付。<br>应用场景：</li></ol><ul><li>用户在微信公众账号进入商家公众号，打开某个主页面，完成支付</li><li>用户的好友在朋友圈、聊天窗口等分项商家页面链接，用户点击链接打开商家页面，完成支付</li><li>将商户页面转换成二维码，用户扫描二维码后再微信浏览器中打开页面后完成支付</li></ul><ol start="4"><li>APP支付<br>APP支付又称移动端支付，是商户通过在移动端应用APP中集成开放SDK调起微信支付模块完成支付的模式。  </li><li>H5支付<br>H5支付主要是在手机、ipad等移动设备中通过浏览器唤起微信支付的支付产品。</li><li>小程序支付<br>小程序支付是专门被定义使用在小程序中的支付产品。目前在小程序中能且只能使用小程序支付的方式来唤起微信支付。</li></ol><h3 id="名词解释"><a href="#名词解释" class="headerlink" title="名词解释"></a>名词解释</h3><ol><li>微信公众平台</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;记录&quot;&gt;&lt;a href=&quot;#记录&quot; class=&quot;headerlink&quot; title=&quot;记录&quot;&gt;&lt;/a&gt;记录&lt;/h2&gt;&lt;p&gt;重点是复习一下微信支付流程。  &lt;/p&gt;
&lt;p&gt;昨天面试官问我，比如说支付验签、在支付过程中前端用户进行输入购买商品的支付金额这个时候被抓包
      
    
    </summary>
    
    
      <category term="支付" scheme="https://fengshana.github.io/categories/%E6%94%AF%E4%BB%98/"/>
    
    
      <category term="支付" scheme="https://fengshana.github.io/tags/%E6%94%AF%E4%BB%98/"/>
    
      <category term="微信" scheme="https://fengshana.github.io/tags/%E5%BE%AE%E4%BF%A1/"/>
    
  </entry>
  
  <entry>
    <title>想一想自己为什么要去面试？</title>
    <link href="https://fengshana.github.io/2020/04/20/%E4%BB%8A%E5%B9%B4%E8%A6%81%E4%B9%B0%E7%9A%84%E4%B8%9C%E8%A5%BF/"/>
    <id>https://fengshana.github.io/2020/04/20/%E4%BB%8A%E5%B9%B4%E8%A6%81%E4%B9%B0%E7%9A%84%E4%B8%9C%E8%A5%BF/</id>
    <published>2020-04-20T02:34:46.720Z</published>
    <updated>2020-04-22T23:38:14.632Z</updated>
    
    <content type="html"><![CDATA[<p>想想今年为什么自己想去面试？<br>气死我了；  </p><ol><li>我今年得换个手机了；</li><li>得交房租了；</li><li>日常开销；</li><li>我想买台相机；</li><li>我还想买把吉他；</li><li>我今年还想买台电脑；</li><li>想去一次漫展，等疫情好了的时候，跟朋友一起；</li><li>想去西塘，参加汉服文化节；等疫情好了的时候，跟朋友一起；</li><li>扩充一下自己的兴趣爱好；</li><li>我就不信了，我好歹也被人喊过老师，我还面试不上一份10k的java开发工程师了？</li><li>每次面试就那么几个问题，我花一个星期还搞不定？</li><li>我学东西的能力有这么差？</li><li>好歹自己的脑子里面也不全是水啊？</li><li>自信一点，很难吗？有点底气行吗？别人这么信任你？怎么跟个扶不起的刘阿斗似的？</li><li>再不去认认真真的面试，等会儿你妹都高考完了我跟你讲；</li><li>再不认真面试，我看你怎么交代吧？？？！！！；老是犹犹豫豫有什么好的，都讲了几百回了，要你果决一点，果断一点，你不听；</li><li>好了，不说了，好好面试，好好加油；</li><li>每次不想看视频的时候，就看看这里，自己怎么写的，自己怎么去做；我倒是看你浑浑噩噩要躲到什么时候去；</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;想想今年为什么自己想去面试？&lt;br&gt;气死我了；  &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;我今年得换个手机了；&lt;/li&gt;
&lt;li&gt;得交房租了；&lt;/li&gt;
&lt;li&gt;日常开销；&lt;/li&gt;
&lt;li&gt;我想买台相机；&lt;/li&gt;
&lt;li&gt;我还想买把吉他；&lt;/li&gt;
&lt;li&gt;我今年还想买台电脑；&lt;/
      
    
    </summary>
    
    
      <category term="about" scheme="https://fengshana.github.io/categories/about/"/>
    
    
      <category term="心态" scheme="https://fengshana.github.io/tags/%E5%BF%83%E6%80%81/"/>
    
  </entry>
  
  <entry>
    <title>Git工作流学习笔记</title>
    <link href="https://fengshana.github.io/2020/04/20/%E9%9D%A2%E8%AF%95%E9%A2%98/Git%E5%B7%A5%E4%BD%9C%E6%B5%81%E5%AD%A6%E4%B9%A0/"/>
    <id>https://fengshana.github.io/2020/04/20/%E9%9D%A2%E8%AF%95%E9%A2%98/Git%E5%B7%A5%E4%BD%9C%E6%B5%81%E5%AD%A6%E4%B9%A0/</id>
    <published>2020-04-20T02:21:22.445Z</published>
    <updated>2020-04-24T01:36:46.271Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Git工作流指南-分布式版本控制系统"><a href="#Git工作流指南-分布式版本控制系统" class="headerlink" title="Git工作流指南 分布式版本控制系统"></a>Git工作流指南 分布式版本控制系统</h2><p>观看笔记：<a href="https://www.bilibili.com/video/BV1dW411U7ER?p=1" target="_blank" rel="noopener">https://www.bilibili.com/video/BV1dW411U7ER?p=1</a><br>老师笔记： <a href="http://www.funtl.com/zh/git/" target="_blank" rel="noopener">http://www.funtl.com/zh/git/</a>  </p><h2 id="Git简介"><a href="#Git简介" class="headerlink" title="Git简介"></a>Git简介</h2><ul><li>什么是版本控制系统</li><li>什么是Git</li><li>如何安装Git</li></ul><h3 id="什么是版本控制系统"><a href="#什么是版本控制系统" class="headerlink" title="什么是版本控制系统"></a>什么是版本控制系统</h3><h4 id="为什么需要版本控制"><a href="#为什么需要版本控制" class="headerlink" title="为什么需要版本控制"></a>为什么需要版本控制</h4><p>在软件开发过程中，每天都会产生新的代码，代码合并的过程中可能会出现如下问题：  </p><ul><li>代码被覆盖或丢失；</li><li>代码写的不理想，希望还原之前的版本；</li><li>希望知道与之前版本的差别；</li><li>是谁修改了代码以及为什么修改；</li><li>发版时希望分成不同的版本（测试版本、发行版本等）；</li></ul><p>因此，希望有一种机制，能够帮助我们：  </p><ul><li>可以随时回滚到之前的版本；</li><li>协同开发时，不会覆盖别人的代码；</li><li>留下修改记录，以便随时查看；</li><li>发版时可以方便的管理不同的版本；</li></ul><h4 id="什么是版本控制系统-1"><a href="#什么是版本控制系统-1" class="headerlink" title="什么是版本控制系统"></a>什么是版本控制系统</h4><p>一个标准的版本控制系统 Version Control System（VCS），通常需要有以下功能：  </p><ul><li>能够创建Repository（仓库），用来保存代码；</li><li>协同开发时，方便将代码分发给团队成员；</li><li>记录每次修改代码的内容、时间、原因等信息；</li><li>能够创建Branch（分支），可以根据不同的场景进行开发；</li><li>能够创建Tag（标签），建立项目里程碑；</li></ul><h4 id="版本控制系统的发展史"><a href="#版本控制系统的发展史" class="headerlink" title="版本控制系统的发展史"></a>版本控制系统的发展史</h4><p>版本控制系统发展至今有几种不同的模式：  </p><h5 id="Local-VCS"><a href="#Local-VCS" class="headerlink" title="Local VCS"></a>Local VCS</h5><p>本地使用 复制/粘贴 的方式进行管理，缺点是无法协同开发</p><h5 id="Gentralized-VCS（Lock，悲观锁）"><a href="#Gentralized-VCS（Lock，悲观锁）" class="headerlink" title="Gentralized VCS（Lock，悲观锁）"></a>Gentralized VCS（Lock，悲观锁）</h5><p>中央集中式版本控制系统团队共用仓库，当某人需要编辑文件时，进行锁定，以免其他人同时编辑时造成冲突，但不是很方便，其他人需要排队才能编辑文件，如果有人编辑了很久或是忘记解锁会造成其他人长时间等待的情况；  </p><p>如何理解悲观锁：总有刁民想害朕。<br>我要是面试这么答，会怎么样？  </p><h5 id="Gentralized-VCS（Merge，乐观锁）"><a href="#Gentralized-VCS（Merge，乐观锁）" class="headerlink" title="Gentralized VCS（Merge，乐观锁）"></a>Gentralized VCS（Merge，乐观锁）</h5><p>中央集中式版本控制系统团队共用仓库，不采用悲观锁方式来避免冲突，而是时候发现如果别人也修改相同文件（冲突），再进行手动修改解决。  </p><p>有很多VCS属于这种类型，如：CVS、Subversion、Perforce等；  </p><p>中央集中式版本控制系统的共同问题是，做任何操作都需要和服务器同步，如果服务器宕机则会造成无法继续工作的窘迫；  </p><p>如何理解乐观锁：天网恢恢疏而不漏。<br>我想给自己两锤子；  </p><h5 id="Distributed-VCS"><a href="#Distributed-VCS" class="headerlink" title="Distributed VCS"></a>Distributed VCS</h5><p>分布式版本控制系统，本地也拥有完整的代码仓库，就不会出现上述集中式管理的问题，即使没有网络，依然可以commit和看log，也无需担心服务器同步问题；  </p><p>如：Git、Mercurial、Bazaar等就属于分布式版本控制系统。缺点是功能比较复杂，上手需要一定的学习时间；  </p><p>（分布式版本控制系统都有一个本地化的这样一个概念；区块链系统也能称之为一个分布式系统）  </p><h2 id="Git工作流"><a href="#Git工作流" class="headerlink" title="Git工作流"></a>Git工作流</h2><p>Git工作流：代码管理的工作流程、方式  </p><ul><li>Git工作流简介</li><li>集中式工作流</li><li>功能分支工作流</li><li>GitFlow工作流</li><li>Forking工作流</li><li>Pull Requests</li></ul><h3 id="Git工作流简介"><a href="#Git工作流简介" class="headerlink" title="Git工作流简介"></a>Git工作流简介</h3><p>工作流有各式各样的用法，但也正因此使得在实际工作中如何上手使用增加了难度。  </p><p>这篇指南通过总览公司团队中最常用的集中Git工作流让大家可以上手使用；  </p><p>在阅读的过程中请记住，本文中的集中工作流是作为方案指导而不是条例规定，在展示了各种工作流可能的用法后，可以从不同的工作流中挑选或揉合出一个满足自己需求的工作流；  </p><h4 id="集中式工作流"><a href="#集中式工作流" class="headerlink" title="集中式工作流"></a>集中式工作流</h4><p><img src="http://r.photo.store.qq.com/psc?/V13IdniL4CDhqM/TCfiP1YaPeRT4Jil9RANXyIW2ezMoDhUXO*s5pTGue2N753CPNKcE42sPIP6l3d0rpu2DZjcGmC.Kga3cDUruqQwuWnPoetw.KevCfGSm5U!/r" alt="集中式工作流"></p><p>如果开发团队成员已经很熟Subversion，集中式工作流让你无需去适应一个全新流程就可以体验Git带来的收益。  </p><p>这个工作流也可以作为向更Git风格工作流迁移的友好过渡。  </p><p>（个人、三五个人的小团队）  </p><h4 id="功能分支工作流"><a href="#功能分支工作流" class="headerlink" title="功能分支工作流"></a>功能分支工作流</h4><p><img src="http://r.photo.store.qq.com/psc?/V13IdniL4CDhqM/TCfiP1YaPeRT4Jil9RANX.QLkS1nyIjv6HHWnbV4dX7srariw7MEQpLi1gOAxL3ou18PqhQZr1mrBrEaIbVs5JuQWzjNbAd8lfxuJK8OGPM!/r" alt="功能分支工作流"></p><p>功能分支工作流以集中式工作流为基础，不同的是为各个新功能分配一个专门的分支来开发。  </p><p>这样可以在把新功能继承到正式项目前，用Pull  Requests的方式讨论变更；  </p><p>（达到约12个人的团队）  </p><h4 id="Git-Flow工作流"><a href="#Git-Flow工作流" class="headerlink" title="Git Flow工作流"></a>Git Flow工作流</h4><p>Git Flow工作流通过为功能开发、发布准备和维护分配独立的分支，让发布迭代过程更顺畅。  </p><p>严格的分支模型也为大型项目提供了一些非常必要的结构。  </p><p>（整个公司，这么一个团队的规模）  </p><h4 id="Forking工作流"><a href="#Forking工作流" class="headerlink" title="Forking工作流"></a>Forking工作流</h4><p><img src="http://r.photo.store.qq.com/psc?/V13IdniL4CDhqM/TCfiP1YaPeRT4Jil9RANX7NQkdqkFQWuuELLHKCcql5ABKaPDZFUejww*HH9qtsi8qr7IlATkqBkQ9PV1LJ9rT6faqWzcfgS3pJZnzLSzVg!/r" alt="Forking工作流"></p><p>Forking工作流是分布式工作流，充分利用了Git在分支和克隆上的优势。  </p><p>可以安全可靠地管理大团队的开发者（developer），并能接受不信任贡献者（contributor）的提交。  </p><p>（跨国合作。跨国团队的使用，一般用于Forking工作流）  </p><h4 id="Pull-Requests"><a href="#Pull-Requests" class="headerlink" title="Pull Requests"></a>Pull Requests</h4><p><img src="http://r.photo.store.qq.com/psc?/V13IdniL4CDhqM/TCfiP1YaPeRT4Jil9RANXzYbgZ.02.6Smac50apszMyWGwg89uQEVJSVU01e69u2Dts1al5lueZ4HgBrr.WyV.0GtO*ZTdT3LpQtilbX2Vk!/r" alt="Pull Requests"></p><p>功能分支工作流、GitFlow工作流、Forking工作流都会穿插一个Pull Requests的一个东西。  </p><p>Pull Requests通常称为请求合并（Merge Pull Requests）；  </p><p>Pull Requests让开发者更方便地进行协作的功能，提供了友好的Web界面可以在提议的修改合并到正式项目之前对修改进行讨论。  </p><p>（相当于一个评论系统）；</p><h3 id="集中式工作流-1"><a href="#集中式工作流-1" class="headerlink" title="集中式工作流"></a>集中式工作流</h3><p>转到分布式版本控制系统看起来像个令人生畏的任务，但不改变已用的工作流你也可以用上Git带来的收益。  </p><p>团队可以用和Subversion完全不变的方式来开发项目。  </p><p>但使用Git加强开发的工作流，Git比SVN有几个优势。  </p><p>（1）首先，每个开发者可以有属于自己的整个工程的本地拷贝。隔离的环境让各个开发者的工作和项目的其他部分（修改）独立开来——-即自由地提交到自己的本地仓库，先完全忽略上游的开发，直到方便的时候再把修改反馈上去。  </p><p>（2）其次，Git提供了强壮的分支和合并模型。不像SVN，Git的分支设计成可以作为一种用来在仓库之间集成代码和分享修改的【失败安全】的机制。  </p><h4 id="工作方式"><a href="#工作方式" class="headerlink" title="工作方式"></a>工作方式</h4><p><img src="http://r.photo.store.qq.com/psc?/V13IdniL4CDhqM/TCfiP1YaPeRT4Jil9RANX58rubGqwbukXS4rvP.hcw8vVDFpcMEKyanOzFC60vYY7EfnKsFaNa8DYFcGkpbCkTOCu8b0QXObUxn8ABvZn4U!/r" alt="工作方式"></p><p>像Subversion一样，集中式工作流以中央仓库作为项目所有修改的单点实体。  </p><p>相比SVN缺省的开发分支trunk，Git叫做master，所有修改提交到这个分支上。  </p><p>该工作流只用到master这一个分支。  </p><p>开发者开始先克隆中央仓库。  </p><p>在自己的项目拷贝中，像SVN一样的编辑文件和提交修改；  </p><p>但修改是存在本地的，和中央仓库完全隔离的；  </p><p>开发者可以把和上游的同步延后到一个方便时间点；  </p><p>要发布修改到正式项目中，开发者要把本地master分支的修改【推（push）】到中央仓库中。  </p><p>这相当于svn  commit操作，但push操作会把所有还不在中央仓库的本地提交都推上去。  </p><h4 id="解决冲突"><a href="#解决冲突" class="headerlink" title="解决冲突"></a>解决冲突</h4><p><img src="http://r.photo.store.qq.com/psc?/V13IdniL4CDhqM/TCfiP1YaPeRT4Jil9RANX7NAq94egRJ5nBPO8Co87th*P0cTdtAGYXp43mklxBxvhd73.i5d8Lm58WdsFYNrarV7XZaiqfrmkd3gUFAFW0o!/r" alt="解决冲突"></p><p>中央仓库代表了正式项目，所以提交历史应该被尊重且是稳定不变的。  </p><p>如果开发者本地的提交历史和中央仓库有分歧，Git会拒绝push提交否则会覆盖已经在中央库的正式提交。  </p><p>在开发者提交自己功能修改到中央库前，需要先fetch在中央库的新增提交，rebase自己提交到中央库提交历史之上。  </p><p>这样做的意思是在说，【我要把自己的修改加到别人已经完成的修改上。】最终的结果是一个完美的线性历史，就像以前的SVN的工作流中一样；  </p><p>如果本地修改和上游提交有冲突，Git会暂停rebase过程，给你手动解决冲突的机会。  </p><p>Git解决合并冲突，用和生成提交一样的git  status和git add命令，很一致方便。  </p><p>还有一点，如果解决冲突时遇到麻烦，Git可以很简单中止整个rebase操作，重来一次（或者让别人来帮助解决）。  </p><h4 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h4><p>一起逐步分解来看看一个常见的小团队如何用这个工作流来协作的。  </p><p>有两个开发者小明和小红，看他们是如何开发自己的功能并提交到中央仓库上的。  </p><h5 id="有人先初始化好中央仓库"><a href="#有人先初始化好中央仓库" class="headerlink" title="有人先初始化好中央仓库"></a>有人先初始化好中央仓库</h5><p><img src="http://r.photo.store.qq.com/psc?/V13IdniL4CDhqM/TCfiP1YaPeRT4Jil9RANX9UbT3uXKi44e*o.QOIDNJOk403REJAlPsZkIyST70GEweXbAbks3cFR7TqiVMFHAtTg9MXSvYT6HSyIH1eLii4!/r" alt="有人先初始化好中央仓库"></p><p>第一步，有人在服务器上创建好中央仓库。  </p><p>如果是新项目，可以初始化一个空仓库；否则要导入已有的Git或SVN仓库。  </p><p>中央仓库应该是个裸仓库（bare repository），即没有工作目录（working directory）的仓库。  </p><h5 id="所有人克隆中央仓库"><a href="#所有人克隆中央仓库" class="headerlink" title="所有人克隆中央仓库"></a>所有人克隆中央仓库</h5><p><img src="http://r.photo.store.qq.com/psc?/V13IdniL4CDhqM/TCfiP1YaPeRT4Jil9RANX8lXRlkamDF*h*SxpL42PuUsH4aIULseTwL66K.p5pWkVzGz*Bh8Nih.I7qaVf43t7zoP8GGUp44vHNS*NRccIY!/r" alt="所有人克隆中央仓库"></p><p>下一步，各个开发者创建整个项目的本地拷贝。  </p><p>通过git clone命令完成。  </p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="keyword">clone</span>  <span class="title">https</span>://github.com/path/to/repo.git</span><br></pre></td></tr></table></figure><p>基于后续会持续和克隆的仓库做交互的假设，克隆仓库时Git会自动添加远程别名origin指回【父】仓库。  </p><p>github即git的中央仓库；版本控制系统有一个版本仓库。  </p><p>github上public即开源，公开的意思，代码开源。  </p><p>如果是私有private则需要进行CreditCard 信用卡支付相应的金额；收费；  </p><h5 id="小明开发功能"><a href="#小明开发功能" class="headerlink" title="小明开发功能"></a>小明开发功能</h5><p><img src="http://r.photo.store.qq.com/psc?/V13IdniL4CDhqM/TCfiP1YaPeRT4Jil9RANX3cSXX6681Ge8WeUymk3FFjspNtDVB3t7XeHuVufMD05ZhJzX9OyWJDCYAlloD65QJLNRkDaLpYfFLKjESAA0SM!/r" alt="小明开发功能"></p><p>在小明的本地仓库中，他使用标准的Git过程开发功能：编辑、暂存（Stage）和提交。  </p><p>如果你不熟悉暂存区（Stageing Area），这里说明一下：暂存区的用来准备一个提交，但可以不用把工作目录中所有的修改内容都包含进来。  </p><p>这样可以创建一个高度聚焦的提交，尽管本地修改很多内容。  </p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git status <span class="comment"># 查看本地仓库的修改状态</span></span><br><span class="line">git <span class="keyword">add</span><span class="bash"> <span class="comment"># 暂存文件</span></span></span><br><span class="line">git commit <span class="comment"># 提交文件</span></span><br></pre></td></tr></table></figure><p>请记住，因为这些命令生成的是本地提交，小明可以按自己需求反复操作多次，而不用担心中央仓库有了什么操作。  </p><p>对需要多个更简单更原子分块的大功能，这个做法是很有用的；  </p><h5 id="小红开发功能"><a href="#小红开发功能" class="headerlink" title="小红开发功能"></a>小红开发功能</h5><p><img src="http://r.photo.store.qq.com/psc?/V13IdniL4CDhqM/TCfiP1YaPeRT4Jil9RANX3AhXN0w*Kh7FwIloQiq3PMOUwp*anqXsBqPo.yaxL1hWnR.kZm*XseG5RhBNtuoS8.PVSKuKSdHEw1x7MixOxA!/r" alt="小红开发功能"></p><p>与此同时，小红在自己的本地仓库中用相同的编辑、暂存和提交过程开发功能。  </p><p>和小明一样，她也不关心中央仓库有没有新提交；当然更不关心小明在他的本地仓库中的操作，因为所有本地仓库都是私有的。  </p><h5 id="小明发布功能"><a href="#小明发布功能" class="headerlink" title="小明发布功能"></a>小明发布功能</h5><p><img src="http://r.photo.store.qq.com/psc?/V13IdniL4CDhqM/TCfiP1YaPeRT4Jil9RANX2DDMKOOXZiA6a0j82260kNXKGqba7MbMMt5OmvuzTfK3A*Lxszb8CTdFEjjZXvIDOZez3cKxhQHt2dZMB.G9S4!/r" alt="小明发布功能"></p><p>一旦小明完成了他的功能开发，会发布他的本地提交到中央仓库中，这样其他团队成员可以看到他的修改。  </p><p>他可以用下面的git push  命令：  </p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">push</span> <span class="built_in">origin</span> master</span><br></pre></td></tr></table></figure><p>注意，origin是小明克隆仓库时Git创建的远程中央仓库别名。  </p><p>master参数告诉Git推送的分支。  </p><p>由于中央仓库自从小明克隆以来还没有被更新过，所以push操作不会有冲突，成功完成。  </p><h5 id="小红试着发布功能"><a href="#小红试着发布功能" class="headerlink" title="小红试着发布功能"></a>小红试着发布功能</h5><p><img src="http://r.photo.store.qq.com/psc?/V13IdniL4CDhqM/TCfiP1YaPeRT4Jil9RANX49Hssuuk2yHbmsbkSdUuOtLRbTxRlP3xEORKm5txDWaExKbZyYnyzyBD0oDqcjETeUWkabVFxZpo*3gs9yQWHs!/r" alt="小红试着发布功能"></p><p>一起来看看在小明发布修改后，小红push修改会怎么样？  </p><p>她使用完全一样的push命令：  </p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">push</span> <span class="built_in">origin</span> master</span><br></pre></td></tr></table></figure><p>但她的本地历史已经和中央仓库有分歧了，Git拒绝操作并给出下面很长的出错消息：  </p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">error: failed <span class="keyword">to</span> push some refs <span class="keyword">to</span> <span class="string">'/path/to/repo.git'</span></span><br><span class="line">hin<span class="variable">t:</span> Updates were rejected because the tip of your current branch <span class="keyword">is</span> behind</span><br><span class="line">hin<span class="variable">t:</span> its remote counterpart. Merge the remote <span class="keyword">changes</span>(<span class="keyword">e</span>.g. <span class="string">'git pull'</span>)</span><br><span class="line">hin<span class="variable">t:</span> before pushing again.</span><br><span class="line">hin<span class="variable">t:</span> See the <span class="string">'Note about fast-forwards'</span> in <span class="string">'git push --help'</span> <span class="keyword">for</span> details.</span><br><span class="line">....</span><br></pre></td></tr></table></figure><p>这避免了小红覆写正式的提交。  </p><p>她要先pull小明的更新到她本地仓库合并上她的本地修改后，再重试。  </p><h5 id="小红在小明的提交之上rebase"><a href="#小红在小明的提交之上rebase" class="headerlink" title="小红在小明的提交之上rebase"></a>小红在小明的提交之上rebase</h5><p>小红用git pull 合并上游的修改到自己的仓库中。  </p><p>这条命令类似svn update ——-拉取所有上游提交命令到小红的本地仓库，并尝试和她本地修改合并。  </p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull <span class="comment">--rebase origin master</span></span><br></pre></td></tr></table></figure><p><img src="http://r.photo.store.qq.com/psc?/V13IdniL4CDhqM/TCfiP1YaPeRT4Jil9RANXyi6Y8l5sb1aRwQRlb0CiRDNdgM9NZtfk5D41PvfJEccriZP3FT6WnQ4PWKvEqz*e7LpBOfcXui.l9nUXAPUgd4!/r" alt="images"></p><p>–rebase 选项告诉Git把小红的提交移到同步了中央仓库修改后的master分支的顶部；  </p><p>如果忘了加这个选项，pull操作仍然可以完成，但每次pull操作要同步中央仓库别人修改时，提交历史会以一个多余的【合并提交】结尾。  </p><p>对于集中式工作流，最好是使用rebase而不是生成一个合并提交。  </p><h5 id="小红解决合并冲突"><a href="#小红解决合并冲突" class="headerlink" title="小红解决合并冲突"></a>小红解决合并冲突</h5><p><img src="http://r.photo.store.qq.com/psc?/V13IdniL4CDhqM/TCfiP1YaPeRT4Jil9RANX7FxPBYYYsKKPOWXqC*0rCPhZKJRqU86pJwCJIVi3g31ZcpHEH2b76upvPK6lrEAQ9UWa9VqeFjlEC4dX2PAHTw!/r" alt="小红解决合并冲突"></p><p>rebase操作过程是把本地提交一次一个地迁移到更新了的中央仓库master分支之上，这意味着可能要解决在迁移某个提交时出现的合并冲突，而不是解决包含了所有提交的大型合并时所出现的冲突。  </p><p>这样的方式让你尽可能保持每个提交的聚焦和项目历史的整洁。  </p><p>反过来，简化了哪里引入Bug的分析，如果有必要，回滚修改也可以做到对项目影响最小。  </p><p>如果小红和小明的功能是相关的，不大可能在rebase过程中有冲突。  </p><p>如果有，Git在合并有冲突的提交出暂停rebase过程，输出下面的信息并带上相关的指令：  </p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CONFLICT</span> (content): Merge <span class="keyword">conflict</span> <span class="keyword">in</span></span><br></pre></td></tr></table></figure><p><img src="http://r.photo.store.qq.com/psc?/V13IdniL4CDhqM/TCfiP1YaPeRT4Jil9RANX5fiCqpawh2bvFoyuusAOSGHKu5sc59EGgvKP1aVmHVmey3BEhEwMSvuvtOXh1oSZU1zNvf5QV2G*SN2a1sgwiA!/r" alt="images"></p><p>Git 很赞的一点是，任何人可以解决他自己的冲突。  </p><p>在这个例子中，小红可以简单的运行 git status 命令来查看哪里有问题。  </p><p>冲突文件列在 Unmerged paths（未合并路径）一节中：  </p><figure class="highlight leaf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># Unmerged paths：</span><br><span class="line"><span class="function"><span class="keyword">#</span><span class="params">(<span class="variable">use</span> <span class="string">"git reset HEAD &lt;some-file&gt;..."</span> <span class="variable">to</span> <span class="variable">unstage</span>)</span></span></span><br><span class="line"><span class="function"><span class="keyword">#</span><span class="params">(<span class="variable">use</span> <span class="string">"git add/rm &lt;some-file&gt;..."</span> <span class="variable">as</span> <span class="variable">appropriate</span> <span class="variable">to</span> <span class="variable">mark</span> <span class="variable">resolution</span>)</span></span></span><br><span class="line">#</span><br><span class="line"># both modified:&lt;some-file&gt;</span><br></pre></td></tr></table></figure><p>接着小红编辑这些文件。  </p><p>修改完成后，用老套路暂存这些文件，并让git rebase 完成剩下的事情：  </p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git <span class="keyword">add</span></span><br><span class="line"><span class="bash">git rebase --<span class="built_in">continue</span></span></span><br></pre></td></tr></table></figure><p>要做的就这些了。  </p><p>Git会继续一个一个的合并后面的提交，如其他的提交有冲突就重复这个过程。  </p><p>如果你碰到了冲突，但是发现搞不定，不要惊慌。  </p><p>只要执行下面这条命令，就可以回到你执行git pull –rebase命令前的样子：  </p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git rebase <span class="comment">--abort</span></span><br></pre></td></tr></table></figure><h5 id="小红成功发布功能"><a href="#小红成功发布功能" class="headerlink" title="小红成功发布功能"></a>小红成功发布功能</h5><p><img src="http://r.photo.store.qq.com/psc?/V13IdniL4CDhqM/TCfiP1YaPeRT4Jil9RANX0kBnWeNL8ejRYU6ro4.2u6jfdf4WmDKrAtmoAnmJ9TQ4sDBTQl0i3xlqRsJMoYZns72c0lo3zm5ObKWH4CoUG0!/r" alt="小红成功发布功能"></p><p>小红完成和中央仓库的同步之后，就能成功发布她的修改了。  </p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">push</span> <span class="built_in">origin</span> master</span><br></pre></td></tr></table></figure><h5 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h5><p>如你所见，仅仅使用几个Git命令，就可以模拟出传统Subversion开发环境。  </p><p>对于要从SVN迁移过来的团队来说这太好了，但是没有发挥出Git分布式本质的优势。  </p><p>如果你的团队适应了集中式工作流，但想要更流畅的协作效果，绝对值得探索一下功能分支工作流的收益。  </p><p>通过为一个功能分配一个专门的分支，能够做到一个新增功能集成到正式项目之前对新功能进行深入讨论。  </p><h3 id="功能分支工作流-1"><a href="#功能分支工作流-1" class="headerlink" title="功能分支工作流"></a>功能分支工作流</h3><p>一旦玩转了集中式工作流，在开发过程中可以很简单地加上功能分支，用来鼓励开发者之间协作和简化交流。  </p><p>功能分支工作流背后的核心思路是所有的功能开发应该在一个专门的分支，而不是在master分支上。  </p><p>这个隔离可以方便多个开发者在各自的功能上开发而不会弄乱主干代码。  </p><p>另外，也保证了master分支的代码一定不会是有问题的，极大有利于集成环境。  </p><p>功能开发隔离也让pull  requests工作流成为可能， pull requests工作流能为每一个分支发起一个讨论，在分支合入正式项目之前，给其它开发者有表示赞同的机会。  </p><p>另外，如果你在功能开发中有问题卡出了，可以开一个pull Requests来向同学们征求建议。  </p><p>这些做法的重点就是，pull Requests让团队成员之间互相评论工作变成非常方便！  </p><h4 id="工作方式-1"><a href="#工作方式-1" class="headerlink" title="工作方式"></a>工作方式</h4><p>功能分支工作流仍然用中央仓库，并且master分支还是代表了正式项目的历史。  </p><p>但不是直接提交本地历史到各自的本地master分支，开发者每次在开始新功能前先创建一个新分支。  </p><p>功能分支应该有个描述性的名字，比如 animated-menu-items 或者  issue-#1061，这样可以让分支有个清楚且高聚焦的用途。  </p><p>在master分支和功能分支之间，Git是没有技术上的区别，所以开发者可以用和集中式工作流完全一样的方式编辑、暂存和提交修改到功能分支上。  </p><p>另外，功能分支也可以（且应该）push到中央仓库中。  </p><p>这样不修改正是代码就可以和其他开发者分享提交的功能。  </p><p>由于master仅有的一个【特殊】分支，在中央仓库上存在多个功能分支不会有任何问题。  </p><p>当然这样做也可以很方便地备份各自的本地提交。  </p><h4 id="Pull-Requests-1"><a href="#Pull-Requests-1" class="headerlink" title="Pull Requests"></a>Pull Requests</h4><p>功能分支除了可以隔离功能的开发，也使得通过 Pull Requests讨论变更称为可能。  </p><p>一旦某个开发完成一个功能，不是立即合并到master，而是push到中央仓库的功能分支上并发起一个Pull Requests的请求去合并并修改到master。  </p><p>在修改成为主干代码之前，这让其他的开发者有机会先去Review变更。  </p><p>Code Review是Pull Requests的一个重要的收益。  </p><p>但是pull Requests目的是讨论代码一个通用方式。  </p><p>你可以把Pull  Requests作为专门给某个分支的讨论。  </p><p>这意味着可以在更早的开发过程中就可以进行Code Review。  </p><p>比如，一个开发者开发功能需要帮助时，要做的就是发起一个Pull Requests，相关的人就会自动收到通知，在相关的提交旁边能看到需要帮助解决的问题。  </p><p>一旦Pull  Requests被接受了，发布功能要做的就和集中式工作流就很像了。  </p><p>（1）首先，确定本地的master分支和上游的master分支是同步的。  </p><p>（2）然后合并功能分支到本地master分支，并push已经更新的本地master分支到中央仓库。</p><h4 id="示例-1"><a href="#示例-1" class="headerlink" title="示例"></a>示例</h4><p>下面的示例演示了如何把Pull Requests作为Code Review的方式，但注意Pull Requests可以用于很多其他的目的。  </p><h5 id="小红开始开发一个新功能"><a href="#小红开始开发一个新功能" class="headerlink" title="小红开始开发一个新功能"></a>小红开始开发一个新功能</h5><p>在开始开发功能之前，小红需要一个独立的分支。  </p><p>使用下面的命令新建一个分支。  </p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">git</span> checkout -<span class="keyword">b </span><span class="keyword">marys-feature </span>master</span><br></pre></td></tr></table></figure><p>这个命令检出一个基于master名为marys-feature的分支，Git的-b选项表示如果分支还不存在则新建分支。  </p><p>这个新分支上，小红按照老套路编辑、暂存和提交修改，按需要提交以实现功能：  </p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">git</span>  <span class="string">status</span></span><br><span class="line"><span class="attr">git</span> <span class="string">add</span></span><br><span class="line"><span class="attr">git</span> <span class="string">commit</span></span><br></pre></td></tr></table></figure><h5 id="小红要去吃个午饭"><a href="#小红要去吃个午饭" class="headerlink" title="小红要去吃个午饭"></a>小红要去吃个午饭</h5><p>（两个人、多个人同时开发，称之为协同开发）  </p><p>仓库：github、码云、码市、gitlab  </p><p>review 代码审核；  </p><p>早上小红为新功能添加了一些提交。  </p><p>去吃午饭前，push功能分支到中央仓库是很好的做法，这样可以方便地备份，如果和其他开发协作，也让他们可以看到小红的提交。  </p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">push</span> -u <span class="built_in">origin</span> marys-<span class="built_in">feature</span></span><br></pre></td></tr></table></figure><p>这条命令  push marys-feature 分支到中央仓库（origin），-u选项设置本地分支去跟踪远程对应的分支。  </p><p>设置好跟踪的分支后，小红就可以使用git push 命令省去指定推送分支的参数。  </p><h5 id="小红完成功能开发"><a href="#小红完成功能开发" class="headerlink" title="小红完成功能开发"></a>小红完成功能开发</h5><p>小红吃完午饭回来，完成整个功能的开发。  </p><p>在合并到master之前，她发起一个Pull Requests让团队的其他人知道功能已经完成。  </p><p>但是首先，她要确认中央仓库中已经有她最近的提交。  </p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="keyword">push</span></span><br></pre></td></tr></table></figure><p>然后，在她的Git GUI客户端中发起Pull Request，请求合并marys-feature到master，团队成员会自动收到通知。  </p><p>Pull Request很酷的是可以在相关的提交旁边显示评注，所以你可以很对某个变更集提问。  </p><h5 id="小黑收到Pull-Request"><a href="#小黑收到Pull-Request" class="headerlink" title="小黑收到Pull  Request"></a>小黑收到Pull  Request</h5><p>小黑收到Pull Request后会查看marys-feature的修改。  </p><p>决定在合并到正式项目前是否要做些修改，且通过Pull Request和小红来回的讨论。  </p><h5 id="小红再做修改"><a href="#小红再做修改" class="headerlink" title="小红再做修改"></a>小红再做修改</h5><p>要在做修改，小红用和功能第一个迭代完全一样的过程。  </p><p>编辑、暂存、提交并push更新到中央仓库。  </p><p>小红这些活动都会显示在Pull Request上，小黑可以断续做评注。  </p><p>如果小黑有需要，也可以把marys-feature分支拉到本地，自己来修改，他加的提交也会一样显示在Pull Request上。  </p><h5 id="小红发布她的功能"><a href="#小红发布她的功能" class="headerlink" title="小红发布她的功能"></a>小红发布她的功能</h5><p>一旦小黑可以接受Pull Request，就可以合并功能到稳定项目代码中（可以由小黑或者是小红来做这个操作）：  </p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">git</span> <span class="string">checkout master</span></span><br><span class="line"><span class="attr">git</span> <span class="string">pull</span></span><br><span class="line"><span class="attr">git</span> <span class="string">pull origin marys-feature</span></span><br><span class="line"><span class="attr">git</span> <span class="string">push</span></span><br></pre></td></tr></table></figure><p>无论谁来做合并，首先要检出master分支并确认它是最新的。  </p><p>然后执行 git pull origin marys-feature 合并 marys-feature 分支到已经和远程一直的本地 master分支。  </p><p>你可以使用简单 git merge marys-feature命令，但是前面的命令可以保证总是最新的新功能分支。  </p><p>最后更新的master分支要重新push回到origin。  </p><p>这个过程常常会生成一个和并提交。  </p><p>有些开发者喜欢有合并提交。  </p><p>因为它像一个新功能和原来代码基线的连通符。  </p><p>但如果你偏爱线性的提交历史，可以在执行合并rebase新功能到master分支的顶部，这样生成一个快进（fast-forward）的合并。  </p><p>一些GUI客户端只要点一下【接受】按钮执行好上面的命令来自动化Pull Request接受过程。  </p><p>如果你的不能这样，至少在功能合并到master分子后自动关闭Pull Request。  </p><h5 id="与此同时，小明在做和小红一样的事情"><a href="#与此同时，小明在做和小红一样的事情" class="headerlink" title="与此同时，小明在做和小红一样的事情"></a>与此同时，小明在做和小红一样的事情</h5><p>当小红和小黑在marys-feature上工作并讨论她的Pull  Request的时候，小明在自己的功能分支上做完全一样的事情。  </p><p>通过隔离功能能到独立的分支上，每个人都可以自主的工作，当然必要的时候在开发者之间分享变更还是比较繁琐的。  </p><h4 id="总结-1"><a href="#总结-1" class="headerlink" title="总结"></a>总结</h4><p>到了这里，但愿你发现了功能分支可以很直接地在集中式工作流的仅有的master分支上完成多功能的开发。  </p><p>另外，功能分支还使用了Pull Request，使得可以在你的版本控制GUI客户端中讨论某个提交。  </p><p>功能分支工作流是开发项目异常灵活的方式。  </p><p>问题是，有时候太灵活了。  </p><p>对于大型团队，常常需要给不同分支分配一个更具体的角色。  </p><p>GitFlow工作流是管理功能开发、发布准备和维护的常用模式。  </p><h3 id="GitFlow工作流"><a href="#GitFlow工作流" class="headerlink" title="GitFlow工作流"></a>GitFlow工作流</h3><p>在实际开发当中，可能通常使用GitFlow工作流。  </p><p>GitFlow工作流定义了一个围绕项目发布的严格分支模型。  </p><p>虽然比功能分支工作流复杂几分，但是提供了一个用于健壮的用于管理大型项目的框架。  </p><p>GitFlow工作流没有用超出功能分支工作流的概念和命令。  </p><p>而是为不同的分支分配了一个很明确的角色，并定义分支之间如何交互和什么时候进行交互。  </p><p>除了使用功能分支，在做准备、维护和记录发布也是用各自的分支。  </p><p>当然你可以用上功能分支工作流所有的好处：Pull Request、隔离实验性开发和更高效的工作。  </p><h4 id="工作方式-2"><a href="#工作方式-2" class="headerlink" title="工作方式"></a>工作方式</h4><p>GitFlow工作流仍然用中央仓库作为所有开发者的交互中心。  </p><p>和其他工作流一样，开发者在本地工作并push分子到中央分支去。  </p><h5 id="历史分支"><a href="#历史分支" class="headerlink" title="历史分支"></a>历史分支</h5><p><img src="http://r.photo.store.qq.com/psc?/V13IdniL4CDhqM/TCfiP1YaPeRT4Jil9RANX0DucqArpSZN8V1mN.Djx7WchltIFUxePFkxo0wF6tL9hJ92GPpyK1meBHYC6jQnh92Uk6*6zENCWbjq21uqLsI!/r" alt="历史分支"></p><p>相对使用仅有的一个master分支，GitFlow工作流使用两个分支来记录项目的历史。  </p><p>master分支存储了正式发布的历史，而develop分支作为功能的集成分支，这样也方便master分支上的所有提交分配一个版本号。  </p><p>剩下要说明的问题就是围绕这两个分支的区别展开。  </p><h5 id="功能分支"><a href="#功能分支" class="headerlink" title="功能分支"></a>功能分支</h5><p><img src="http://r.photo.store.qq.com/psc?/V13IdniL4CDhqM/TCfiP1YaPeRT4Jil9RANX4suzD8O2OoWbYPwQ150IFWgQS3qSKoLWdglLxIjfri4eWAHC*W6m9OYJM0vFH4CxIhXiOdTBQYoWLsUJ3d8M.k!/r" alt="功能分支"></p><p>每个新功能位于一个自己的分支，这样可以push到中央仓库以备份和协作。  </p><p>但是功能分支不是从master分支上拉出新分支，而是使用develop分支作为父分支。  </p><p>当新功能完成时，合并会develop分支。  </p><p>新功能提交应该从不直接与master分支交互。  </p><p>开源软件基本上是使用GitFlow来做代码版本管理的控制。  </p><p>注意，从各种含义和目的上来看，功能分支加上develop分支就是功能分支工作流的用法。  </p><p>但是GitFlow工作流没有在这里止步。  </p><h5 id="发布分支"><a href="#发布分支" class="headerlink" title="发布分支"></a>发布分支</h5><p><img src="http://r.photo.store.qq.com/psc?/V13IdniL4CDhqM/TCfiP1YaPeRT4Jil9RANX1K5y5ivKrS*rhk3l.NtQVVaNHmKMdlqKelqYaRENh70*1X*IrEmFCJIhfs5U7wXELfZbYI1tihPDOGBwBPqt6E!/r" alt="发布分支"></p><p>一旦develop分支上有了做一次发布（或者说快到了既定的发布日）的足够功能，就从develop分支上fork一个发布分支。  </p><p>新建的分支用于开始发布循环，所以从这个时间点开始之后新的功能不能再加到这个分支上——-这个分支只应该叫Bug修复、文档生成或其他面向发布任务。  </p><p>一旦对外发布的工作都完成了，发布分支合并到master分支并飞配一个版本号打好Tag。  </p><p>另外，这些新建发部分之以来做的修改要合并回develop分支。  </p><p>使用一个用于发布准备的专门分支，使得一个团队可以在完善当前的发布版本的同时，另一个团队可以继续开发下个版本的功能。  </p><p>这也打造定义良好的开发阶段（比如，可以很轻松的说，【这周我们要做准备发布版本4.0】，并且在仓库的目录结构中可以实际看到）  </p><p>常用的分支约定：  </p><ul><li>用于新建发布分支的分支：develop</li><li>用于合并的分支：master</li><li>分支命名：release- 或 release/</li></ul><h5 id="维护分支"><a href="#维护分支" class="headerlink" title="维护分支"></a>维护分支</h5><p><img src="http://r.photo.store.qq.com/psc?/V13IdniL4CDhqM/TCfiP1YaPeRT4Jil9RANX8qfvx9q8UhYcwpU4tSoxZoCzp2TGnchoEgJnBAd**ejGrSWx7H1n1RbZFVAdVlD7v3kEO6EHjpPFNMCD9pabTQ!/r" alt="维护分支"></p><p>维护分支或者说是热修复（hotfix）分支用于生成快速给产品发布版本（production release）打补丁，这是唯一可以从master分支fork出来的分支。  </p><p>修复完成，修改应该马上合并回master分支和develop分支（当前的发部分支），master分支应该用新的版本号打好Tag。  </p><p>为了Bug修复使用专门分支，让团队可以处理问题而不用打断其他工作或者是等待下一个发布循环。  </p><p>你可以把维护分支想成是一个直接在master分支上处理的临时发布。  </p><p>即hotfix，维护的是v1.0.0—&gt;v1.0.1这种；<br>第三位数修改的是Bug（hotfix维护版本第三位数）；第二位数修改的是功能（功能分支维护的是版本的第二位数）；第一位为大架构改变的时候进行修改（维护版本的第一位数）；  </p><p>GitFlow从这点上就可以与语义化规范牵扯上联系；  </p><h4 id="示例-2"><a href="#示例-2" class="headerlink" title="示例"></a>示例</h4><p>下面的示例演示本工作流如何用于管理单个发布循环。  </p><p>假设你已经创建了一个中央仓库。  </p><h5 id="创建开发分支"><a href="#创建开发分支" class="headerlink" title="创建开发分支"></a>创建开发分支</h5><p><img src="http://r.photo.store.qq.com/psc?/V13IdniL4CDhqM/TCfiP1YaPeRT4Jil9RANX4Xsg92Awirp0bThQ4n*YW8UWB.U5*XFBFsn5hkNOcst0hBz.q1uwuu*KDADM.W9naZBQq8eKQyo4iLkzk28e1g!/r" alt="创建开发分支"></p><p>第一步为master分支配套一个develop分支。  </p><p>简单来做可以本地创建一个空的develop分支，push到服务器上：  </p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">git</span> <span class="keyword">branch </span>develop</span><br><span class="line"><span class="symbol">git</span> <span class="keyword">push </span>-u origin master</span><br></pre></td></tr></table></figure><p>以后这个分支将会包含了项目的全部历史。  </p><p>而master分支将只包含部分历史。  </p><p>其他开发者这时应该克隆中央仓库，建好develop分支的跟踪分支：  </p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git <span class="keyword">clone</span> <span class="title">ssh</span>://user@host/path/to/repo.git</span><br><span class="line">git checkout -b develop origin/develop</span><br></pre></td></tr></table></figure><p>现在每个开发都有了这些历史分支的本地拷贝。  </p><h5 id="小红和小明开始开发新功能"><a href="#小红和小明开始开发新功能" class="headerlink" title="小红和小明开始开发新功能"></a>小红和小明开始开发新功能</h5><p><img src="http://r.photo.store.qq.com/psc?/V13IdniL4CDhqM/TCfiP1YaPeRT4Jil9RANX2X16EiSaoizI9a2HRgo6HRlddb*dD0yGRzorFtrKInoqDMveDkX4.ujU1ZgrgxXoZf1vY83YLzd6Dl2YO5SDUc!/r" alt="小红和小明开始开发新功能"></p><p>这个示例中，小红和小明开始各自的功能开发。  </p><p>他们需要为各自的功能创建相应的分支。  </p><p>新分支不是基于master分支，而是应该基于develop分支：  </p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b <span class="built_in">some</span>-<span class="built_in">feature</span> develop</span><br></pre></td></tr></table></figure><p>他们用老套路添加提交到各自功能分支上：编辑、暂存、提交；  </p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">git</span> <span class="string">status</span></span><br><span class="line"><span class="attr">git</span> <span class="string">add</span></span><br><span class="line"><span class="attr">git</span> <span class="string">commit</span></span><br></pre></td></tr></table></figure><h5 id="小红完成功能开发-1"><a href="#小红完成功能开发-1" class="headerlink" title="小红完成功能开发"></a>小红完成功能开发</h5><p>添加了提交后，小红觉得她的功能OK了。  </p><p>如果团队使用Pull Requests，这时候可以发起一个用于合并到develop分支。  </p><p>否则她可以直接合并到她本地的develop分之后push到中央仓库：  </p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git pull <span class="built_in">origin</span> develop</span><br><span class="line">git checkout develop</span><br><span class="line">git merge <span class="built_in">some</span>-<span class="built_in">feature</span></span><br><span class="line">git <span class="built_in">push</span></span><br><span class="line">git branch -d <span class="built_in">some</span>-<span class="built_in">feature</span></span><br></pre></td></tr></table></figure><p>第一条命令在合并功能前确保develop分支是最新的。  </p><p>注意，功能绝不应该直接合并到master分支。  </p><p>冲突解决方法和集中式工作流一样。  </p><h5 id="小红开始准备发布"><a href="#小红开始准备发布" class="headerlink" title="小红开始准备发布"></a>小红开始准备发布</h5><p><img src="http://r.photo.store.qq.com/psc?/V13IdniL4CDhqM/TCfiP1YaPeRT4Jil9RANXxm6aYd1gMGOxylETc6cDcj7kTwBnGuyoyzYDL7pNxxvtXeo*D5bCxnVfWE*k.cQe8O4lhgkHo2zR.IIDII1kmA!/r" alt="小红开始准备发布"></p><p>这个时候小明正在实现他的功能。  </p><p>小红开始准备她的第一个项目正式发布（发布分支也叫预发布分支，预发布分支基于develop，只有预发布版本分支才能够去合并到master分支，而预发布版本是经过测试人员测试之后的没有问题的一个版本；master分支代码必须可以执行，没有被污染）。  </p><p>像功能开发一样，她用一个新的分支来做发布准备。  </p><p>这一步也确定了发布的版本号：  </p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b release<span class="number">-0.1</span> develop</span><br></pre></td></tr></table></figure><p>这个分支是清理分支、执行所有测试、更新文档和其他为下个发布做准备操作的地方，像是一个专门用于改善发布的功能分支。  </p><p>只要小红创建的这个分支push到中央仓库，这个发布就是功能冻结的。  </p><p>任何不在develop分支中的新功能都推到下一个发布循环中。  </p><h5 id="小红完成发布"><a href="#小红完成发布" class="headerlink" title="小红完成发布"></a>小红完成发布</h5><p><img src="http://r.photo.store.qq.com/psc?/V13IdniL4CDhqM/TCfiP1YaPeRT4Jil9RANXx2fdZ*.CxsTwPMg235DDXkchbPbk7hNVec6.FIcmcf72k0vjzhdQvVlYt8u8ao*65n3gyQAyN5GOxndJKhwiNk!/r" alt="小红完成发布"></p><p>一旦准备好了对外发布，小红合并修改到master分支和develop分支上，删除发布分支。  </p><p>合并回develop分支很重要，因为在发布分支中已经提交的更新需要在后面的新功能中也要是可用的。  </p><p>另外，如果小红的团队要求Code  Review，这是一个发起Pull Request的理想时机。  </p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">git</span> <span class="string">checkout master</span></span><br><span class="line"><span class="attr">git</span> <span class="string">merge release-0.1</span></span><br><span class="line"><span class="attr">git</span> <span class="string">push</span></span><br><span class="line"><span class="attr">git</span> <span class="string">checkout develop</span></span><br><span class="line"><span class="attr">git</span> <span class="string">merge release-0.1</span></span><br><span class="line"><span class="attr">git</span> <span class="string">push</span></span><br><span class="line"><span class="attr">git</span> <span class="string">branch -d release-0.1</span></span><br></pre></td></tr></table></figure><p>发布分支是作为功能开发（develop分支）和对外发布（master分支）间的缓冲。  </p><p>只要有合并到master分支，就应该打好Tag以方便跟踪。  </p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git <span class="keyword">tag</span> <span class="title">-a</span> <span class="number">0.1</span> -m <span class="string">"Initial public release"</span> <span class="literal">master</span></span><br><span class="line">git push --tags</span><br></pre></td></tr></table></figure><p>Git有提供各种钩子（hook），即仓库有时间发生时触发执行的脚本。  </p><p>可以配置一个钩子，在你push中央仓库的master分支时，自动构建好对外发布。  </p><h5 id="最终用户发现Bug"><a href="#最终用户发现Bug" class="headerlink" title="最终用户发现Bug"></a>最终用户发现Bug</h5><p><img src="http://r.photo.store.qq.com/psc?/V13IdniL4CDhqM/TCfiP1YaPeRT4Jil9RANXzsQH1hJotlrx1khR6EZ0dUlyxkaf9L1Yi66Fs6sohYE0UTifJNygNHa*okiIgZc5dg2qSXBW*VyQGtiyMr0yo8!/r" alt="最终用户发现Bug"></p><p>对外发布后，小红回去和小明一起做下个发布的新功能开发，直到有最终用户开了一个Ticket抱怨当前版本的一个Bug。  </p><p>为了处理Bug，小红（或者小明）从master分支上来去了一个维护分支（hotfix），提交修改以解决问题，然后直接合并回master分支：  </p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b issue-<span class="comment">#001 master</span></span><br><span class="line"><span class="comment"># Fix the bug</span></span><br><span class="line">git checkout <span class="literal">master</span></span><br><span class="line">git merge issue-<span class="comment">#001</span></span><br><span class="line">git push</span><br></pre></td></tr></table></figure><p>就像发布分支，维护分支中新加这些重要修改需要包含到develop分支中，所以小红要执行一个合并操作，然后就可以安全地删除这个分支了：  </p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">git</span> <span class="string">checkout develop</span></span><br><span class="line"><span class="attr">git</span> <span class="string">merge issue-#001</span></span><br><span class="line"><span class="attr">git</span> <span class="string">push</span></span><br><span class="line"><span class="attr">git</span> <span class="string">branch -d issue-#001</span></span><br></pre></td></tr></table></figure><h4 id="总结-2"><a href="#总结-2" class="headerlink" title="总结"></a>总结</h4><p>到了这里，但愿你对集中式工作流、功能分支工作流和GitFlow工作流已经感觉很舒适了。  </p><p>你应该也牢固的掌握了本地仓库的潜能，push/pull模式和Git健壮的分支和合并模型。  </p><p>记住，这里演示的工作流只是可能用法的例子，而不是在实际工作中使用Git不可违逆的条例。  </p><p>所以不要畏惧按自己需要对工作流的用法做取舍，不变的目标就是让Git为你所用。  </p><p>（在整个GitFlow工作流当中，只会去进行省略功能分支Feature，Master、HotFix、Release、Develop是必不可少的分支，以便控制每一次版本的迭代）  </p><h3 id="Forking工作流-1"><a href="#Forking工作流-1" class="headerlink" title="Forking工作流"></a>Forking工作流</h3><p><img src="http://r.photo.store.qq.com/psc?/V13IdniL4CDhqM/TCfiP1YaPeRT4Jil9RANX2qjPC0eDN.Xf29HcBYoAsTtpBFvJhu8qPVkh5cv575QWLsHx3q8JbFYK3X5cts.Zn43gkCjc7OzyBcDFaNdl.g!/r" alt="Forking工作流"></p><p>Forking工作流和前面讨论的几种工作流有根本的不同。  </p><p>这种工作流不是适用单个服务器端仓库作为【中央】代码基线，而让各个开发者都有一个服务端仓库。  </p><p>这意味着各个代码贡献者有2个Git仓库而不是1个：一个本地私有的，另一个服务端公开的。  </p><p>Forking工作流的一个主要优势是，贡献的代码可以被集成，而不需要所有人都能push代码到仅有的中央仓库中。  </p><p>开发者push到自己的服务端仓库，而只有项目维护者才能push到正式仓库。  </p><p>这样项目维护者可以接受任何开发者的提交，但无需给他正式代码库的写权限。  </p><p>效果就是一个分布式的工作流，能为大型、自发性的团队（包括了不受信的第三方）提供灵活的方式来安全的写作。  </p><p>也让这个工作流称为开源项目的理想工作流。  </p><h4 id="工作方式-3"><a href="#工作方式-3" class="headerlink" title="工作方式"></a>工作方式</h4><p>和其他的Git工作流一样，Forking工作流要先有一个公开的正式仓库存储在服务器上，但一个新的开发者想要在项目上工作时，不是直接从正式仓库克隆，而是fork正式项目在服务器上创建一个拷贝。  </p><p>这个仓库拷贝作为他人公开仓库—–其他开发者不允许push到这个仓库，但可以pull到修改（后面很快就会看到这点很重要）。  </p><p>在创建了自己服务端拷贝之后，和之前的工作流一样，开发者执行git clone命令克隆仓库到本地机器上，作为私有的开发环境。  </p><p>要提交本地修改时，push提交到自己公开仓库中——-而不是正式仓库中。  </p><p>然后，给正式仓库发起一个pull request，让项目维护者知道有更新已经准备好可以集成了。  </p><p>对于贡献的代码，pull request也可以很方便地作为一个讨论的地方。  </p><p>为了集成功能到正式代码库，维护者pull贡献者的变更到自己的本地仓库中，检查变更以确保不会让项目出错，合并变更到自己本地的master分支，然后push master分支到服务器的正式仓库中。  </p><p>到此，贡献的提交成为了项目的一部分，其他的开发者应该执行pull操作与正式仓库同步自己本地仓库。  </p><h5 id="正式仓库"><a href="#正式仓库" class="headerlink" title="正式仓库"></a>正式仓库</h5><p>在Forking工作流中，【官方】仓库的叫法只是一个约定，理解这点很重要。  </p><p>从技术上来看，各个开发者仓库和正式仓库在Git卡那里没有任何区别。  </p><p>事实上，让正式仓库之所以正式的唯一原因是他是项目维护者的公开仓库。  </p><h5 id="Forking工作流的分支使用方式"><a href="#Forking工作流的分支使用方式" class="headerlink" title="Forking工作流的分支使用方式"></a>Forking工作流的分支使用方式</h5><p>所有的个人公开仓库实际商只是为了方便和其他的开发者共享分支。  </p><p>各个开发者应该用分支隔离各个功能，就像功能分支工作流和GitFlow工作流一样。  </p><p>唯一的区别是这些分支被共享了。  </p><p>在Forking工作流中这些分支会被pull到另一个开发者的本地仓库中，而在功能分支工作流和GitFlow工作流中是直接被push到正式仓库当中。  </p><h4 id="示例-3"><a href="#示例-3" class="headerlink" title="示例"></a>示例</h4><h5 id="项目维护者初始化正式仓库"><a href="#项目维护者初始化正式仓库" class="headerlink" title="项目维护者初始化正式仓库"></a>项目维护者初始化正式仓库</h5><p>和任何使用Git项目一样，第一步还是创建在服务器上一个正式仓库，让所有团队成员都可以访问到。  </p><p>通常这个仓库也会作为项目维护者的公开仓库。  </p><p>公开仓库应该是裸仓库，不管是不是正式代码库。  </p><p>所以项目维护者会运行像下面的命令来搭建正式仓库：  </p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh user<span class="symbol">@host</span></span><br><span class="line">git init --bare /path/<span class="keyword">to</span>/repo.git</span><br></pre></td></tr></table></figure><p>Bitbucket和Stash提供了一个方便的GUI客户端已完成上面命令行做的事。  </p><p>这个搭建中央仓库的过程和前面提到的工作流完全一样。  </p><p>如果有现存的代码库，维护者也要push到这个仓库中。  </p><h5 id="开发者fork正式仓库"><a href="#开发者fork正式仓库" class="headerlink" title="开发者fork正式仓库"></a>开发者fork正式仓库</h5><p>其他所有的开发需要fork正式仓库。  </p><p>可以用git clone命令用SSH协议连通到服务器，拷贝仓库到服务器另一个位置—–是的，fork操作基本上就只是一个服务端的克隆。  </p><p>Bitbucket和Stash上可以点一下按钮就让开发者完成仓库的fork操作。  </p><p>这一步完成后，每个开发都在服务端有一个自己的仓库。  </p><p>和正式仓库一样，这些仓库应该是裸仓库。  </p><h5 id="开发者克隆自己fork出来的仓库"><a href="#开发者克隆自己fork出来的仓库" class="headerlink" title="开发者克隆自己fork出来的仓库"></a>开发者克隆自己fork出来的仓库</h5><p>下一步，各个开发者要克隆自己的公开仓库，用熟悉的git clone命令。  </p><p>在这个示例中，假定用Bitbucket托管了仓库。  </p><p>记住，如果这样的话各个开发者需要有各自的Bitbucket账号，使用下面命令克隆服务端自己的仓库。  </p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="keyword">clone</span> <span class="title">https</span>://user@bitbucket.org/user/repo.git</span><br></pre></td></tr></table></figure><p>相比前面介绍的工作流只用了一个origin远程别名指向中央仓库，Forking工作流需要2个远程别名——-一个指向正式仓库，另一个指向开发者自己的服务端仓库。  </p><p>别名的名字可以任意命名，常见的约定是使用origin作为远程克隆的仓库的别名（这个别名会在运行git clone自动创建），upstream（上游）作为正式仓库的别名。  </p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote <span class="keyword">add</span> upstream https://bitbucket<span class="meta">.org</span>/maintainer/repo</span><br></pre></td></tr></table></figure><p>需要自己用上面的命令创建upstream别名。  </p><p>这样可以简单地保持本地仓库和正式仓库的同步更新。  </p><p>注意，如果上游仓库需要认证（比如不是开源的），你需要提供用户：  </p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote <span class="keyword">add</span> upstream https://user@bitbucket<span class="meta">.org</span>/maintainer/repo</span><br></pre></td></tr></table></figure><p>这时在克隆和pull正式仓库时，需要提供用户的密码。  </p><h5 id="开发者开发自己的功能"><a href="#开发者开发自己的功能" class="headerlink" title="开发者开发自己的功能"></a>开发者开发自己的功能</h5><p>在刚克隆的本地仓库中，开发者可以向其他工作流一样的编辑代码、提交修改和新建分支：  </p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b <span class="built_in">some</span>-<span class="built_in">feature</span></span><br><span class="line">// Edit <span class="built_in">some</span> code</span><br><span class="line">git commit -a -m <span class="string">"Add first draft of some feature"</span></span><br></pre></td></tr></table></figure><p>所有的修改都是私有的直到push到自己公开仓库中。  </p><p>如果正式项目已经向前走了，可以用git pull命令获得新的提交：  </p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull upstream <span class="literal">master</span></span><br></pre></td></tr></table></figure><p>由于开发者应该都在专门的功能分支上工作，pull操作结果会都是快进合并。  </p><h5 id="开发者发布自己的功能"><a href="#开发者发布自己的功能" class="headerlink" title="开发者发布自己的功能"></a>开发者发布自己的功能</h5><p>一旦开发者准备好了分享新功能，需要做两件事。  </p><p>（1）首先，通过push他的贡献代码到自己的公开仓库中，让其他的开发者都可以访问到。他的origin远程别名应该已经有了，所有要做的就是：  </p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">push</span> <span class="built_in">origin</span>  <span class="built_in">feature</span>-branch</span><br></pre></td></tr></table></figure><p>这里和之前的工作流的差异是，origin远程别名指向开发者自己的服务端仓库，而不是正式仓库。  </p><p>（2）第二件事，开发者要通知项目维护者，想要合并他的新功能到正式库中。Bitbucket和Stash提供了Pull Request按钮，弹出个表单让你指定哪个分支要合并到正式仓库。一般你会想集成你的功能分支到上游远程仓库的master分支中。  </p><h5 id="项目维护者集成开发者的功能"><a href="#项目维护者集成开发者的功能" class="headerlink" title="项目维护者集成开发者的功能"></a>项目维护者集成开发者的功能</h5><p>当项目维护者收到pull request时，他要做的是决定是否集成它到正式代码库中。  </p><p>有两种方式来做：  </p><ul><li>直接在pull request中查看代码</li><li>pull代码到他自己的本地仓库，再手动合并</li></ul><p>第一种做法更简单，维护者可以在GUI中查看变更的差异，做评注和执行合并。  </p><p>但如果出现了合并冲突，需要第二种做法来解决。  </p><p>这种情况下，维护者需要从开发者的服务端仓库中fetch功能分支，合并到他本地的master分支，解决冲突：  </p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git fetch https:<span class="regexp">//</span>bitbucket.org<span class="regexp">/user/</span>repo feature-branch</span><br><span class="line"><span class="regexp">//</span>查看变更</span><br><span class="line">git checkout master</span><br><span class="line">git merge FETCH_HEAD</span><br></pre></td></tr></table></figure><p>变更集成到本地的master分支后，维护者要push变更到服务器上的正式仓库，这样其他的开发者都能访问到：  </p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">push</span> <span class="built_in">origin</span> master</span><br></pre></td></tr></table></figure><p>注意，维护者的origin是指向他自己公开仓库的，即是项目的正式代码库。  </p><p>到此，开发者的贡献完全集成到了项目中。  </p><h5 id="开发者和正式仓库做同步"><a href="#开发者和正式仓库做同步" class="headerlink" title="开发者和正式仓库做同步"></a>开发者和正式仓库做同步</h5><p>由于正式代码库往前走了，其他的开发需要和正式仓库做同步：  </p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull upstream <span class="literal">master</span></span><br></pre></td></tr></table></figure><h4 id="总结-3"><a href="#总结-3" class="headerlink" title="总结"></a>总结</h4><p>如果你之前是使用SVN，Forking工作流可能看起来像是一个激进的范式切换（paradigm shift）。  </p><p>但是不要害怕，这个工作流实际上就是在功能分支工作流之上引入了另一个抽象层。  </p><p>不是直接通过单个中央仓库来分享分支，而是把贡献代码发布到开发者自己的服务端仓库中。  </p><p>示例中解释了，一个贡献如何从一个开发者流到正式的master分支中，但是同样的方法可以把贡献集中到任意一个仓库中。  </p><p>比如，如果团队的几个人协作实现一个功能，可以在开发之间用相同的方法分享变更，完全不涉及正式仓库。  </p><p>这使得Forking工作流对于松散组织的团队来说是个非常强大的工具。  </p><p>任一开发者可以方便地和另一开发者分享变更，任何分支都能有效地合并到正式代码库中。  </p><h3 id="Pull-Requests-2"><a href="#Pull-Requests-2" class="headerlink" title="Pull Requests"></a>Pull Requests</h3><p>Pull Requests 是Bitbucket上方便开发者之间协作的功能。  </p><p>提供了一个用户友好的Web界面，在集成提交的变更到正式向目前可以对变更进行讨论。  </p><p><img src="http://r.photo.store.qq.com/psc?/V13IdniL4CDhqM/TCfiP1YaPeRT4Jil9RANX1zLLMp65VmnavK5XDJUKS6zYUJDvvIJN*Lt1FNUoIJG0DkTCKRNuOGToGtjWmjIrVLu*fSpHVogAtzO4DgCm80!/r" alt="images"></p><p>开发者向团队成员通知功能开发已经完成，pull Requests是最简单的用法。  </p><p>开发者完成功能开发后，通过Bitbucket账号发起一个pull Request。这样让涉及这个功能的所有人知道，要去做Code Review和合并到master分支。  </p><p>但是，Pull  Request远不止一个简单的通知，而是为讨论提交的功能的一个专门论坛。  </p><p>如果变更有任何问题，团队成员反馈在Pull Request中，甚至pull新的提交微调功能。  </p><p>所有的这些活动都直接跟踪在Pull Request中。  </p><p><img src="http://r.photo.store.qq.com/psc?/V13IdniL4CDhqM/TCfiP1YaPeRT4Jil9RANX7SLIJSUYxrmcZpwuXYsQB1Ya2zpcBawWJ7atpdZcoSsGWSrxt3XnkjpSfeaAffmHrs3SyEpgZCaBKHAdN3ReSA!/r" alt="images"></p><p>相比其他的协作模型，这种分享提交的形式有助于打造一个更流畅的工作流。  </p><p>SVN和Git都能通过一个简单的脚本收到通知邮件；  </p><p>但是，讨论变更时，开发者通常只能去回复邮件。  </p><p>这样做会变得杂乱，尤其还要涉及后面的几个提交时。  </p><p>Pull Requests吧所有相关功能整合到一个和Bitbucket仓库界面集成的用户友好Web界面中。  </p><h4 id="解析Pull-Request"><a href="#解析Pull-Request" class="headerlink" title="解析Pull Request"></a>解析Pull Request</h4><p>当腰发起一个pull Request，你所要做的就是请求（Request）另一个开发者（比如项目的维护者），来pull你仓库中一个分支到他的仓库中。  </p><p>这意味着你要提供4个信息（源仓库、源分支、目的仓库、目的分支），以发起Pull Request。  </p><p><img src="http://r.photo.store.qq.com/psc?/V13IdniL4CDhqM/TCfiP1YaPeRT4Jil9RANX7SLIJSUYxrmcZpwuXYsQB1Ya2zpcBawWJ7atpdZcoSsGWSrxt3XnkjpSfeaAffmHrs3SyEpgZCaBKHAdN3ReSA!/r" alt="images"></p><h4 id="工作方式-4"><a href="#工作方式-4" class="headerlink" title="工作方式"></a>工作方式</h4><p>Pull Request可以和功能分支工作流、GitFlow工作流或Forking工作流一起使用。  </p><p>但Pull Request要求要么分支不同，要么仓库不同，所以不能用于集中式工作流。  </p><p>在不同的工作流中使用pull  Request会有一些不同，但基本的过程是这样的：  </p><ul><li>开发者在本地仓库新建一个专门的分支开发功能；</li><li>开发者push分支修改到公开的Bitbucket仓库中；</li><li>开发者通过Bitbucket发起一个Pull Request；</li><li>团队的其他成员review code，讨论并修改；</li><li>项目维护者合并功能到官方仓库中并关闭Pull Request；</li></ul><h4 id="在功能分支工作流中使用Pull-Request"><a href="#在功能分支工作流中使用Pull-Request" class="headerlink" title="在功能分支工作流中使用Pull Request"></a>在功能分支工作流中使用Pull Request</h4><p>功能分支工作流用一个共享的Bitbucket仓库来管理协作，开发者在专门的分支上开发功能。  </p><p>但不是立即合并到master分支上，而是在合并到主代码之前开发这应该开一个Pull Request发起功能的讨论。  </p><p>功能分支工作流只有一个公开的仓库，所以Pull Request的目的仓库和源仓库总是同一个。  </p><p>通常开发者会指定他的功能分支作为源分支，master分支作为目的分支。  </p><p>收到Pull Request后，项目维护者要决定如何做。  </p><p>如果功能没问题，就简单地合并到master分支，关闭Pull Request。  </p><p>但如果提交的变更有问题，他可以在Pull Request中反馈，之后的新加的评论也会评论之后接着显示出来。  </p><p>在功能还没有完全开发完的时候，也可能发起一个pull Request。  </p><p>比如开发者在实现某个需求时遇到了麻烦。  </p><p>他可以发一个包含正在进行工作的Pull Request。  </p><p>其他的开发者可以在Pull Request提供建议，或者甚至直接添加提交来解决问题。  </p><h4 id="在GitFlow工作流中使用Pull-Request"><a href="#在GitFlow工作流中使用Pull-Request" class="headerlink" title="在GitFlow工作流中使用Pull Request"></a>在GitFlow工作流中使用Pull Request</h4><p>GitFlow工作流和功能分支工作流类似，单围绕项目发布定义一个严格的分支模型。  </p><p>在GitFlow工作流中使用Pull Request让开发者在发布分支或者是维护分支上工作时，可以有个方便的地方对关于发布分支或者是维护分支的问题进行交流。  </p><p>GitFlow工作流中Pull Request的使用过程和上一节中完全一致：当一个功能、发布或者是热修复分支需要Review时，开发者简单发起一个Pull Request，团队的其他成员会通过Bitbucket收到通知。  </p><p>新功能一般合并到develop分支，而发布和热修复则要同时合并到develop分支和master分支上。  </p><p>Pull Request可能用作所有合并的正式管理。  </p><h4 id="在Forking工作流中使用Pull-Request"><a href="#在Forking工作流中使用Pull-Request" class="headerlink" title="在Forking工作流中使用Pull Request"></a>在Forking工作流中使用Pull Request</h4><p>在Forking工作流中，开发者push完成的功能到他自己的仓库中，而不是共享仓库。  </p><p>然后，他发一个Pull  Request，让项目维护者知道他的功能已经可以Review了。  </p><p>在这个工作流，Pull Request的通知功能非常有用，因为项目维护者不可能知道其他开发者在他们自己的仓库添加了提交。  </p><p>由于各个开发者有自己的公开仓库，Pull Request的源仓库和目标仓库不是同一个。  </p><p>源仓库是开发者的公开仓库，源分支是包含了修改的分支。  </p><p>如果开发者要合并修改到正式代码库中，那么目标仓库是正式仓库，目标分支是master分支。  </p><p>Pull Request也可以用于正式项目之外的其他开发者之间的协作。  </p><p>比如，如果一个开发者和一个团队成员一起开发一个功能，他们可以发起一个Pull Request，用团队成员的Bitbucket仓库作为目标，而不是正式项目的仓库。  </p><p>然后使用相同的功能分支作为源和目标分支。  </p><p>2个开发者之间可以在Pull Request中讨论和开发功能。  </p><p>完成开发后，他们可以发起另一个Pull  Request，请求合并功能到正式的master分支。  </p><p>在Forking工作流中，这样的灵活性称为一个强有力的协作工具。  </p><h4 id="示例-4"><a href="#示例-4" class="headerlink" title="示例"></a>示例</h4><p>下面的示例演示了Pull Request如何在Forking工作流中使用。  </p><p>也同样适用于小团队的开发协作和第三方开发者向开源项目的贡献。  </p><p>在示例中，小红是个开发，小明是项目维护者。  </p><p>他们各自有一个公开的Bitbucket仓库，而小明的仓库包含了正式工程。  </p><h5 id="小红fork正式项目"><a href="#小红fork正式项目" class="headerlink" title="小红fork正式项目"></a>小红fork正式项目</h5><p>小红先要fork小明的Bitbucket仓库，开始项目的开发。  </p><p>她登录Bitbucket，浏览到小明的仓库页面，点fork按钮。  </p><p>然后为fork出来的仓库填写名字和描述，这样小红就有了服务端的项目拷贝了。  </p><h5 id="小红克隆她的Bitbucket仓库"><a href="#小红克隆她的Bitbucket仓库" class="headerlink" title="小红克隆她的Bitbucket仓库"></a>小红克隆她的Bitbucket仓库</h5><p>下一步，小红克隆自己刚才fork出来的Bitbucket仓库，以在本机上准备出工作拷贝。  </p><p>命令如下：  </p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="keyword">clone</span> <span class="title">https</span>://user@bitbucket.org/user/repo.git</span><br></pre></td></tr></table></figure><p>请记住，git clone 会自动创建origin远程别名，是指向小红fork出来的仓库。  </p><h5 id="小红开发新功能"><a href="#小红开发新功能" class="headerlink" title="小红开发新功能"></a>小红开发新功能</h5><p>在开始改代码前，小红要为新功能新建一个新分支。  </p><p>她会用这个分支作为Pull Request的源分支。  </p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git checkout -b <span class="built_in">some</span>-<span class="built_in">feature</span></span><br></pre></td></tr></table></figure><h5 id="编辑代码"><a href="#编辑代码" class="headerlink" title="编辑代码"></a>编辑代码</h5><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -<span class="keyword">a</span> -m <span class="string">"Add first draft of some feature"</span></span><br></pre></td></tr></table></figure><p>在新功能分支上，小红按照需要添加提交。  </p><p>甚至如果小红觉得功能分支上的提交历史太乱了，她可以用交互式rebase来删除或者压制提交。  </p><p>对于大型项目，整理功能分支的历史可以让项目维护者更容易看出在pull Request中做了什么内容。  </p><h5 id="小红push功能到她的Bitbucket仓库中"><a href="#小红push功能到她的Bitbucket仓库中" class="headerlink" title="小红push功能到她的Bitbucket仓库中"></a>小红push功能到她的Bitbucket仓库中</h5><p>小红完成功能后，push功能到她自己的Bitbucket仓库中（不是正是仓库），用下面简单的命令。  </p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">push</span> <span class="built_in">origin</span> <span class="built_in">some</span>-branch</span><br></pre></td></tr></table></figure><p>这时她的变更可以让项目维护者看到了（后者任何想要看的协作者）  </p><h5 id="小红发起Pull-Request"><a href="#小红发起Pull-Request" class="headerlink" title="小红发起Pull Request"></a>小红发起Pull Request</h5><p>Bitbucket上有了她的功能分支后，小红可以用她的Bitbucket账号浏览到她fork出来的仓库页面，点右上角的[ Pull Request ]按钮，发起一个Pull Request。  </p><p>弹出的表单自动设置小红的仓库为源仓库，询问小红以指定源分支、目标仓库和目标分支。  </p><p>小红想要合并功能到正式仓库，所以源分支是她的功能分支，目标仓库是小明的公开仓库，而目标分支是master分支。  </p><p>另外，小红需要提供Pull Request的标题和描述信息。  </p><p>如果需要小明以外的人审核批准diamante，她可以把这些人填在[ Reviewers ]文本框中。  </p><p><img src="http://r.photo.store.qq.com/psc?/V13IdniL4CDhqM/TCfiP1YaPeRT4Jil9RANX4eBUNEH.PnD8cXLFX3FNQ1TY28uOV3j2Ic*FLo6qk1HERoVGDzy.ccPi6KWHQ1Ha7aF4qrprhr6a71aswRPe1s!/r" alt="images"></p><p>创建好了Pull Request，通知会通过Bitbucket系统消息或者邮件（可选）发给小明。  </p><h5 id="小明-review-Pull-Request"><a href="#小明-review-Pull-Request" class="headerlink" title="小明 review Pull Request"></a>小明 review Pull Request</h5><p><img src="http://r.photo.store.qq.com/psc?/V13IdniL4CDhqM/TCfiP1YaPeRT4Jil9RANXz.TEdJt9fHfFvRXR*aihUCZBZl8OSFD1T7r*7GIRRSRDePO5EI5YO0pxG7Qo02eHht0.LfxlnFiUPPKgPzRY4U!/r" alt="images"></p><p>在小明的Bitbucket仓库页面的[ Pull Request ]Tab可以看到所有人发起的Pull Request。  </p><p>点击小红的Pull Request会显示Pull Request的描述、功能的提交历史和每个变更的差异（diff）。  </p><p>如果小明想要合并到项目中，只要点一下[ Merge ]按钮，就可以同意Pull Request并合并到master分支。  </p><p>但如果像这个示例中一样，小明发现了在小红的代码中的一个小Bug，要在小红合并前修复。  </p><p>小明可以在整个Pull Request上加上评注，或者是选择历史中的某个提交加上评注。  </p><p><img src="http://r.photo.store.qq.com/psc?/V13IdniL4CDhqM/TCfiP1YaPeRT4Jil9RANXywJcEdXUnF5drr2Tn8vpOshxucsOMz.iW9qg*vXiM80CBz6VcPZTn4e7NC2txFi9Xf.oe9HyW39vilYdBhizv0!/r" alt="images"></p><h5 id="小红补加提交"><a href="#小红补加提交" class="headerlink" title="小红补加提交"></a>小红补加提交</h5><p>如果小红对反馈有任何疑问，可以在Pull Request中响应，把Pull Request当做是她功能讨论的论坛。  </p><p>小红在她的功能分支新加提交以解决代码问题，并push到她的Bitbucket仓库中，就像前一轮中的做饭一样。  </p><p>这些提交会进入到Pull Request，小明在原来的评注旁边可以再次Review 变更。  </p><h5 id="小明接受Pull-Request"><a href="#小明接受Pull-Request" class="headerlink" title="小明接受Pull Request"></a>小明接受Pull Request</h5><p>最终，小明接受变更，合并功能分支到master分支，并关闭Pull Request。  </p><p>至此，功能集成到项目中，其他的项目开发者可以用标准的git pull命令pull这些变更到自己的本地仓库中。  </p><h4 id="总结-4"><a href="#总结-4" class="headerlink" title="总结"></a>总结</h4><p>到了这里，你应该有了所有需要的工具来集成Pull Request到你自己的工作流。  </p><p>请记住，Pull Request并不是为了替代任何基于Git的协作工作流，而是它们的一个便利的补充，让团队成员间的协作更加轻松方便。  </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Git工作流指南-分布式版本控制系统&quot;&gt;&lt;a href=&quot;#Git工作流指南-分布式版本控制系统&quot; class=&quot;headerlink&quot; title=&quot;Git工作流指南 分布式版本控制系统&quot;&gt;&lt;/a&gt;Git工作流指南 分布式版本控制系统&lt;/h2&gt;&lt;p&gt;观看笔记：&lt;
      
    
    </summary>
    
    
      <category term="笔记" scheme="https://fengshana.github.io/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="笔记" scheme="https://fengshana.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="Git工作流" scheme="https://fengshana.github.io/tags/Git%E5%B7%A5%E4%BD%9C%E6%B5%81/"/>
    
  </entry>
  
  <entry>
    <title>微服务架构的分布式事务控制解决方案</title>
    <link href="https://fengshana.github.io/2020/04/20/%E9%9D%A2%E8%AF%95%E9%A2%98/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84%E7%9A%84%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1%E6%8E%A7%E5%88%B6%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <id>https://fengshana.github.io/2020/04/20/%E9%9D%A2%E8%AF%95%E9%A2%98/%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84%E7%9A%84%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1%E6%8E%A7%E5%88%B6%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</id>
    <published>2020-04-19T21:51:43.005Z</published>
    <updated>2020-04-22T00:41:35.015Z</updated>
    
    <content type="html"><![CDATA[<p>希望这句话不只是送给我，也送给那些跟我当时心境一样的人。  </p><p>就像妈妈每次给我打电话的结尾是：要天天开开心心的。保持好心情。  </p><p>一样。  </p><p>观看笔记： <a href="https://www.bilibili.com/video/BV1Q4411y7ip?from=search&amp;seid=11158504841670855744" target="_blank" rel="noopener">https://www.bilibili.com/video/BV1Q4411y7ip?from=search&amp;seid=11158504841670855744</a>  </p><p>相关的笔记截图放在QQ号为：198866436的空间相册当中了；  </p><p>视频可以选择2x倍速观看；不知道为什么它的那个原本的速度我感觉好像放慢了一样，放到2x速度的时候感觉才像是刚刚好；  </p><h2 id="技术专题：分布式事务专题"><a href="#技术专题：分布式事务专题" class="headerlink" title="技术专题：分布式事务专题"></a>技术专题：分布式事务专题</h2><ol><li>基础概念</li></ol><ul><li>什么是事务</li><li>本地事务</li><li>分布式事务</li><li>分布式事务产生的场景</li></ul><ol start="2"><li>分布式事务基础理论</li></ol><ul><li>CAP理论<ul><li>理解CAP</li><li>CAP组合方式</li><li>总结</li></ul></li><li>BASE理论</li></ul><ol start="3"><li>分布式事务解决方案之2PC（两阶段提交）</li></ol><ul><li>什么是2PC</li><li>解决方案<ul><li>传统2PC</li><li>Seata实现2PC</li></ul></li><li>Seata实现2PC事务（seata阿里开源框架）<ul><li>业务说明</li><li>程序组成部分</li><li>创建数据库</li><li>启动TC（事务协调器）</li><li>discover-server</li><li>导入dtx-seata-demo</li><li>dtx-seata-demo-bank1</li><li>dtx-seata-demo-bank2</li><li>测试场景</li><li>原理分析</li></ul></li><li>小结</li></ul><ol start="4"><li>分布式事务解决方案之TCC</li></ol><ul><li>什么是TCC事务</li><li>解决方案</li><li>Hmily实现TCC事务（Hmily轻量级框架）<ul><li>业务说明</li><li>程序组成部分</li><li>创建数据库</li><li>discover-server</li><li>导入dtx-tcc-demo</li><li>dtx-tcc-demo-bank1</li><li>dtx-tcc-demo-bank2</li><li>测试场景</li></ul></li><li>小结</li></ul><ol start="5"><li>分布式事务解决方案之可靠消息最终一致性</li></ol><ul><li>什么是可靠消息最终一致性事务</li><li>解决方案<ul><li>本地消息表方案</li><li>RocketMQ事务消息方案</li></ul></li><li>RocketMQ实现可靠消息最终一致性事务（RocketMQ阿里开源的消息队列）<ul><li>业务说明</li><li>程序组成部分</li><li>创建数据库</li><li>启动RocketMQ</li><li>discover-server</li><li>导入dtx-txmsg-demo</li><li>dtx-txmsg-demo-bank1</li><li>dtx-txmsg-demo-bank2</li><li>测试场景</li></ul></li><li>小结</li></ul><ol start="6"><li>分布式事务解决方案之最大努力通知</li></ol><ul><li>什么是最大努力通知</li><li>解决方案</li><li>RocketMQ实现最大努力通知型事务<ul><li>业务说明</li><li>程序组成部分</li><li>创建数据库</li><li>启动RocketMQ</li><li>导入dtx-notifymsg-demo</li><li>dtx-notifydemo-pay</li><li>dtx-notifydemo-bank1</li><li>测试场景</li></ul></li><li>小结</li></ul><ol start="7"><li>分布式事务综合案例</li></ol><ul><li>系统介绍<ul><li>P2P介绍</li><li>总体业务流程</li><li>业务术语</li><li>模块说明</li></ul></li><li>注册账号案例分析<ul><li>业务流程</li><li>解决方案分析</li></ul></li><li>存管开户<ul><li>业务流程</li><li>解决方案分析</li></ul></li><li>满标审核<ul><li>业务流程</li><li>解决方案分析</li></ul></li></ul><ol start="8"><li>课程总结</li></ol><h3 id="什么是事务"><a href="#什么是事务" class="headerlink" title="什么是事务"></a>什么是事务</h3><p>什么是事务？<br>举个生活中的例子：你去小卖铺买东西，“一手交钱，一手交货”就是一个事务的例子，交钱和交货必须全部成功，事务才算成功，任何一个活动失败，事务将撤销所有已成功的活动；  </p><p>明白上述例子，再来看事务的定义：  </p><blockquote><p>事务可以看做是一次大的活动，它由不同的小活动组成，这些小活动要么全部成功，要么全部失败；  </p></blockquote><h3 id="本地事务"><a href="#本地事务" class="headerlink" title="本地事务"></a>本地事务</h3><p>在计算机系统中，更多的是通过关系型数据库来控制事务，这是利用数据库本身的事务特性来实现的，因此叫做数据库事务；  </p><p>由于应用主要靠数据库来控制事务，而数据库通常和应用在同一个服务器，所以基于关系型数据库的事务又称为本地事务；  </p><p>回顾一下数据库事务的四大特性ACID：  </p><ul><li>A（Atomic）：  <ul><li>原子性；</li><li>构成事物的所有操作，要么都执行完成，要么全部不执行；</li><li>不可能出现部分成功部分失败的情况。  </li></ul></li><li>C（Consistency）：  <ul><li>一致性；</li><li>在事务执行前后，数据库的一致性约束没有被破坏。</li><li>比如：张三向李四转100元，转账前和转账后的数据是正确的状态这就叫做一致性；如果出现张三转出100元，李四账户没有增加100元这就出现了数据错误，就没有达到一致性。</li></ul></li><li>I（Isolation）：  <ul><li>隔离性；</li><li>数据库中的事务一般都是并发的；</li><li>隔离性是指并发的两个事务的执行互不干扰；</li><li>一个事务不能看到其他事务运行过程的中间状态。  </li><li>通过配置事务隔离级别可以避免脏读、重复读等问题。</li></ul></li><li>D（Durability）：  <ul><li>持久性；</li><li>事务完成之后，该事务对数据的更改会被持久化到数据库，且不会被回滚。  </li></ul></li></ul><p>数据库事务在实现时，会将一次事务涉及的所有操作全部纳入到一个不可分割的执行单元，该执行单元中的所有操作要么都成功，要么都失败，只要其中任一操作执行失败，都将导致整个事务的回滚。  </p><h3 id="分布式事务"><a href="#分布式事务" class="headerlink" title="分布式事务"></a>分布式事务</h3><p>随着互联网的快速发展，软件系统由原来的单体应用转变为分布式应用。  </p><p>下图描述了单体应用向微服务的演变：  </p><p>分布式系统会把一个应用系统拆分为可独立部署的多个服务。  </p><p>因此需要服务与服务之间远程协作才能完成事务操作。  </p><p>这种分布式系统环境下由不同的服务之间通过网络远程协作完成事务称之为【分布式事务】。  </p><p>例如用户注册送积分事务、创建订单减库存事务、银行转账事务等都是分布式事务。  </p><p>用户服务当中要增加用户/积分服务当中要增加积分；<br>我突然想起来了，其实信666这个项目当中增加用户还有一个充值90的一个操作，其实也应该是一个事务；当时增加用户后我是直接发送了一个队列进行充值90元；通过这个mq发送消息队列，这个不也是属于远程协作吗？加入我在进行操作增加增加账户的时候进行发送了队列这个时候如果增加账户出事情了那么势必就需要分布式事务了；倘若我当时好像处理的是当用户账户增加成功了之后然后再去发送的队列呢？这个时候就应该不会出现了吧？哦哦，不对，倘若我消息队列当中的业务逻辑处理增加90元的这个操作失败了呢？那么这个时候增加账户的这个业务操作就应该需要进行回滚？这两个操作构成一个事务（原子性），且需要达到一致性，即账户增加需要成功，充值也需要成功；  </p><p>订单服务中需要加订单/库存服务当中需要减少库存；  </p><p>本地事务依赖数据库依赖数据库本身提供的事务特性来实现，因此以下逻辑可以控制本地事务：  </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">begin</span> <span class="keyword">transaction</span>;</span><br><span class="line">      //1. 本地数据库操作：张三减少金额</span><br><span class="line">      //2. 本地数据库操作：李四增加金额</span><br><span class="line"><span class="keyword">commit</span> <span class="keyword">transaction</span>;</span><br></pre></td></tr></table></figure><p>但是在分布式环境下，会变成这样：  </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">begin</span> <span class="keyword">transaction</span>;</span><br><span class="line">      //1. 本地数据库操作：张三减少金额</span><br><span class="line">      //2. 远程调用：让李四增加金额</span><br><span class="line"><span class="keyword">commit</span> <span class="keyword">transaction</span>;</span><br></pre></td></tr></table></figure><p>可以设想，当远程调用让李四增加金额成功了，由于网络问题远程调用并没有返回，此时本地事务提交事务就回滚了张三减少金额的操作，此时张三和李四的数据就不一致了。  </p><p>因此在分布式架构的基础上，传统数据库事务就无法使用了。  </p><p>张三和李四的账户不在一个数据库中甚至不在一个应用系统里，实现转账事务需要通过远程调用，由于网络问题就会导致分布式事务问题。  </p><p>三种事务异常情况：<br>（1）本地数据库操作：张三减少金额失败了；那么远程调用：让李四增加金额也需要失败；<br>（2）远程调用：让李四增加金额失败了；那么本地数据库操作：让张三减少金额也需要失败；<br>（3）本地数据库操作以及远程调用都成功了；但是远程调用由于网络问题，没有及时返回相应的结果，事务的时间超时了，那么这个时候会造成异常，也就是本地数据库操作就会发生回滚；而远程调用已经成功了；则事务不一致了此时；  </p><p>所以说分布式事务去使用本地事务的思想解决是行不通的；  </p><h3 id="分布式事务产生的场景"><a href="#分布式事务产生的场景" class="headerlink" title="分布式事务产生的场景"></a>分布式事务产生的场景</h3><ol><li>典型的场景就是微服务架构</li></ol><p>微服务之间通过远程调用完成事务操作。  </p><p>比如：订单微服务和库存微服务，下单的同时订单微服务请求库存微服务减少库存。  </p><p>简言之: 跨JVM进程产生分布式事务。  </p><ol start="2"><li>单体系统访问多个数据库实例</li></ol><p>当单体系统需要访问多个数据库（实例）时就会产生分布式事务；  </p><p>比如：用户信息和订单信息分别在两个MySQL实例存储，用户管理系统删除用户信息，需要分别删除用户信息及用户的订单信息，由于数据分布在不同的数据实例，需要通过不同的数据库链接去操作数据，此时产生分布式事务。  </p><p>简言之：跨数据库实例产生分布式事务。  </p><ol start="3"><li>多服务访问同一个数据库实例</li></ol><p>比如：订单微服务和库存微服务即使访问同一个数据库也会产生分布式事务，原因就是跨JVM进程，两个微服务持有了不同的数据库链接进行数据库操作，此时产生分布式事务。  </p><h2 id="分布式事务基础理论"><a href="#分布式事务基础理论" class="headerlink" title="分布式事务基础理论"></a>分布式事务基础理论</h2><p>通过前面的学习，了解到了分布式事务的基础概念。  </p><p>与本地事务不同的是，分布式系统之所以叫做分布式，是因为提供服务的各个节点分步在不同的机器上，相互之间通过网络交互，不能因为有一点网络问题就导致整个系统无法提供服务，网络因素成为了分布式事务的考量标准之一。  </p><p>因此，分布式事务需要更进一步的理论支持，接下来，学习一下分布式事务的CAP理论。  </p><p>在安静街分布式事务控制解决方案之前需要先学习一些基础理论，通过理论知识指导确定分布式事务控制的目标，从而帮助理解每个解决方案。  </p><h3 id="CAP理论"><a href="#CAP理论" class="headerlink" title="CAP理论"></a>CAP理论</h3><p>进行分布式事务控制，需要控制到什么程度：  </p><p>（1）出现了网络问题之后，数据不一致；  </p><p>（2）出现了网络问题后，某一个服务不可用；  </p><h4 id="理解CAP"><a href="#理解CAP" class="headerlink" title="理解CAP"></a>理解CAP</h4><p>CAP是Consistency、Availability、Partition tolerance三个词语的缩写，分别表示一致性、可用性、分区容忍性。  </p><p>下边分别来解释：  </p><p>  为了方便对CAP理论的理解，结合电商系统中的一些业务场景来理解CAP。  </p><p>  如下图，是商品信息管理的执行流程：  </p><p>整体执行流程如下：  </p><ol><li>商品服务请求主数据库写入商品信息（添加商品、修改商品、删除商品）</li><li>主数据库向商品服务响应写入成功</li><li>商品服务请求从数据库读取商品信息</li></ol><p>数据库读写分离好处：分担数据库的压力；  </p><p>主数据库只管提供写入操作，从数据库只管提供查询操作；  </p><blockquote><p>C - Consistency</p></blockquote><p>一致性是指写入操作的读操作可以读取到最新的数据状态，当数据分步到多个结点上，从任意节点读取到的数据都是最新的状态。  </p><p>上图中，商品信息的读写要满足一致性就是要实现如下目标：  </p><p>（1）商品服务写入主数据库成功，则向从数据库查询新数据也成功；<br>（2）商品服务写入主数据库失败，则向从数据库查询新数据也失败；  </p><p>如何实现一致性？（此时的一致性则指的是主从数据库的数据一致性）  </p><p>（1）写入主数据库后要将数据同步到从数据库；<br>（2）写入主数据库后，在向从数据库同步期间要将数据库锁定，待同步完成后再释放锁，以免在新数据写入成功后，向从数据库查询到旧的数据。  </p><p>同步的方式：<br>（1）主从复制；  </p><p>分布式系统一致性的特定：  </p><p>（1）由于存在数据同步的过程，写操作的响应会有一定的延迟；<br>（2）为了保证数据一致性会对资源暂时锁定，待数据同步完成释放锁定资源。<br>（3）如果请求数据同步失败的结点则会返回错误信息，一定不会返回旧数据。  </p><blockquote><p>A - Availability</p></blockquote><p>可用性是指任何事物操作都可以得到响应结果，且不会出现响应超时或者响应错误。  </p><p>上图中，商品信息读取满足可用性就要实现如下目标：  </p><p>（1）从数据库接收到数据查询的请求则立即能够响应数据查询结果；<br>（2）从数据库不允许出现响应超时或者响应错误。<br>（3）即使数据还没有同步过来，从数据库也要返回查询的数据，哪怕是旧数据，如果连就数据库也没有则可以按照约定返回一个默认信息，但不能返回错误或者响应超时。  </p><p>分布式可用性的特定：  </p><p>（1）所有请求都有响应，且不会出现响应超时或者响应错误。  </p><blockquote><p>P - Partition tolerance</p></blockquote><p>通常分布式系统的各个结点部署在不同的子网，这就是网络分区。  </p><p>不可避免的会出现由于网络问题而导致结点之间的通信失败，此时仍然可以对外提供服务，这就叫分区容忍性。  </p><p>上图中，商品信息读写满足分区容忍性就是要实现如下目标：  </p><p>（1）主数据库向从数据库同步数据失败不影响读写操作。<br>（2）其中一个结点挂掉不影响另一个节点对外提供服务。  </p><p>如何实现分区容忍性？  </p><p>（1）尽量使用异步取代同步操作，例如使用异步方式将数据从主数据库同步到从数据，这样结点之间才能有效的实现松耦合。<br>（2）添加从数据库结点，其中一个结点挂掉其他从结点提供服务。  </p><p>分布式分区容忍的特点：  </p><p>（1）分区容忍性是分布式系统具备的基本能力。  </p><h4 id="CAP组合方式"><a href="#CAP组合方式" class="headerlink" title="CAP组合方式"></a>CAP组合方式</h4><ol><li>上边商品管理的例子是否同时具备CAP呢？  </li></ol><p><strong>在所有分布式事务场景中不会同时具备CAP三个特性，因为在具备了P的的前提下C和A是不能共存的。</strong>  </p><p>比如：  </p><p>下图满足了P即表示分区容忍：  </p><p>本图分区容忍的含义是：  </p><p>（1）主数据库通过网络向从数据库同步数据，可以认为主从数据库部署在不同的分区，通过网络进行交互;<br>（2）当主数据库和从数据库之间的网络出现问题不影响主数据和从数据库对外提供服务。<br>（3）其中一个结点挂掉不影响另一节点对外提供服务。  </p><p>如果要实现C则必须保证数据一致性，在数据同步的时候为防止向从数据库查询不一致的数据则需要从数据库数据锁定，待同步完成之后解锁，如果同步失败从数据库要返回错误信息或超时信息。  </p><p>如果要实现A则必须保证数据可用性，不管任何时候都可以向从数据库查询数据，则不会响应超时或者返回错误信息。  </p><p>通过分析发现在满足P的前提下C和A存在矛盾性。  </p><ol start="2"><li>CAP有哪些组合方式呢？</li></ol><p>所以在生产中对分布式事务处理时要根据需求来确定满足CAP的哪两个方面。  </p><p>（1）AP：  </p><p>放弃一致性，追求分区容忍性和可用性。<br>这是很多分布式系统设计时的选择。  </p><p>例如：<br>上边的商品管理，完全可以实现AP，前提是只要用户可以接受所查询到的数据在一定时间内不是最新的即可。  </p><p>通常实现AP都会保证最终一致性，后面讲的BASE理论就是根据AP来实现的，一些业务场景，比如：订单退款、今日退款成功，明日账户到账，只要用户可以接受在一定时间内到账即可。  </p><p>我突然想到一个问题；就是现在深圳通或者是乘车码有个时候会出现延迟扣费的一个情况。是不是也是额，放弃数据一致性而追求可用性和分区容忍性？深圳通和乘车码肯定是一个分布式的一个系统架构，我觉得，因为这个使用的这个人群数量很高，且每一个人进行的交易也就是乘车的这个次数的交易量也很大，好了不说这个了。也就是说，它会有一个温馨提示：因扫码设备网络不稳定等原因，该笔乘车扣款有延迟。的这样一个信息。当没有及时进行扣款遵循可用性的原则应该是返回了一个默认或者是双方规定好的一个原则，没有去响应超时或者是这个响应错误信息，而是没有提示什么东西；然后事后去保证最终一致性，也就是进行了延迟扣款。我猜的。  </p><p>（2）CP：  </p><p>放弃可用性，追求一致性和分区容错性，zookeeper其实就是追求的强一致性，又比如说跨行转账，一次转账请求要求等待双方银行都完成整个事务才算完成。  </p><p>对对对，我之前我想的也是这个分区容忍性和容错好像啊。  </p><p>（3）CA：  </p><p>放弃分区容忍性，即不进行分区，不考虑由于网络不同或者结点挂掉的情况，则可以实现一致性和可用性，那么系统将不是一个标准的分布式系统，最常用的关系型数据库就满足了CA。  </p><p>上边的商品管理，如果要实现CA则架构如下：  </p><p>主数据库和从数据库中间不再进行数据同步，数据库可以响应每次的查询请求，通过事务隔离级别实现每个查询请求都可以返回最新的数据。  </p><h4 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h4><p>通过上面已经学习了CAP理论的相关知识，CAP是一个已经被证实的理论：  </p><p>一个分布式系统最多只能同时满足一致性（Consistency）、可用性（Availability）和分区容忍性（Partition tolerance）这三项中的两项。  </p><p>它可以作为进行架构设计、技术选型的考量标准。  </p><p>对于多数大型互联网应用的场景，结点众多、部署分散，而且现在的集群规模越来越大，所以节点故障、网络故障是常态，而且要保证服务可用性达到N个9（99.99…%），并且要达到良好的响应性能来提高用户体验，因此一般都会做出如下选择：保证P和A，舍弃C强一致，保证最终一致性。  </p><h3 id="BASE理论"><a href="#BASE理论" class="headerlink" title="BASE理论"></a>BASE理论</h3><ol><li>理解强一致性（CA、CP）和最终一致性（AP）</li></ol><p>CAP理论告诉我们一个分布式系统做多只能同时满足一致性（Consistency）、可用性（Availability）和分区容忍性（Partition tolerance）这三项中的两项。  </p><p>其中AP在实际应用中较多，AP即舍弃一致性，保证可用性和分区容忍性。  </p><p>但是在实际生产中很多场景都要实现一致性，比如前面举的例子，主数据库向从数据库同步数据，即使不要一致性，但是最终也要将数据库同步成功来保证数据一致，这种一致性和CAP中的一致性不同：<br>（1）CAP中的一致性要求在任何时间查询每个节点数据都必须一致，它强调的是强一致性；<br>（2）但是最终一致性是允许在一段时间内每个结点的数据不一致，但是经过一段时间每个结点的数据必须一致，它强调的是最终数据的一致性。  </p><ol start="2"><li>BASE理论介绍</li></ol><p>BASE是Basically Available（基本可用）、Soft state（软状态）和Eventually consistent（最终一致性）三个短语的缩写。  </p><p>BASE理论是对CAP中AP的一个扩展，通过牺牲强一致性来获得可用性，当出现故障允许部分不可用但要保证核心功能可用，允许数据在一段时间内是不一致的，但最终达到一致状态。  </p><p>满足BASE理论的事务，称之为“<strong>柔性事务</strong>”。  </p><ul><li>基本可用（Basically Available）：分布式系统在出现故障时，允许损失部分可用功能，保证核心功能可用。如，电商网站交易付款时出现问题了，商品依然可以正常浏览。  </li><li>软状态（Soft state）：由于不要求强一致性，所以BASE允许系统中存在中间状态（也叫软状态），这个状态不影响系统可用性，如订单的“支付中”、“数据同步中”等状态，待数据最终一致后状态改为“成功”状态。  </li><li>最终一致性（Eventually consistent）：最终一致是指经过一段时间后，所有结点数据都将会达到一致，如订单的“支付中”状态，最终会变为“支付成功”或者“支付失败”，使订单状态与实际交易结果达成一致，但是需要一定时间的延迟、等待。  </li></ul><h2 id="分布式事务解决方案之2PC（两阶段提交）"><a href="#分布式事务解决方案之2PC（两阶段提交）" class="headerlink" title="分布式事务解决方案之2PC（两阶段提交）"></a>分布式事务解决方案之2PC（两阶段提交）</h2><p>前面已经学习了分布式事务的基础理论，以理论为基础，针对不同的分布式场景业界常见的解决方案有2PC、TCC、可靠消息最终一致性、最大努力通知这几种。  </p><h3 id="什么是2PC"><a href="#什么是2PC" class="headerlink" title="什么是2PC"></a>什么是2PC</h3><p>2PC即两阶段提交协议，是将整个事务流程分为两个阶段，准备阶段（Prepare phase）、提交阶段（commit phase），2是指两个阶段，P是指准备阶段，C是指提交阶段。  </p><p>举例： 张三和李四好久不见，老友约起聚餐，饭店老板要求先买单，才能出票。  </p><p>这时张三和李四分别抱怨近况不如意，囊中羞涩，都不愿意请客，这时只能AA。  </p><p>只有张三和李四都付款，老板才能出票安排就餐。  </p><p>但是由于张三和李四都是铁公鸡，形成了尴尬的一幕：  </p><p>准备阶段：老板要求张三付款，张三付款。老板要求李四付款，李四付款。  </p><p>提交阶段：老板出票，两人拿票纷纷落座就餐。  </p><p>例子中形成了一个事务，若张三或者李四其中一个人拒绝付款，或者钱不够，店家老板都不会给出票，并且会把已收款退回。  </p><p>整个失误过程由事务管理器和参与者完成，店家老板就是事务管理器，张三、李四就是事务参与者，事务管理器负责决策整个分布式事务的提交和回滚，事务参与者负责自己本地事务的提交和回滚。  </p><p>在计算机中部分关系数据库如Oracle、MySQL支持两阶段提交协议，如下图：  </p><p>（1）准备阶段（Prepare phase）：事务管理器给每个参与者发送Prepare消息，每个数据库参与者在本地执行事务，并写本地的Undo/Redo日志，此时事务没有提交。  </p><p>（Undo日志是记录修改前的数据，用于数据库回滚；Redo日志是记录修改后的数据，用于提交事务后写入数据库文件）  </p><p>（2）提交阶段（Commit phase）：如果事务管理器受到了参与者的执行失败或者超时消息时，直接给每个参与者发送回滚（Rollback）消息；否则，发送提交（Commit）消息；参与者根据事务管理器的指令执行提交或者回滚操作，并释放事务处理过程中使用的锁资源。注意：必须在最后阶段释放锁资源。  </p><h3 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h3><h4 id="XA方案"><a href="#XA方案" class="headerlink" title="XA方案"></a>XA方案</h4><p>2PC的传统方案是在数据库层面实现的。  </p><p>如Oracle、MySQL都支持2PC协议，为了统一标准减少行业内不比要的对接成本，需要制定标准化的处理模型以及接口标准，国际开发标准组织Open Group定义了分布式事务处理模型DTP（Distributed Transaction Processing Reference Model）。  </p><p>这套模型就是为了规范数据库支持2PC协议的整个实现的过程。  </p><p>为了更明确XA方案的内容，下面<strong>新用户注册送积分</strong>为例来说明：  </p><p>执行流程如下：  </p><p>（1）应用程序（AP）持有用户库和积分库两个数据源。<br>（2）准备阶段：应用程序（AP）通过TM通知用户库RM（Resource Manager）新增用户，同时通知积分库RM为该用户新增积分，RM此时并未提交事务，此时用户和积分资源锁定。<br>（3）TM（事务管理器Transaction Manager）收到执行回复，只要有一方失败则分别向其他RM发起回滚事务，回滚完毕，资源锁释放。<br>（4）TM收到执行回复，全部成功，此时向所有RM发起提交事务，提交完毕，资源锁释放。  </p><p>DTP模型定义如下角色：  </p><ul><li><strong>AP</strong>（Application Program）：即应用程序，可以理解为使用DTP分布式事务的程序。  </li><li><strong>RM</strong>（Resource Manager）：即资源管理器，可以理解为事务的参与者，一般情况下是指一个数据库实例，通过资源管理器对该数据库进行控制，资源管理器控制着分支事务。  </li><li><strong>TM</strong>（Transaction Manager）：事务管理器，负责协调和管理事务，事务管理器控制着全局事务，管理事务生命周期，并协调各个RM。<strong>全局事务</strong>是指分布式事务处理环境中，需要操作多个数据库共同完成一个工作，这个工作即是一个全局事务。  </li><li>DTP模型定义TM和RM之间通讯的接口规范叫<strong>XA</strong>，简单理解为数据库提供的2PC接口协议，<strong>基于数据库的XA协议来实现2PC又称为XA方案</strong>。</li><li>以上三个角色之间的交互方式如下：<br>（1）TM向AP提供应用程序编程接口，AP通过TM提交以及回滚事务。<br>（2）TM消息中间件通过XA接口来通知RM数据库事务的开始、结束以及提交、回滚等。  </li></ul><p>总结：  </p><p>整个2PC的事务流程涉及到三个流程AP、RM、TM。<br>AP指的是2PC分布式事务的应用程序；<br>RM指的是资源管理器；它控制着分支事务；<br>TM指的是事务管理器，它控制着整个全局事务；  </p><p>（1）在<strong>准备阶段</strong>RM执行实际的业务操作，但是不提交事务，自愿锁定；<br>（2）在<strong>提交阶段</strong>TM会接受RM在准备阶段的执行回复，只要有任意一个RM执行失败，TM会通知所有RM执行回滚操作；否则，TM将会通知所有的RM提交该事务，提交阶段结束资源释放锁；  </p><p>XA方案的问题：<br>（1）需要本地数据库支持XA协议。<br>（2）资源锁需要等到两个阶段结束才释放，性能较差。  </p><h4 id="Seata方案"><a href="#Seata方案" class="headerlink" title="Seata方案"></a>Seata方案</h4><p>Seata是由阿里中间件团队发起的开源项目Fescar，后更名为Seata，它是一个开源的分布式事务框架。  </p><p>传统2PC的问题在Seata中得到了解决，它通过对本地关系数据库的分支事务的协调来驱动完成全局事务，是工作在应用层的中间件。  </p><p>（Seata不要求关系数据库是否遵从2PC协议）  </p><p>主要优点是性能较好，且不长时间占用连接资源，它以高效并且对业务零侵入的方式解决微服务场景下面临的分布式事务问题，他目前提供AT模式（即2PC）以及TCC模式的分布式事务解决方案。  </p><p><strong>Seata的设计思想如下：</strong>  </p><p>Seata的设计目标其一是对业务目标无侵入，因此从业务无侵入的2PC方案着手，在<strong>传统2PC</strong>的基础上演进，并解决2PC方案面临的问题。  </p><p>Seata把一个分布式事务理解成一个包含了若干<strong>分支事务</strong>的<strong>全局事务</strong>。  </p><p>全局事务的职责是协调其下管辖的分支事务达成一致，要么一起成功，要么一起失败回滚。  </p><p>此外，通常分支事务本身就是一个关系数据库的本地事务，下图是全局事务与分支事务的关系图：  </p><p>与传统的2PC的模型类似，Seata定义了3个组件来协议分布式事务的处理过程：  </p><ul><li>Transaction Coordinator（TC）：事务协调器，它是独立的中间件，需要独立部署运行，它维护全局事务的运行状态，接受TM指令发起全局事务的提交与回滚，负责与RM通信协调各个分支事务的提交或者回滚。  </li><li>Transaction Manager（TM）：事务管理器，TM需要嵌入应用程序中工作，它负责开启一个全局事务，并最终向TC发起全局提交护着全局回滚的指令。  </li><li>Resource Manager（RM）：控制分支事务，负责分支注册、状态汇报，并接收事务协调器TC的指令，驱动分支（本地）事务的提交和回滚。  </li></ul><p>还拿<strong>新用户注册送积分</strong>举例Seata的分布式事务过程：  </p><p>具体的执行流程如下：  </p><p>（1）用户服务的TM向TC申请开启一个全局事务，全局事务创建成功并生成一个全局唯一的XID；<br>（2）用户服务的RM向TC注册分支事务，该分支事务在用户服务执行新增用户逻辑（该事务提交，即第一个阶段当中就提交了事务），并将其纳入XID对应全局事务的管辖。<br>（3）用户服务执行分支事务，向用户表插入一条记录。<br>（4）逻辑执行到远程调用 积分服务 时（XID在微服务调用链路的上下文中传播）。积分服务的RM向TC注册分支事务，该分支事务执行增加积分的逻辑，并将其纳入到XID对应全局事务的管辖。<br>（5）积分服务执行分支事务，向积分记录表插入一条记录，执行完毕后（完成分支事务，即已经提交分支事务，释放锁），返回用户服务。（如当其他的分支事务后期没有成功，导致需要回滚，即将向积分记录表当中插入的该条记录进行删除即可）<br>（6）用户服务分支事务执行完毕。<br>（7）TM向TC发起针对XID的全局提交或者回滚决议。<br>（8）TC调度XID下管辖的全部分支事务完成提交或者回滚请求。  </p><p><strong>Seata实现2PC与传统2PC的差别：</strong>  </p><p>架构层次方面，<strong>传统2PC</strong> 方案的RM实际上就是在数据库底层，RM本质上就是数据库自身，通过XA协议实现，而Seata的RM是以jar包的形式作为中间件层部署在应用程序这一侧的。  </p><p>两阶段提交方面，<strong>传统2PC</strong> 无论第二阶段的决议是commit还是rollback，事务性资源的锁都要保持到Phase2完成才释放。  </p><p>而Seata的做法是在Phase1就将本地事务提交，这样就可以省去Phase2持锁的时间，整体提高效率。  </p><h3 id="Seata实现2PC事务"><a href="#Seata实现2PC事务" class="headerlink" title="Seata实现2PC事务"></a>Seata实现2PC事务</h3><h4 id="业务说明"><a href="#业务说明" class="headerlink" title="业务说明"></a>业务说明</h4><p>本示例通过Seata中间件实现分布式事务，模拟三个账户的转账交易过程。  </p><p>两个账户在两个个不同的银行（张三在bank1、李四在bank2），bank1和bank2是两个微服务。  </p><p>交易过程是：张三给李四转账指定金额。  </p><p>上述交易步骤，要么一起成功，要么一起失败，必须是一个整体性的事务。  </p><h4 id="本示例程序组成部分如下"><a href="#本示例程序组成部分如下" class="headerlink" title="本示例程序组成部分如下"></a>本示例程序组成部分如下</h4><p>数据库：MySQL-5.7.25（包括bank1和bank2两个数据库）<br>JDK：64位jdk1.8.0_201<br>微服务框架：spring-boot-2.1.3、spring-cloud-Greenwich.RELEASE<br>seata客户端（RM、TM）：spring-cloud-alibaba-seata-2.1.0.RELEASE<br>seata服务端（TC）：seata-server-0.7.1<br>微服务以及数据库的关系：<br>  dtx/dtx-seata-demo/seata-demo-bank1 银行1，操作张三账户，连接数据库1<br>  dtx/dtx-seata-demo/seata-demo-bank2 银行2，操作李四账户，连接数据库2<br>服务注册中心：dtx/discover-server  </p><p>本示例程序技术架构如下：  </p><p>交互流程如下:  </p><ol><li>请求bank1进行转账，传入转账金额。  </li><li>bank1减少转账金额，调用bank2，传入转账金额。  </li></ol><h4 id="创建数据库"><a href="#创建数据库" class="headerlink" title="创建数据库"></a>创建数据库</h4><h4 id="启动TC事务协调器"><a href="#启动TC事务协调器" class="headerlink" title="启动TC事务协调器"></a>启动TC事务协调器</h4><p>（1）下载Seata服务器<br>（2）解压并启动  </p><p>运行模式（file，nacos，eureka，redis，zk，consul，etcd3，sofa；file模式，因为TC，Seata-server是事务协调器，记录各个分支事务的执行情况，所以数据以文本的方式写到了文件/本地的一个目录当中，还有数据库的方式就将写到数据库当中还支持其他方式）  </p><h4 id="discover-server"><a href="#discover-server" class="headerlink" title="discover-server"></a>discover-server</h4><h4 id="导入案例工程dtx-seata-demo"><a href="#导入案例工程dtx-seata-demo" class="headerlink" title="导入案例工程dtx-seata-demo"></a>导入案例工程dtx-seata-demo</h4><h4 id="启动TC事务协调器-1"><a href="#启动TC事务协调器-1" class="headerlink" title="启动TC事务协调器"></a>启动TC事务协调器</h4><h4 id="Seata执行流程"><a href="#Seata执行流程" class="headerlink" title="Seata执行流程"></a>Seata执行流程</h4><ol><li><p>正常提交流程  </p></li><li><p>回滚流程</p></li></ol><p>要点说明：  </p><ol><li>每个RM使用DataSourceProxy连接数据库，其目的是使用ConnectionProxy，使用数据源和数据连接代理的目的就是在第一阶段将undo_log和业务数据放在一个本地事务提交，这样就保存了只要有业务操作就一定有undo_log。  </li><li>在第一阶段undo_log中存放了数据修改前和修改后的数据，为事务回滚做好准备，所以第一阶段完成就已经将分支事务提交，也就释放了锁资源。  </li><li>TM开启全局事务开始，将XID全局事务id放在事务上下文中，通过feign调用也将XID传入下游分支事务，每个分支事务将自己的Branch ID分支事务与XID关联。</li><li>第二阶段全局事务提交，TC会通知各个分支参与者提交分支事务，在第一阶段就已经提交了分支事务，这里各个参与者只需要删除undo_log即可，并且可以异步执行，第二阶段很快就可以完成。</li><li>第二阶段全局事务回滚，TC会通知各个分之参与者回滚事务，通过XID与Branch ID找到相应的回滚日志，通过回滚日志生成反向的SQL并执行，以完成分支事务回滚到之前的状态，如果回滚失败则会重试回滚操作。</li></ol><h4 id="dtx-seata-demo-bank1"><a href="#dtx-seata-demo-bank1" class="headerlink" title="dtx-seata-demo-bank1"></a>dtx-seata-demo-bank1</h4><p>为什么要有注册中心；因为张三要调用李四的微服务，要进行转账，所以让微服务都注册到注册中心；实现远程的调用；这个注册中心用的是spring-cloud的seata；  </p><h4 id="dtx-seata-demo-bank2"><a href="#dtx-seata-demo-bank2" class="headerlink" title="dtx-seata-demo-bank2"></a>dtx-seata-demo-bank2</h4><h4 id="测试环境"><a href="#测试环境" class="headerlink" title="测试环境"></a>测试环境</h4><h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>本节讲解了传统2PC（基于数据库XA协议）和Seata实现2PC的两种2PC方案，由于Seata的零侵入并解决了传统2PC长期锁资源的问题，所以推荐采用Seata实现2PC。  </p><p>Seata实现2PC要点：  </p><ol><li>全局事务开始使用@GolobalTransaction标识；</li><li>每个本地事务方案仍然使用@Transactional标识；</li><li>每个数据都需要创建undo_log表，此表是Seata保证本地事务一致性的关键；  </li></ol><h2 id="分布式事务解决方案之TCC"><a href="#分布式事务解决方案之TCC" class="headerlink" title="分布式事务解决方案之TCC"></a>分布式事务解决方案之TCC</h2><h3 id="什么是TCC事务"><a href="#什么是TCC事务" class="headerlink" title="什么是TCC事务"></a>什么是TCC事务</h3><p>2PC：两阶段提交协议（一个是准备阶段一个是提交阶段）；有两种处理方式（一种是XA方案一种是阿里的Seata方案）；协议本身是一致的也就是都存在两个阶段；  </p><p>2PC和TCC都是用来执行控制分布式事务的；  </p><p>TCC是Try、Confirm、Cancel三个词语的缩写；  </p><p>TCC要求每个分支事务实现三个操作：预处理Try、确认Confirm、撤销Cancel。  </p><p>Try操作做业务检查以及资源预留，Confirm做业务确认操作，Cancel实现一个与Try相反的操作即回滚操作。  </p><p>TM首先发起所有的分支事务的Try操作，任何一个事务的Try操作执行失败，TM将会发起所有分支事务的Cancel操作；若Try操作全部成功，TM将会发起所有分支事务的Confirm操作，其中Confirm/Cancel操作若执行失败，TM会进行重试。  </p><p>TCC分为三个阶段：  </p><ol><li><strong>Try</strong>阶段是做业务检查（一致性）以及资源预留（隔离），此阶段仅是一个初步操作，它和后续的Confirm一起才能真正构成一个完整的业务逻辑。  </li><li><strong>Confirm</strong>阶段是做确认提交，Try阶段所有分支事务执行成功后开始执行Confirm。通常情况下，采用TCC则认为Confirm阶段是不会出错的。即：只要Try成功，Confirm一定成功。若Confirm阶段真的出错了，需要引入重试机制或者人工处理。  </li><li><strong>Cancel</strong>阶段是在业务执行错误需要回滚的状态下执行分支事务的业务徐晓，预留资源释放。通常情况下，采用TCC则认为Cancel阶段也是一定成功的。若Cancel阶段真的出错了，需要引入重试机制或者人工处理。  </li><li>TM事务管理器  </li></ol><p>TM事务管理器可以实现独立的服务，也可以让<strong>全局事务发起方</strong>充当TM的角色，TM独立出来是为了成为公用组件，是为了考虑系统结构和软件复用。  </p><p>TM在发起全局事务时生成全局事务记录，全局事务ID贯穿整个分布式事务调用链条。用来记录事务上下文，追踪和记录状态，由于Confirm和Cancel失败需要进行重试，因此需要实现为幂等，幂等性是指同一个操作无论请求多少次，其结果都相同。  </p><h3 id="TCC解决方案"><a href="#TCC解决方案" class="headerlink" title="TCC解决方案"></a>TCC解决方案</h3><p>转账是一种业务，注册送积分也是一种业务，抛开业务的话，其实TCC本身的技术协议是一致的，所以在市面上存在有很多的框架来处理TCC的事务。  </p><p>目前市面上的TCC框架众多比如下面这几种：  </p><table>  <thead>    <tr>      <th>框架名称</th>      <th>GitHub地址</th>      <th>star数量</th>    </tr>  </thead>  <tbody>    <tr>      <td>tcc-transaction(类似Seata也需要单独进行部署相关的seata server)</td>      <td>https://xxxxx</td>      <td>xxxxx</td>    </tr>    <tr>      <td>Hmily</td>      <td>https://xxxxx</td>      <td>xxxxx</td>    </tr>    <tr>      <td>ByteTCC</td>      <td>https://xxxxx</td>      <td>xxxxx</td>    </tr>    <tr>      <td>EasyTransaction</td>      <td>https://xxxxx</td>      <td>xxxxx</td>    </tr>  </tbody></table><p>上一节所讲的Seata也支持TCC，但是Seata的TCC模式对于Spring Cloud并没有提供支持。<br>目标是理解TCC原理以及事务协调运作的过程，因此更倾向于轻量级易于理解的框架，因此最终确定了Hmily。  </p><p>Hmily是一个功性能分布式事务TCC开源框架。  </p><p>基于Java语言来开发（JDK1.8），支持Dubbo、Spring Cloud等RPC框架进行分布式事务。（且支持版本较新）  </p><p>它目前支持一下特性:  </p><ul><li>支持嵌套事务（Nested transaction support）；</li><li>采用disruptor框架进行事务日志的异步读写，与RPC框架的性能毫无差别；</li><li>支持SpringBoot-starter项目启动，使用简单；  </li><li>RPC框架支持：dubbo、motan、springcloud</li><li>本地事务存储支持：redis、mongodb、zookeeper、file、mysql；</li><li>采用Aspect Aop切面思想与Spring无缝集成，天然支持集群。  </li><li>RPC事务恢复，超时异常恢复等；</li></ul><p>Hmily利用AOP对参与分布式事务的本地方法与远程方法进行拦截处理，通过多方拦截，事务参与者能透明的调用到另一方的Try、Confirm、Cancel方法；传递事务上下文；并记录事务日志；酌情进行补偿，重试等；  </p><p>Hmily不需要事务协调服务，但需要提供一个数据库（mysql/mongodb/zookeeper/redis/file）来进行日志存储。  </p><p>Hmily实现的TCC服务于普通的服务一样，只需要暴露一个接口，也就是它的Try业务。<br>Confirm/Cancel业务逻辑，只是因为全局事务提交/回滚的需要才提供的，因此Confirm/Cancel业务只需要被HmilyTCC事务框架发现即可，不需要被调用它的其他业务服务所感知。  </p><p><strong>TCC需要注意三种异常处理分别是空回滚、幂等、悬挂；</strong>  </p><p><strong>空回滚：</strong>  </p><p>在没有调用TCC资源Try方法的情况下，调用了二阶段的Cancel方法，Cancel方法需要识别出这是一个空回滚，然后直接返回成功；  </p><p>出现原因是：当一个分支事务所在服务宕机或者是网络异常，分支事务调用记录为失败；这个时候其实是没有执行Try阶段，当故障恢复后，分布式事务进行回滚则会调用二阶段的Cancel方法，从而形成空回滚。  </p><p>解决思路是关键就是要识别出这个空回滚。  </p><p>思路很简单就是需要知道一阶段是否执行，如果执行了，那么就是正常回滚；如果没有执行，那么就是空回滚；  </p><p>前面已经说过:TM在发起全局事务时生成全局事务记录，全局事务ID贯穿整个分布式事务调用链条。在额外增加一张分支事务记录表，其中有全局事务ID和分支事务ID，第一阶段Try方法里会插入一条记录，表示一阶段执行了。<br>Cancel接口里读取该记录，如果该记录存在，则正常回滚；如果该记录不存在，则是空回滚。  </p><p><strong>幂等：</strong>  </p><p>通过前面的介绍已经了解到，为了保证TCC二阶段提交重试机制不会引发数据不一致，要求TCC阶段Try、Confirm、Cancel接口保证幂等，这样不会重复使用或者释放资源。  </p><p>如果幂等控制没有做好，很有可能导致数据不一致等严重问题；  </p><p>解决思路在上述“分支事务记录”中增加执行状态，每次执行前都查询该状态。  </p><p><strong>悬挂：</strong>  </p><p>悬挂就是对一个分布式事务，其二阶段Cancel接口比Try接口先执行。  </p><p>出现原因是在RPC调用分支事务Try时，先注册分支事务，再调用RPC调用；  </p><p>如果此时RPC调用的网络发生拥堵，通常RPC调用是有超时时间的，RPC超时以后，TM就会通知RM回滚该分布式事务，可能回滚完成后，RPC请求才到达参与者真正执行，而一个Try方法预留的业务资源，只有该分布式事务才能使用，该分布式事务第一阶段预留的业务资源就再也没有人能够处理了。对于这种情况，称之为悬挂。即业务资源预留后没有办法继续处理。  </p><p>解决思路时候如果二阶段执行完成，那一阶段就不能再继续执行。<br>在执行一阶段事务时判断在全局事务下，“分支事务记录”表中是否已经有二阶段事务记录，如果有则不执行Try；  </p><p><strong>举例，场景为A转账30元给B，A和B账户在不同的服务。</strong><br><strong>方案一：</strong><br>账户A  </p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    检查余额是否够<span class="number">30</span>元；</span><br><span class="line">    扣减<span class="number">30</span>元；</span><br><span class="line">confirm：</span><br><span class="line">    空；</span><br><span class="line">cancel：</span><br><span class="line">    增加<span class="number">30</span>元；</span><br></pre></td></tr></table></figure><p>账户B  </p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    增加<span class="number">30</span>元</span><br><span class="line">confirm：</span><br><span class="line">    空</span><br><span class="line">cancel：</span><br><span class="line">    减少<span class="number">30</span>元</span><br></pre></td></tr></table></figure><p><strong>方案1说明：</strong>  </p><p>（1）账户A，这里的余额就是所谓的业务资源，按照前面提到的原则：<br>在第一阶段需要检查并预留业务资源；<br>因此，在扣钱TCC资源的Try接口里先检查A账户余额是否足够，如果足够则扣除30元。<br>Confirm接口表示正式提交，由于业务资源已经在Try接口里扣除掉了，那么在第二阶段的Confirm接口里可以什么都不用做。<br>Cancel接口的执行表示整个事务的回滚，账户A回滚则需要把Try接口里扣除掉的30元还给账户A。<br>（2）账户B，在第一阶段Try接口里实现给账户B加钱；<br>Cancel接口的执行表示整个事务的回滚；<br>账户B回滚则需要把Try接口里加的30元再减去；  </p><p><strong>方案1的问题分析：</strong>  </p><p>（1）如果账户A的try没有执行；在Cancel则就多加了30元（需要空回滚判断）；<br>（2）由于Try、Confirm、Cancel都是由单独的线程去调用，且会出现重复调用，所以都需要实现幂等（幂等）；<br>（3）账户B在try中增加了30元，当Try执行完成后可能会被其他线程给消费了；<br>（4）如果账户B的Try没有执行在Cancel则就多减了30元（需要空回滚判断）；  </p><p><strong>问题解决：</strong>  </p><p>（1）账户A的Cancel方法需要判断Try方法是否执行，正常执行Try后方可执行Cancel；避免空回滚的发生；<br>（2）Try、Cancel、Confirm方法都需要进行实现幂等；<br>（3）账户B在Try中不允许更新账户金额，在Confirm中更新账户金额；以免提前新增的30元被其他的业务逻辑给消费掉；<br>（4）账户B的Cancel方法需要判断Try方法是否执行，正常执行Try后方可执行Cancel；  </p><p><strong>优化方案：</strong>  </p><p>账户A  </p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">try</span>幂等校验</span><br><span class="line">    <span class="keyword">try</span>悬挂处理（即Confirm/Cancel二阶段当中有一个执行了，那么Try阶段则不进行执行）</span><br><span class="line">    检查余额是否够<span class="number">30</span>元</span><br><span class="line">    扣减<span class="number">30</span>元</span><br><span class="line">confirm:</span><br><span class="line">    空</span><br><span class="line">cancel:</span><br><span class="line">    cancel幂等校验</span><br><span class="line">    cancel空回滚处理（如果Try没有执行，那么Cancel就不进行执行）</span><br><span class="line">    增加可用余额<span class="number">30</span>元</span><br></pre></td></tr></table></figure><p>账户B  </p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    空</span><br><span class="line"><span class="keyword">confirm</span>:</span><br><span class="line">    <span class="keyword">confirm</span>幂等校验</span><br><span class="line">    正式增加<span class="number">30</span>元</span><br><span class="line">cancel：</span><br><span class="line">    空</span><br></pre></td></tr></table></figure><h3 id="Hmily实现TCC事务"><a href="#Hmily实现TCC事务" class="headerlink" title="Hmily实现TCC事务"></a>Hmily实现TCC事务</h3><h4 id="业务说明-1"><a href="#业务说明-1" class="headerlink" title="业务说明"></a>业务说明</h4><p>本实例通过Hmily实现TCC分布式事务，模拟两个账户的转账交易过程。  </p><p>两个账户分别在不同的银行（张三在bank1、李四在bank2），bank1、bank2是两个微服务。<br>交易过程是：张三给李四转账指定金额；<br>上述交易步骤，要么一起成功，要么一起失败，必须是一个整体性的事务；  </p><h4 id="程序组成部分"><a href="#程序组成部分" class="headerlink" title="程序组成部分"></a>程序组成部分</h4><p>数据库：MySQL-5.7.25（包括bank1和bank2两个数据库）<br>JDK：64位jdk1.8.0_201<br>微服务框架：spring-boot-2.1.3、spring-cloud-Greenwich.RELEASE<br>Hmily：hmily-springcloud.2.0.4-RELEASE<br>seata客户端（RM、TM）：spring-cloud-alibaba-seata-2.1.0.RELEASE<br>seata服务端（TC）：seata-server-0.7.1<br>微服务以及数据库的关系：<br>  dtx/dtx-seata-demo/seata-demo-bank1 银行1，操作张三账户，连接数据库1<br>  dtx/dtx-seata-demo/seata-demo-bank2 银行2，操作李四账户，连接数据库2<br>服务注册中心：dtx/discover-server  </p><h4 id="创建数据库-1"><a href="#创建数据库-1" class="headerlink" title="创建数据库"></a>创建数据库</h4><p>创建hmily数据库，用于存储hmily框架记录的数据；  </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">database</span> <span class="string">'hmily'</span> <span class="built_in">character</span> <span class="keyword">set</span> <span class="string">'utf8'</span> <span class="keyword">collate</span> <span class="string">'utf8_general_ci'</span>;</span><br></pre></td></tr></table></figure><h4 id="discover-server-1"><a href="#discover-server-1" class="headerlink" title="discover-server"></a>discover-server</h4><h4 id="导入案例工程dtx-tcc-demo"><a href="#导入案例工程dtx-tcc-demo" class="headerlink" title="导入案例工程dtx-tcc-demo"></a>导入案例工程dtx-tcc-demo</h4><h4 id="dtx-tcc-demo-bank1"><a href="#dtx-tcc-demo-bank1" class="headerlink" title="dtx-tcc-demo-bank1"></a>dtx-tcc-demo-bank1</h4><h4 id="dtx-tcc-demo-bank2"><a href="#dtx-tcc-demo-bank2" class="headerlink" title="dtx-tcc-demo-bank2"></a>dtx-tcc-demo-bank2</h4><h4 id="测试场景"><a href="#测试场景" class="headerlink" title="测试场景"></a>测试场景</h4><h3 id="小结-1"><a href="#小结-1" class="headerlink" title="小结"></a>小结</h3><p>如果拿TCC事务的处理流程与2PC两阶段提交做比较，2PC通常是在跨库的DB层面，而TCC则在应用层面的处理，需要通过业务逻辑来实现，这种分布式事务的实现的优势在于，可以让<strong>应用自己定义数据操作的粒度，使得降低锁冲突，提高吞吐量称为可能</strong>。  </p><p>而不足之处则在于对应用的侵入性非常强，业务逻辑处理的每个分支都需要实现try、confirm、cancel三个操作。<br>此外，其实实现难度也比较大，需要按照网络状态、系统故障等不同的失败原因实现不同的回滚策略。  </p><h2 id="分布式事务解决方案之可靠消息最终一致性"><a href="#分布式事务解决方案之可靠消息最终一致性" class="headerlink" title="分布式事务解决方案之可靠消息最终一致性"></a>分布式事务解决方案之可靠消息最终一致性</h2><h3 id="什么是可靠消息最终一致性事务"><a href="#什么是可靠消息最终一致性事务" class="headerlink" title="什么是可靠消息最终一致性事务"></a>什么是可靠消息最终一致性事务</h3><p>可靠消息最终一致性方案是指：当事务发起方执行完成本地事务后并发出一条消息，事务参与者（消息消费者）一定能够接收消息并处理事务成功；此方案强调的是只要消息发给事务参与方，最终事务要达到一致。  </p><p>此方案是利用消息中间件来完成。如下图：  </p><p>事务发起方（消息生产方）将消息发给消息中间件，事务参与方从消息中间件当中接收消息，事务发起方和消息中间件之间，事务参与方（消息消费方）和消息中间件之间都是通过网络通讯，由于网络通讯的不确定性会导致分布式事务问题。  </p><p>因此可靠消息最终一致性要解决一下几个问题：  </p><ol><li><strong>本地事务与消息发送的原子性问题</strong>  </li></ol><p>事务的发起方到事务的参与方，这个消息必须可靠；也就是张三必须将消息发送到李四；李四必须能够接受到这个消息；并且这个可靠消息最终一致性最终还要强调一点的是最终一致性；即张三在把这个钱扣掉之后，他会要保证这个消息一定会要发给李四，那么李四接收到这个消息之后就可以进行处理加钱的这个业务逻辑处理；在这过程当中如果李四加钱失败怎么办，张三能够回滚事务吗？不能回滚。所以这个叫做可靠消息最终一致性分成两部分进行解读；一部分是可靠消息；一部分是最终一致性；可靠消息是指消息从张三传给李四，从事务的发起方传给事务的参与方，这个过程需要是可靠的；那么最终一致性是：张三，即事务的发起方，执行完本地事务；并且张三一定保证消息发给李四；那最终李四就需要保证最终一致性即无论如何都要将钱加上；这也就是所说的可靠消息最终一致性；  </p><p>本地事务与消息发送的原子性问题即：事务发起方在本地事务执行成功后消息必须发出去，否则就丢弃消息。<br>即实现本地事务和消息发送的原子性，要么都成功，要么都失败；<br>本地事务与消息发送的原子性问题是实现可靠消息最终一致性方案的关键问题：  </p><p>先来尝试下这种操作，先发送消息，再操作数据库:  </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">begin</span> <span class="keyword">transaction</span>:</span><br><span class="line">        //<span class="number">1.</span>发送MQ</span><br><span class="line">        //<span class="number">2.</span>数据库操作</span><br><span class="line"><span class="keyword">commit</span> <span class="keyword">transaction</span>;</span><br></pre></td></tr></table></figure><p>这种情况下无法保证数据库操作与发送消息的一致性，因为可能发送消息成功，数据库操作失败；  </p><p>你立马想到第二种方案，先进行数据库操作，再发送消息：  </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">begin</span> <span class="keyword">transaction</span>:</span><br><span class="line">        //<span class="number">1.</span>数据库操作</span><br><span class="line">        //<span class="number">2.</span>发送MQ</span><br><span class="line"><span class="keyword">commit</span> <span class="keyword">transaction</span>;</span><br></pre></td></tr></table></figure><p>这种情况下貌似没有问题，如果发送MQ消息失败，就会抛出异常，导致数据库事务回滚。<br>但如果是超时异常，数据库回滚，但是MQ已经正常发送出去了，同样就会导致不一致。  </p><ol start="2"><li><strong>事务参与方接受消息的可靠性</strong></li></ol><p>事务参与方必须能够从消息队列接收到消息，如果接收消息失败可以重复接收消息。  </p><ol start="3"><li><strong>消息重复消费的问题</strong>  </li></ol><p>由于网络的存在，若某一个消费结点超时但是消费成功，此时消息中间件会重复投递此消息，就导致了消息的重复消费。<br>要解决消息重复消费的问题就要实现事务参与方的方法幂等性。  </p><h3 id="解决方案-1"><a href="#解决方案-1" class="headerlink" title="解决方案"></a>解决方案</h3><p>上节讨论了可靠消息最终一致性事务方案需要解决的问题，本节讨论具体的解决方案；  </p><h4 id="本地消息表方案"><a href="#本地消息表方案" class="headerlink" title="本地消息表方案"></a>本地消息表方案</h4><p>本地消息表这个方案最初是eBay提出的，此方案的核心是通过本地事务保证数据业务操作和消息的一致性，然后通过定时任务将消息发送至消息中间件，待确认消息发送给消费成功再将消息删除；  </p><p>下面以注册送积分为例来说明：  </p><p>下例共有两个微服务交互，用户服务和积分服务，用户服务负责添加用户，积分服务负责增加积分。  </p><p>交互流程如下:  </p><ol><li><strong>用户注册</strong>  </li></ol><p>用户服务在本地新增用户和增加“积分消息日志”。（用户表和消息表通过本地事务保证一致）  </p><p>下边是伪代码：  </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">begin</span> <span class="keyword">transaction</span>;</span><br><span class="line">      //1.新增用户</span><br><span class="line">      //2.存储积分消息日志</span><br><span class="line"><span class="keyword">commit</span> <span class="keyword">transaction</span>;</span><br></pre></td></tr></table></figure><p>这种情况下，本地数据库操作与存储积分消息日志处于同一个事务中，本地数据库操作与记录消息日志操作具备原子性。  </p><ol start="2"><li><strong>定时任务扫描日志</strong>  </li></ol><p>如何保证将消息发送给消息队列？  </p><p>经过第一步消息已经写到消息日志表中，可以启动独立的线程，定时对消息日志表中的消息进行扫描并发送至消息中间件，在消息中间件反馈发送成功后删除该消息日志，否则等待定时任务下一周期重试。  </p><ol start="3"><li><strong>消费消息</strong>  </li></ol><p>如何保证消费者一定能消费到消息？  </p><p>这里可以使用MQ的Ack（即消息确认机制）机制，消费者监听MQ，如果消费者接收到消息并且业务处理完成后向MQ发送Ack（即消息确认），此时说明消费者正常消费消息完成，MQ将不再向消费者推送消息，否则消费者户不断重试向消费者来发送消息。  </p><p>积分服务接收到“增加积分”消息，开始增加积分，积分增加成功后向消息中间件回应Ack，否则消息中间件将重复投递此消息；  </p><p>由于消息会重复投递，积分服务的“增加积分”功能需要实现幂等性；  </p><h4 id="RocketMQ事务消息方案"><a href="#RocketMQ事务消息方案" class="headerlink" title="RocketMQ事务消息方案"></a>RocketMQ事务消息方案</h4><p>RocketMQ是一个来自阿里的分布式消息中间件。  </p><p>于2012年开源，并在2017年正式成为Apache顶级项目。  </p><p>据了解，包括阿里云上的消息产品以及收购的子公司在内，阿里集团的消息产品全线都运行在RocketMQ之上，并且最近几年的双十一大促中，RocketMQ都有抢眼表现。<br>Apache RocketMQ4.3之后的版本正式支持事务消息，为分布式事务实现提供了便利性支持。  </p><p>RocketMQ事务消息设计则主要是为了解决Producer端的消息发送与本地事务执行的原子性问题，RocketMQ的设计中broker与producer端的双向通信能力，使得broker天生可以作为一个事务协调者存在；<br>而RocketMQ本身提供的存储机制为事务消息提供了持久化能力；<br>RocketMQ的高可用机制以及可靠消息设计则为事务消息在系统发生异常时依然能够保证达成事务的最终一致性；<br>在RocketMQ4.3后实现了完整的事务消息，实际上其实是对本地消息表的一个封装，将本地消息表移动到MQ内部，解决Producer端的消息发送与本地事务执行的原子性问题。  </p><p>执行流程如下：  </p><p>为方便理解，还是以注册送积分这个例子来描述整个流程。  </p><p>Producer即MQ发送方，本例中是用户服务，负责新增用户；<br>MQ订阅方即消息消费方，本例中是积分服务，负责新增积分。  </p><ol><li>Producer发送事务消息。</li></ol><p>Producer（MQ发送方）发送事务消息至MQ Server，MQ Server将消息标记为Prepared（预备状态），注意此时这条消息消费者（MQ订阅方）是无法消费得到的。  </p><p>本例中，Producer发送“增加积分消息”到MQ Server。  </p><ol start="2"><li>MQ Server回应消息发送成功</li></ol><p>MQ Server接受到Producer发送的消息则回应发送成功表示MQ已经接收到消息。  </p><ol start="3"><li>Producer执行本地事务</li></ol><p>Producer端执行业务代码逻辑，通过本地数据库事务控制。<br>本例中，Producer执行添加用户操作。  </p><ol start="4"><li>消息投递</li></ol><p>若Producer本地事务执行成功，则自动向MQ Server发送commit消息；<br>MQ Server接收到commit消息后将“增加积分消息”状态标记为可消费，此时MQ订阅方（积分服务）即正常消费消息；<br>若Producer本地事务执行失败则自动向MQ Server发送rollback消息，MQ Server接收到rollback消息后将删除“增加积分消息”；  </p><p>MQ订阅方（积分服务）消费消息，消费成功则向MQ回应Ack；否则将重复接收消息，这里ack默认自动回应，即程序执行正常则自动回应ack。  </p><ol start="5"><li>事务回查</li></ol><p>如果执行Producer端本地事务过程中，执行端挂掉，或者超时，MQ Server将会不停的询问同组的其他Producer来获取事务执行状态，这个过程叫做<strong>事务回查</strong>，MQ Server会根据事务回查结果来决定是否投递消息。  </p><p>以上主干流程已经由RocketMQ实现，对于用户来说，用户需要分别实现本地事务执行以及本地事务回查方法，因此只需要关注本地事务的执行状态即可。  </p><p>RocketMQ提供的RocketMQLocalTransactionListener接口：  </p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">RocketMQLocalTransactionListener</span> </span>&#123;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">    发送prepare消息成功则此方法被调用，该方法用于执行本地事务</span></span><br><span class="line"><span class="comment">    <span class="doctag">@param</span> msg 回传的消息，利用transactionId即可获取到该消息的唯一id</span></span><br><span class="line"><span class="comment">    <span class="doctag">@param</span> arg 调用send方法时传递的参数，当send时候，若有额外的参数可以传递到send方法中，这里能获取到</span></span><br><span class="line"><span class="comment">    <span class="doctag">@return</span> 返回事务状态，COMMIT：提交  ROLLBACK：回滚 UNKNOW：回调</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">    RocketMQLocalTransactionState executeLocalTransaction（Message msg，Object arg）;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">    <span class="doctag">@param</span> msg 通过获取transactionId来判断这条消息的本地事务执行状态</span></span><br><span class="line"><span class="comment">    <span class="doctag">@return</span> 返回事务状态  COMMIT：提交  ROLLBACK：回滚 UNKNOW：回调</span></span><br><span class="line"><span class="comment">  */</span></span><br><span class="line">  RocketMQLocalTransactionState checkLocalTransaction（Message msg）;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>发送事务消息</li></ul><p>以下是RocketMQ提供用于发送事务消息的API：  </p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">TransactionMQProducer producer=<span class="keyword">new</span> <span class="constructor">TransactionMQProducer(<span class="string">"ProducerGroup"</span>)</span>;</span><br><span class="line">producer.set<span class="constructor">NamesAddr(<span class="string">"127.0.0.1:9876"</span>)</span>;</span><br><span class="line">producer.start<span class="literal">()</span>;</span><br><span class="line"><span class="comment">//设置TransactionListener实现</span></span><br><span class="line">producer.set<span class="constructor">TransactionListener(<span class="params">transactionListener</span>)</span>;</span><br><span class="line"><span class="comment">//发送事务消息</span></span><br><span class="line">SendResult sendResult=producer.send<span class="constructor">MessageTransaction(<span class="params">msg</span>,<span class="params">null</span>)</span>;</span><br></pre></td></tr></table></figure><h3 id="RocketMQ实现可靠消息最终一致性事务"><a href="#RocketMQ实现可靠消息最终一致性事务" class="headerlink" title="RocketMQ实现可靠消息最终一致性事务"></a>RocketMQ实现可靠消息最终一致性事务</h3><h4 id="业务说明-2"><a href="#业务说明-2" class="headerlink" title="业务说明"></a>业务说明</h4><p>本示例通过RocketMQ中间件实现可靠消息最终一致性分布式事务，模拟两个账户的转账交易过程。  </p><p>两个账户在分别不同的银行（张三在bank1、李四在bank2），bank1、bank2是两个微服务。<br>交易过程是：张三给李四转账指定金额。  </p><p>上述交易步骤，张三扣减金额与给bank2发转账消息，两个操作必须是一个整体性的事务（原子性）；  </p><h4 id="程序组成部分-1"><a href="#程序组成部分-1" class="headerlink" title="程序组成部分"></a>程序组成部分</h4><p>数据库：MySQL-5.7.25（包括bank1和bank2两个数据库）<br>JDK：64位jdk1.8.0_201<br>rocketmq 服务端: RocketMQ-4.5.0<br>rocketmq 客户端：RocketMQ-Spring-Boot-starter.2.0.2-RELEASE<br>微服务框架：spring-boot-2.1.3、spring-cloud-Greenwich.RELEASE<br>微服务以及数据库的关系：<br>  dtx/dtx-seata-demo/seata-demo-bank1 银行1，操作张三账户，连接数据库1<br>  dtx/dtx-seata-demo/seata-demo-bank2 银行2，操作李四账户，连接数据库2  </p><p>本示例程序技术架构如下：  </p><p>交互流程如下：<br>1、Bank1向MQ Server发送转账消息<br>2、Bank1执行本地事务，扣减金额<br>3、Bank2接受消息，执行本地事务，添加金额  </p><h4 id="创建数据库-2"><a href="#创建数据库-2" class="headerlink" title="创建数据库"></a>创建数据库</h4><h4 id="启动RocketMQ"><a href="#启动RocketMQ" class="headerlink" title="启动RocketMQ"></a>启动RocketMQ</h4><h4 id="导入dtx-txmsg-demo"><a href="#导入dtx-txmsg-demo" class="headerlink" title="导入dtx-txmsg-demo"></a>导入dtx-txmsg-demo</h4><h4 id="dtx-txmsg-demo-bank1"><a href="#dtx-txmsg-demo-bank1" class="headerlink" title="dtx-txmsg-demo-bank1"></a>dtx-txmsg-demo-bank1</h4><h4 id="dtx-txmsg-demo-bank2"><a href="#dtx-txmsg-demo-bank2" class="headerlink" title="dtx-txmsg-demo-bank2"></a>dtx-txmsg-demo-bank2</h4><h4 id="测试场景-1"><a href="#测试场景-1" class="headerlink" title="测试场景"></a>测试场景</h4><ul><li>bank1本地事务失败，则bank1不发送转账消息</li><li>bank2接收转账消息失败，会进行重试发送消息</li><li>bank2多次消费同一个消息，实现幂等</li></ul><h3 id="小结-2"><a href="#小结-2" class="headerlink" title="小结"></a>小结</h3><p>可靠消息最终一致性就是保证消息从生产方经过消息中间件传递到消息方的一致性，本案例使用了RocketMQ作为消息中间件，RocketMQ主要解决了两个功能：  </p><p>1、本地事务与消息发送的原子性问题；<br>2、事务参与方接收消息的可靠性。  </p><p>可靠消息最终一致性事务适合执行周期长且实时性要求不高的场景。<br>引入消息机制后，同步的事务操作变为基于消息执行的异步操作，避免了分布式事务中的同步阻塞操作的影响，并实现了两个服务的解耦。  </p><h2 id="分布式解决方案之最大努力通知"><a href="#分布式解决方案之最大努力通知" class="headerlink" title="分布式解决方案之最大努力通知"></a>分布式解决方案之最大努力通知</h2><h3 id="什么是最大努力通知"><a href="#什么是最大努力通知" class="headerlink" title="什么是最大努力通知"></a>什么是最大努力通知</h3><p>最大努力通知也是一种解决分布式事务的方案，下边是一个充值的例子。  </p><p>交互流程：<br>1、账户系统调用充值系统接口；<br>2、充值系统完成支付处理向账户系统发起充值结果通知；若通知失败，则充值系统按照策略进行重复通知；<br>3、账户系统接收到充值结果通知修改充值状态；<br>4、账户系统未接收到通知会主动调用充值系统的接口查询充值结果。  </p><p>通过上边的例子，总结最大努力通知方案的目标：  </p><p>目标：发起通知方通过一定的机制最大努力将业务处理结果通知到接收方；  </p><p>具体包括：<br>1、有一定的消息重复通知机制；<br>  因为接受通知方可能没有接收到通知，此时要有一定的机制对消息重复通知；<br>2、消息校对机制<br>  如果是最大努力也没有通知到接收方，或者接收方消费消息后要再次消费，此时可由接收方主动向通知方查询信息来满足需求。  </p><p>这个跟我们信666当中的交易模块很相似，也是进行查询交易结果的时候，如果在一定的查询次数下没有查找得到结果即一分钟查询多少次等，那么就更改成2分钟查询多少次；两分钟查询后仍然没有结果就再次换成3分钟查询多少次；这个一分钟两分钟三分钟，是间隔，间隔时间；因为交易量大的缘故，所以也是为了减轻下服务器压力；是的有些是异步主动去通知下游系统，就是接入第三方支付的时候，上游渠道可能会需要你提供一个异步回调的一个接口，那么这个接口用于交易结果通知或者其他的绑卡结果通知等这种，你可以提供一个接口，当然了也可以提供一个假的接口，就是系统中不存在此接口也行；当然了如果不存在该接口的话，那么就需要去使用系统当中的查询机制，即主动去查询上游渠道系统当中该笔交易的交易结果。在第三方这种支付方面就大概使用了最大努力通知的方式实现分布式事务方案。很多的第三方支付会去提供这个订单/交易结果查询的这样一个接口；而我们自己对接下游就比较缺德了，就每次我们向上游查询完交易结果之后，在处理完业务逻辑后，我们就通过try catch住，http直接发送一次交易结果给上送了回调地址接口的下游；没有上送回调接口就让他们自己来查询，上送了的话我们就回调一次；就这样。  </p><p>最大努力通知与可靠消息一致性有什么不同？  </p><p>1、解决方案思想不同  </p><p>  可靠消息一致性，发起通知方需要保证将消息发送出去，并且将消息发到接收通知方，消息的可靠性关键由发起通知方来保证。  </p><p>  最大努力通知，发起通知方尽最大的努力将业务处理结果通知给接收通知方，但是可能消息接收不到，此时需要接收通知方主动调用发起通知方的接口查询业务处理结果，通知的可靠性在于接收通知方。  </p><p>2、两者的业务应用场景不同  </p><p>  可靠消息一致性关注的是交易过程的事务一致，以异步的方式完成交易。  </p><p>  最大努力通知关注的是交易后的通知事务，即将交易结果可靠的通知出去。  </p><p>3、技术解决方向不同  </p><p>  可靠消息一致性要解决消息从发出到接收的一致性，即消息发出并且被接收到。  </p><p>  最大努力通知无法保证消息从发出到接收的一致性，只提供消息接收的可靠性机制，可靠机制是，最大努力的将消息通知给接收方，当消息无法被接收方接收时，由接收方主动查询消息（业务处理结果）；  </p><h3 id="解决方案-2"><a href="#解决方案-2" class="headerlink" title="解决方案"></a>解决方案</h3><p>通过对最大努力通知的理解，采用MQ的ack机制就可以实现最大努力通知；  </p><p>方案一：  </p><p>本方案是利用MQ的ack机制由MQ向接收通知方发送通知，流程如下：  </p><ol><li>发起通知方将通知发给MQ；  </li></ol><p>使用普通消息机制将通知发给MQ；  </p><p>注意:如果消息没有发出去可由接收通知方主动请求发起通知方查询业务执行结果。  </p><ol start="2"><li><p>接收通知方监听MQ；</p></li><li><p>接收通知方接收消息，业务处理完成回应Ack；  </p></li><li><p>接收通知方若没有会用ack则MQ会重复通知；  </p></li></ol><p>MQ会<strong>按照间隔1min、5min、10min、30min、1h、2h、5h、10h的方式，逐步拉大通知间隔</strong>（如果MQ采用RocketMQ，在broker中可以进行配置），直到达到通知要求的时间窗口上限。  </p><ol start="5"><li>接收通知方可通过消息校对接口来校对消息的一致性。  </li></ol><p>方案二：  </p><p>本方案也是利用MQ的Ack机制，与方案一不同的是应用程序向接收通知方发送通知，如下图：  </p><p>交互流程如下:  </p><ol><li><p>发起通知方将通知发给MQ；</p><p>使用可靠消息一致方案中的事务消息保证本地事务与消息的原子性，最终将通知先发给MQ。  </p></li><li><p>通知程序监听MQ，接收MQ的消息；  </p><p>方案1中接收通知方直接监听MQ，方案2中由通知程序监听MQ；  </p><p>通知程序若没有回应Ack则MQ会重复通知；  </p></li><li><p>通知程序通过互联网接口协议（如http、webservice）调用接受通知方案接口，完成通知。  </p><p>通知程序调用接受通知方案接口成功就表示通知成功，即MQ消费成功，MQ将不再向通知程序投递通知消息。  </p></li><li><p>接受通知方可通过消息校对接口来校对消息的一致性。  </p></li></ol><p>方案1和方案2的不同点：  </p><p>（1）方案1中接收通知方与MQ接口，即接收通知方监听MQ，次方案主要应用与内部应用之间的通知；<br>（2）方案2中由通知程序与MQ接口，通知程序监听MQ，收到MQ的消息后，由通知程序通过互联网接口协议调用接收通知方。此方案主要应用于外部应用之间的通知，例如支付宝、微信的支付结果通知。  </p><p>方案一针对内部系统；方案二针对外部系统；  </p><h3 id="RocketMQ实现最大努力通知型事务"><a href="#RocketMQ实现最大努力通知型事务" class="headerlink" title="RocketMQ实现最大努力通知型事务"></a>RocketMQ实现最大努力通知型事务</h3><h4 id="业务说明-3"><a href="#业务说明-3" class="headerlink" title="业务说明"></a>业务说明</h4><p>本示例通过RocketMQ中间件实现最大努力通知型分布式事务，模拟充值过程。  </p><p>本案例有账户系统和充值系统两个微服务，其中账户系统的数据库是bank1数据库，其中有张三账户。<br>充值系统的数据库使用bank1_pay数据库，记录了账户的充值记录。  </p><p>业务流程如下图：  </p><p>交互流程如下：  </p><ol><li>用户请求充值系统进行充值；  </li><li>充值系统完成充值将充值结果发送给MQ。</li><li>账户系统监听MQ，接收充值结果通知，如果接收不到消息，MQ会重复发送通知。接收到充值结果通知账户系统增加充值金额。  </li><li>账户系统也可以主动查询充值系统的充值查询接口，增加金额。  </li></ol><h4 id="程序组成部分-2"><a href="#程序组成部分-2" class="headerlink" title="程序组成部分"></a>程序组成部分</h4><p>数据库：MySQL-5.7.25（包括bank1和bank1_pay两个数据库）<br>JDK：64位jdk1.8.0_201<br>rocketmq 服务端: RocketMQ-4.5.0<br>rocketmq 客户端：RocketMQ-Spring-Boot-starter.2.0.2-RELEASE<br>微服务框架：spring-boot-2.1.3、spring-cloud-Greenwich.RELEASE<br>微服务以及数据库的关系：<br>  dtx/dtx-notifymsg-demo/dtx-notifymsg-demo-bank1 银行1，操作张三账户，连接数据库bank1<br>  dtx/dtx-notifymsg-demo/dtx-notifymsg-demo-pay 银行2，操作李四账户，连接数据库bank1_pay  </p><p>交互流程如下：  </p><p>1、用户请求充值系统进行充值；<br>2、充值系统完成充值将充值结果发给MQ；<br>3、账户系统监听MQ，接收充值结果通知，如果接收不到消息，MQ会重复发送通知。接收到充值结果通知账户系统增加充值金额。<br>4、账户系统也可以主动查询传给你藕汁系统的充值结果查询接口，增加金额。  </p><h4 id="创建数据库-3"><a href="#创建数据库-3" class="headerlink" title="创建数据库"></a>创建数据库</h4><h4 id="启动RocketMQ-1"><a href="#启动RocketMQ-1" class="headerlink" title="启动RocketMQ"></a>启动RocketMQ</h4><h4 id="导入dtx-notifymsg-demo"><a href="#导入dtx-notifymsg-demo" class="headerlink" title="导入dtx-notifymsg-demo"></a>导入dtx-notifymsg-demo</h4><h4 id="dtx-notifydemo-pay"><a href="#dtx-notifydemo-pay" class="headerlink" title="dtx-notifydemo-pay"></a>dtx-notifydemo-pay</h4><h4 id="dtx-notifydemo-bank1"><a href="#dtx-notifydemo-bank1" class="headerlink" title="dtx-notifydemo-bank1"></a>dtx-notifydemo-bank1</h4><h4 id="测试场景-2"><a href="#测试场景-2" class="headerlink" title="测试场景"></a>测试场景</h4><ul><li>充值系统充值成功，账户系统主动查询充值结果，修改中户金额</li><li>充值系统充值成功，发送消息，账户系统接收消息，修改账户金额。</li><li>账户系统修改账户金额幂等测试。</li></ul><h3 id="小结-3"><a href="#小结-3" class="headerlink" title="小结"></a>小结</h3><p>最大努力通知方案是分布式中对已执行要求最低的一种，适用于一些最终一致性时间敏感度低的业务；<br>最大努力通知方案需要实现如下功能：  </p><ol><li>消息重复通知机制</li><li>消息校对机制</li></ol><h2 id="分布式事务综合案例"><a href="#分布式事务综合案例" class="headerlink" title="分布式事务综合案例"></a>分布式事务综合案例</h2><p>前边已经学习了四种分布式事务解决方案，2PC，TCC，可靠消息最终一致性，最大努力通知，每种解决方案通过案例开发进行学习，本章节结合互联网金融项目中的业务场景，来进行分布式事务解决方案可行性分析。  </p><h3 id="系统介绍"><a href="#系统介绍" class="headerlink" title="系统介绍"></a>系统介绍</h3><h4 id="P2P介绍"><a href="#P2P介绍" class="headerlink" title="P2P介绍"></a>P2P介绍</h4><p>P2P金融又叫P2P信贷，其中P2P是peer-to-peer或者person-to-person的缩写，意思是：个人对个人。  </p><p>P2P金融指的是个人与个人之间的小额借贷交易，一般需要借助电子商务专业网络平台帮助借贷双方确立借贷关系并完成相关交易手续。  </p><p>借款者可以自行发布借款消息，包括金额、利息、还款方式和时间，实现自助式借款；<br>投资者根据借款人发布的消息，自行决定出借金额，实现自助式借贷。  </p><p>目前，国家对P2P行业的监控与规范性控制越来越严格，出台了很多政策来对其专项整治。<br>并主张采用“银行存管模式”来规避P2P平台挪用借投人资金的风险，通过银行开发的“银行存管系统”管理投资者的资金，<strong>每位P2P平台用户在银行的存管系统内都会有一个独立账号，</strong>平台来管理交易，做到资金和交易分开，让P2P平台不能接触到资金，就可以一定程度上避免资金被挪用的风险。  </p><p>什么是银行存管模式？  </p><p>银行存管模式涉及到2套账户体系，P2P平台和银行各有一套账户体系。<br>投资人在P2P平台注册后，会同时跳转到银行再开一个电子账户，2个账户之间有一一对应的关系。<br>当投资人投资时，资金进入的是平台在银行为投资人开设的二级账户当中，每一笔交易，是银行在投资人与借款人之间的交易划转，P2P平台仅能看到信息的流动。  </p><h4 id="总体业务流程"><a href="#总体业务流程" class="headerlink" title="总体业务流程"></a>总体业务流程</h4><h4 id="业务术语"><a href="#业务术语" class="headerlink" title="业务术语"></a>业务术语</h4><table>  <thead>    <tr>      <th>术语</th>      <th>描述</th>    </tr>  </thead>  <tbody>    <tr>      <td>银行存管模式</td>      <td>此种模式下，涉及到2套账户体系，P2P平台和银行各有一套账户体系。投资人在P2P平台注册后会同时跳转到银行再开一个电子账户，2个账户之间有一个一一对应的关系。当投资人投资时，资金进入的是平台在银行为投资人开设的二进账户中，每一笔交易，是由银行在投资人与借款人之间的交易划转，P2P平台仅能看到信息的流动。</td>    </tr>    <tr>      <td>标的</td>      <td>P2P业内，习惯把借款人的投资项目称之为“标的”</td>    </tr>    <tr>      <td>发标</td>      <td>借款人在P2P平台中创建并发布“标的”过程</td>    </tr>    <tr>      <td>投标</td>      <td>投资人在认可相关借款人之后进行的一种借贷行为，对自己中意的借款标的进行投资操作，一个借款标可由单个投资人或多个投资人承接。</td>    </tr>    <tr>      <td>满标</td>      <td>单笔借款标筹集齐所有借款资金即为满标，计息时间是以标满当日开始计息，投资人较多的平台多数会当天满标。</td>    </tr>  </tbody></table><h4 id="模块说明"><a href="#模块说明" class="headerlink" title="模块说明"></a>模块说明</h4><ul><li><p><strong>统一账号服务</strong>  </p><p>用户的登录账户、密码、角色、权限、资源等系统级信息的管理，不包含用户业务信息。  </p></li><li><p><strong>用户中心</strong>  </p><p>提供用户业务信息的管理，如会员信息、实名认证信息、绑定银行卡信息等，“用户中心”的每个用户与“<strong>统一账号服务</strong>”中的账号关联。  </p></li><li><p><strong>交易中心</strong>  </p><p>提供发标、投标等业务。  </p></li><li><p><strong>还款业务</strong>  </p><p>提供还款计划的生成、执行、记录与归档。  </p></li><li><p><strong>银行存管系统（模拟）</strong>  </p><p>  模拟银行存管系统，进行资金的存管，划转。  </p></li></ul><h3 id="注册账号案例分析"><a href="#注册账号案例分析" class="headerlink" title="注册账号案例分析"></a>注册账号案例分析</h3><h4 id="业务流程"><a href="#业务流程" class="headerlink" title="业务流程"></a>业务流程</h4><p>  采用用户、账号分离设计（这样设计的好处是：当用户的业务信息发生变化时，不会影响的认证、授权等系统机制），因此需要保证用户信息与账号信息的一致性。  </p><p>  用户向用户中心发起注册请求，用户中心保存用户业务信息，然后通知统一账号服务新建该用户所对应登录账号。  </p><h4 id="解决方案分析"><a href="#解决方案分析" class="headerlink" title="解决方案分析"></a>解决方案分析</h4><p>  针对注册业务，如果用户与账户信息不一致，则会导致严重问题，因此该业务对一致性要求较为严格，即当用户服务和账号服务任意一方出现问题都需要回滚事务。  </p><p>  根据上述需求进行解决方案分析：  </p><ol><li><p>采用可靠消息一致性方案  </p><p> 可靠消息一致性要求只要消息发出，事务参与者接到消息就要将事务执行成功，不存在回滚的要求，所以不适用。  </p></li><li><p>最大努力通知方案</p><p> 最大努力通知表示发起通知方执行完本地事务后将结果通知给事务参与者，即使事务参与者执行业务处理失败发起通知方也不会回滚事务，所以不适用。  </p></li><li><p>采用Seata实现2PC  </p><p> 在用户中心发起去全局事务，统一账户服务为事务参与者，用户中心和统一账户服务只要由一方出现问题则全局事务回滚，符合要求。  </p><p> 实现方法如下：  </p><ol><li>用户中心添加用户信息，开启全局事务；  </li><li>统一账号服务添加账号信息，作为事务参与者；  </li><li>其中一方执行失败Seata对SQL进行逆操作删除用户信息和账号信息，实现回滚。  </li></ol><ol start="4"><li><p>采用Hmily实现TCC</p><p>TCC也可以实现用户中心和统一账户服务只要有一方出现问题则全局事务回滚，符合要求。  </p><p>实现方法如下：  </p><ol><li><p>用户中心  </p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>：</span><br><span class="line">    添加用户，状态为不可用</span><br><span class="line"><span class="keyword">confirm</span>：</span><br><span class="line">    更新用户状态为可用</span><br><span class="line">cance<span class="variable">l:</span></span><br><span class="line">    删除用户</span><br></pre></td></tr></table></figure></li><li><p>统一账号服务</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">try:</span></span><br><span class="line">    添加账号，状态为不可用</span><br><span class="line"><span class="symbol">confirm:</span></span><br><span class="line">    更新账号状态为可用</span><br><span class="line"><span class="symbol">cancel:</span></span><br><span class="line">    删除账号</span><br></pre></td></tr></table></figure></li></ol></li></ol></li></ol><h3 id="存管开户"><a href="#存管开户" class="headerlink" title="存管开户"></a>存管开户</h3><h4 id="业务流程-1"><a href="#业务流程-1" class="headerlink" title="业务流程"></a>业务流程</h4><p>根据政策要求，P2P业务必须让银行存管资金，用户的资金在银行存管系统的账户中，而不在P2P平台中，因此用户要在银行存管系统开户。  </p><p>用户向用户中心提交开户资料，用户中心生成开户请求号并重定向至银行存管系统开户页面。<br>用户设置存管密码并确认开户后，银行存管立即返回“请求已受理”。<br>在某一时刻，银行存管系统处理完该开户请求后，将调用毁掉地址通知处理结果，若通知失败，则按照一定策略重试通知。<br>同时，以你航存管系统应提供<strong>开户结果查询的接口</strong>，以供用户中心校对结果。  </p><h4 id="解决方案分析-1"><a href="#解决方案分析-1" class="headerlink" title="解决方案分析"></a>解决方案分析</h4><p>P2P平台的用户中心与银行存管系统之间属于跨系统交互，银行存管系统属于外部系统；用户中心无法干预银行存管系统；<br>所以用户中心只能在收到银行存管系统的业务处理结果通知后积极处理，开户后的使用情况完全由用户中心来控制。<br>根据上述需求来进行解决方案分析：  </p><ol><li><p>采用Seata实现2PC</p><p>需要侵入银行存管系统的数据库，由于它是外部系统，所以不适用。  </p></li><li><p>采用Hmily实现TCC</p><p>TCC侵入性更强，所以不适用；  </p></li><li><p>基于MQ的可靠消息一致性</p><p>如果让银行存管系统监听MQ则不合适，因为它是外部系统。  </p><p>如果银行存管系统将消息发给MQ用户中心监听MQ是可以的；<br>但是由于相对银行存管系统来说用户中心属于外部系统，银行存管系统是不会让外部系统直接监听自己的MQ的，基于MQ的通信协议也不方便外部系统间的交互，所以本方案不合适。  </p></li><li><p>最大努力通知方案</p><p> 银行存管系统内部使用MQ，银行存管系统处理完业务后将处理结果发给MQ。<br> 由银行存管系统的通知程序专门发送通知方</p></li></ol><h3 id="满标审核"><a href="#满标审核" class="headerlink" title="满标审核"></a>满标审核</h3><h4 id="业务流程-2"><a href="#业务流程-2" class="headerlink" title="业务流程"></a>业务流程</h4><p>在借款人标的募集所有的资金后，P2P运营管理员审批该标的，触发放款，并开启还款流程。<br>管理员对某标的满标审批通过，交易中心修改标的状态为“还款中”，同时还要通知还款服务生成还款计划。  </p><h4 id="解决方案分析-2"><a href="#解决方案分析-2" class="headerlink" title="解决方案分析"></a>解决方案分析</h4><p>生成还款计划是一个执行时长较长的业务，不建议阻塞主业务流程，此业务对一致性要求较低。<br>根据上述需求进行解决方案分析：  </p><ol><li><p>采用Seata实现2PC</p><p>Seata在食物执行过程中或进行数据库资源锁定，由于事务执行时长较长会将资源锁定较长时间，所以不适用。  </p></li><li><p>采用Hmily实现TCC</p><p>本需求对业务一致性要求较低，因为生成还款计划的时长较长，所以不要求交易中心修改标的状态为“还款中”就立即生成还款计划，所以本方案不适用；  </p></li><li><p>基于MQ的可靠消息一致性</p><p>满标审批通过后，由交易中心修改标的状态为“还款中”并且向还款服务发送消息，还款服务接收到消息开始生成还款计划，基本与MQ的可靠消息一致性方案适用此场景。  </p></li><li><p>最大努力通知方案</p><p>满标审批通过后，由交易中心向还款服务发送通知要求生成还款计划，还款服务并且对外提供还款计划生成结果校对接口供其他服务查询，最大努力通知方案也适用本场景。  </p></li></ol><h2 id="课程总结"><a href="#课程总结" class="headerlink" title="课程总结"></a>课程总结</h2><ul><li><strong>重点知识回顾：</strong>  </li></ul><p>事务的基本概念以及本地事务特性。  </p><p>CAP、BASE理论的概念。  </p><p>2PC、TCC、可靠消息最终一致性、最大努力通知各个类型原理以及其特性；  </p><p>不同分布式事务类型的应用场景讨论。  </p><p>RocketMQ事务消息机制；  </p><p>Seata与传统XA原理上的差异。  </p><ul><li><strong>分布式事务对比分析：</strong>  </li></ul><p>在学习各种分布式事务的解决方案后，了解到各种方案的优缺点：  </p><p><strong>2PC</strong>最大的诟病就是一个阻塞协议。RM在执行分支事务后需要等待TM的决定，此服务会阻塞并锁定资源。<br>由于其阻塞机制和最差时间复杂高度。<br>因此，这种实际不能适应着事务涉及的服务数量增加而扩展的需要，很难用于并发较高以及子事务生命周期较长（long-running transactions）的分布式服务中。  </p><p>如果拿<strong>TCC</strong>事务的处理流程与2PC两阶段提交作比较，2PC同行都是在跨库的DB层面，而TCC则是在应用层面的处理，需要通过业务逻辑来实现。<br>这种分布式事务的实现方式的又是在于，可以让<strong>应用自己定义数据操作的粒度，使得降低锁冲突、提高吞吐量称为可能</strong>。<br>而不足之处则在于对应用的侵入性非常强，业务逻辑的每个分支都需要实现try、confirm、cancel三个操作。<br>此外，其实现难度也比较大，需要按照网络状态，系统故障等不同的失败原因实现不同的回滚策略。<br>典型的使用场景：满xx/登录送优惠券等。  </p><p><strong>可靠消息最终一致性事务</strong>适合知性周期长且实时性要求不高的场景。<br>引入消息机制后，同步的事务操作变为基于消息执行的异步操作，避免了分布式事务中的同步阻塞操作的影响，并实现了两个服务的解耦。<br>典型的使用场景：注册送积分、登录送优惠券等。  </p><p><strong>最大努力通知</strong> 是分布式事务中要求最低的一种，适用于一些最终一致性敏感度低的业务；<br>允许发起通知方处理业务失败，在接收通知方收到通知后积极进行失败处理，无论发起通知方如何处理结果都会不影响到接收通知方的后续处理；<br>发起通知方需要提供查询执行情况接口，用于接收通知方校对结果。<br>典型的使用场景：银行通知、支付结果通知等；  </p><table>  <thead>    <tr>      <th></th>      <th>2PC</th>      <th>TCC</th>      <th>可靠消息</th>      <th>最大努力通知</th>    </tr>  </thead>  <tbody>    <tr>      <td>一致性</td>      <td>强一致性</td>      <td>最终一致</td>      <td>最终一致</td>      <td>最终一致</td>    </tr>    <tr>      <td>吞吐量</td>      <td>低</td>      <td>中</td>      <td>高</td>      <td>高</td>    </tr>    <tr>      <td>实现复杂度</td>      <td>易</td>      <td>难</td>      <td>中</td>      <td>易</td>    </tr>  </tbody></table><p><strong>总结：</strong>  </p><p>在条件允许的情况下，尽可能选择本地事务单数据源，因为它减少了网络交互带来的性能消耗，且避免了数据弱一致性带来的种种问题。<br>若某系统频繁且不合理的使用分布式事务，应首先从整体设计角度观察服务的拆分是否合理，是否高内聚低耦合？是否粒度太小？分布式事务一直是业界难题，因为网络的不确定性，而且我们习惯拿分布式事务与单机事务ACID作对比；  </p><p>无论是数据库层的XA、还是应用层的TCC、可靠消息、最大努力通知等方案，都没有完美解决分布式事务问题，他们不过是在各自在性能、一致性、可用性等方面作取舍，寻求某些场景偏好下的权衡。  </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;希望这句话不只是送给我，也送给那些跟我当时心境一样的人。  &lt;/p&gt;
&lt;p&gt;就像妈妈每次给我打电话的结尾是：要天天开开心心的。保持好心情。  &lt;/p&gt;
&lt;p&gt;一样。  &lt;/p&gt;
&lt;p&gt;观看笔记： &lt;a href=&quot;https://www.bilibili.com/video
      
    
    </summary>
    
    
      <category term="笔记" scheme="https://fengshana.github.io/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="笔记" scheme="https://fengshana.github.io/tags/%E7%AC%94%E8%AE%B0/"/>
    
      <category term="微服务" scheme="https://fengshana.github.io/tags/%E5%BE%AE%E6%9C%8D%E5%8A%A1/"/>
    
      <category term="分布式" scheme="https://fengshana.github.io/tags/%E5%88%86%E5%B8%83%E5%BC%8F/"/>
    
      <category term="事务" scheme="https://fengshana.github.io/tags/%E4%BA%8B%E5%8A%A1/"/>
    
  </entry>
  
  <entry>
    <title>整数反转</title>
    <link href="https://fengshana.github.io/2020/04/18/LeetCode/%E6%95%B4%E6%95%B0%E5%8F%8D%E8%BD%AC/"/>
    <id>https://fengshana.github.io/2020/04/18/LeetCode/%E6%95%B4%E6%95%B0%E5%8F%8D%E8%BD%AC/</id>
    <published>2020-04-18T03:10:12.003Z</published>
    <updated>2020-04-18T03:19:07.668Z</updated>
    
    <content type="html"><![CDATA[<p>我觉得还是得多看点优秀的代码，我这个太low了；<br>可以看这个的：<a href="https://drawcode.mdnice.com/algorithm/intro/" target="_blank" rel="noopener">https://drawcode.mdnice.com/algorithm/intro/</a><br>体会到差距就是执行用时与内存消耗上面；<br>害；<br>基础不扎实；<br>晚上有时间看下别人优秀的代码解析；<br>害；别说；还是蛮沉浸其中的；  </p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> Solution &#123;</span><br><span class="line">    static Long <span class="keyword">minValue</span>=new Long(<span class="number">-2</span>);</span><br><span class="line">    static Long <span class="keyword">maxValue</span>=new Long(<span class="number">2</span>);</span><br><span class="line">    static&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">30</span>;i++)&#123;</span><br><span class="line">            <span class="keyword">minValue</span>=<span class="keyword">minValue</span>*(<span class="number">2</span>);</span><br><span class="line">            <span class="keyword">maxValue</span>=<span class="keyword">maxValue</span>*<span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">maxValue</span>=<span class="keyword">maxValue</span><span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    给出一个32位的有符号整数，</span></span><br><span class="line"><span class="comment">    你需要将这个整数中每位上的数字进行反转；</span></span><br><span class="line"><span class="comment">    int x  32位的有符号整数</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="built_in">public</span> <span class="type">int</span> reverse(<span class="type">int</span> x) &#123;</span><br><span class="line">        String s=x&lt;<span class="number">0</span>?(x+"").substring(<span class="number">1</span>,(x+"").length()):x+"";</span><br><span class="line">        Long result=<span class="built_in">new</span> Long(<span class="number">0</span>);</span><br><span class="line">        StringBuilder stringBuilder=<span class="built_in">new</span> StringBuilder();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=s.length();i&gt;<span class="number">0</span>;i<span class="comment">--)&#123;</span></span><br><span class="line">            stringBuilder.append(s.substring(i<span class="number">-1</span>,i));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(x&lt;<span class="number">0</span>)&#123;</span><br><span class="line">            Long <span class="keyword">value</span>=Long.parseLong("-"+stringBuilder.toString());</span><br><span class="line">            result=<span class="keyword">value</span>&lt;<span class="keyword">minValue</span>?result:value;</span><br><span class="line">        &#125;else&#123;</span><br><span class="line">            Long value=Long.parseLong(stringBuilder.toString());</span><br><span class="line">            result=value&gt;<span class="keyword">maxValue</span>?result:value;</span><br><span class="line">        &#125;</span><br><span class="line">        return result.intValue();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;我觉得还是得多看点优秀的代码，我这个太low了；&lt;br&gt;可以看这个的：&lt;a href=&quot;https://drawcode.mdnice.com/algorithm/intro/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://drawcode
      
    
    </summary>
    
    
      <category term="LeetCode" scheme="https://fengshana.github.io/categories/LeetCode/"/>
    
    
      <category term="LeetCode" scheme="https://fengshana.github.io/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>两数之和</title>
    <link href="https://fengshana.github.io/2020/04/18/LeetCode/%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C/"/>
    <id>https://fengshana.github.io/2020/04/18/LeetCode/%E4%B8%A4%E6%95%B0%E4%B9%8B%E5%92%8C/</id>
    <published>2020-04-18T00:55:01.818Z</published>
    <updated>2020-04-18T01:09:52.993Z</updated>
    
    <content type="html"><![CDATA[<p>写了两种方法；<br>很奇怪执行用时和内存消耗不知道怎么降下去；<br>我开始就搜了下：java 定义变量会消耗内存是吗？<br>我这个傻逼问题；<br>抱歉抱歉，我刚入门，对不住；  </p><p> <img src="http://r.photo.store.qq.com/psc?/V13IdniL4CDhqM/TCfiP1YaPeRT4Jil9RANXyrH0mn2colZek3cguDxrWyGXx4pLFnHCZcZ9eF4N289iZ2JtlaYYYeWf2LHQ5qRWF8Mf0xWoO6sbLjgob1pXQM!/r" alt="两数之和"></p><p>想一想办法应该还可以优化下；<br>一开始使用Map，觉得内存消耗可能会大；不知道莫名就是给我的感觉就是这种结构给我的感觉要大；后来就换成了用数组；<br>刚开始接触，写的不好，还请见谅；  </p><p>诶诶诶，换成js，内存消耗以及运行时间可能会要短一点吗？有时间再去试试js；<br>不知道为什么我感觉js会要短点？<br>好了今天是LeetCode打卡第一天；<br>最近有一首歌挺好听的：(司南-冬眠)</p><blockquote><p>方法一：  </p></blockquote><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     int[] nums 整数数组</span></span><br><span class="line"><span class="comment">     int target 目标值</span></span><br><span class="line"><span class="comment">     int[] 该数组nums中找出和为目标值的那两个整数，并返回他们的数组下标</span></span><br><span class="line"><span class="comment">     每中输入只会对应一个答案，但是数组中同一个元素不能使用两遍。</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span>[] twoSum(<span class="keyword">int</span>[] nums,<span class="keyword">int</span> target)&#123;</span><br><span class="line">        Map&lt;Integer,Integer&gt; <span class="built_in">map</span>=<span class="keyword">new</span> HashMap&lt;Integer,Integer&gt;();</span><br><span class="line">        <span class="keyword">int</span>[] twoNums=<span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">2</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;nums.length;i++)&#123;</span><br><span class="line">            <span class="keyword">int</span> numA=nums[i];</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">map</span>.<span class="built_in">size</span>()==<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="built_in">map</span>.<span class="built_in">put</span>(i,numA);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">int</span> numB=target-numA;</span><br><span class="line">                Set&lt;Map.Entry&lt;Integer, Integer&gt;&gt; <span class="built_in">set</span>=<span class="built_in">map</span>.entrySet();</span><br><span class="line">                <span class="keyword">for</span>(Map.Entry&lt;Integer,Integer&gt; entry:<span class="built_in">set</span>)&#123;</span><br><span class="line">                    System.out.<span class="built_in">println</span>(<span class="string">"entry.getValue():  "</span>+entry.getValue());</span><br><span class="line">                    <span class="keyword">if</span>(numB==entry.getValue())&#123;</span><br><span class="line">                        twoNums[<span class="number">0</span>]=i&gt;entry.<span class="built_in">getKey</span>()?entry.<span class="built_in">getKey</span>():i;</span><br><span class="line">                        twoNums[<span class="number">1</span>]=i&gt;entry.<span class="built_in">getKey</span>()?i:entry.<span class="built_in">getKey</span>();</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                        <span class="keyword">continue</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="built_in">map</span>.<span class="built_in">put</span>(i,numA);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> twoNums;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><blockquote><p>方法二：  </p></blockquote><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> static <span class="built_in">int</span>[] twoSum2(<span class="built_in">int</span>[] nums,<span class="built_in">int</span> target)&#123;</span><br><span class="line">        <span class="built_in">int</span>[] twoNums=new <span class="built_in">int</span>[<span class="number">2</span>];</span><br><span class="line">        <span class="built_in">bool</span>ean flag=<span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="built_in">int</span> i=<span class="number">0</span>;i&lt;nums.length;i++)&#123;</span><br><span class="line">            <span class="built_in">int</span> numA=nums[i];</span><br><span class="line">            <span class="built_in">int</span> numB=target-numA;</span><br><span class="line">           <span class="keyword">for</span>(<span class="built_in">int</span> n=i+<span class="number">1</span>;n&lt;nums.length;n++)&#123;</span><br><span class="line">               <span class="built_in">int</span> numV=nums[n];</span><br><span class="line">               <span class="keyword">if</span>(numB==numV)&#123;</span><br><span class="line">                   twoNums[<span class="number">0</span>]=i;</span><br><span class="line">                   twoNums[<span class="number">1</span>]=n;</span><br><span class="line">                   flag=<span class="literal">true</span>;</span><br><span class="line">                   <span class="keyword">break</span>;</span><br><span class="line">               &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                   <span class="keyword">continue</span>;</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">if</span>(flag)&#123;</span><br><span class="line">               <span class="keyword">break</span>;</span><br><span class="line">           &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> twoNums;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;写了两种方法；&lt;br&gt;很奇怪执行用时和内存消耗不知道怎么降下去；&lt;br&gt;我开始就搜了下：java 定义变量会消耗内存是吗？&lt;br&gt;我这个傻逼问题；&lt;br&gt;抱歉抱歉，我刚入门，对不住；  &lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;http://r.photo.store.qq.c
      
    
    </summary>
    
    
      <category term="LeetCode" scheme="https://fengshana.github.io/categories/LeetCode/"/>
    
    
      <category term="LeetCode" scheme="https://fengshana.github.io/tags/LeetCode/"/>
    
  </entry>
  
  <entry>
    <title>PC端直播屏幕变红</title>
    <link href="https://fengshana.github.io/2020/04/17/%E7%9B%B4%E6%92%AD/pc%E7%9B%B4%E6%92%AD%E5%B1%8F%E5%B9%95%E5%8F%98%E7%BA%A2/"/>
    <id>https://fengshana.github.io/2020/04/17/%E7%9B%B4%E6%92%AD/pc%E7%9B%B4%E6%92%AD%E5%B1%8F%E5%B9%95%E5%8F%98%E7%BA%A2/</id>
    <published>2020-04-16T20:01:20.706Z</published>
    <updated>2020-04-16T20:21:11.024Z</updated>
    
    <content type="html"><![CDATA[<p>在这当中协助我完成直播功能的博客：<a href="https://me.csdn.net/eguid_1" target="_blank" rel="noopener">https://me.csdn.net/eguid_1</a>  </p><p>前期使用了有Red5、VLC、OBS；后来就直接使用的就是OBS进行拉流获取直播视频；  </p><p>OBS：<a href="https://obsproject.com/" target="_blank" rel="noopener">https://obsproject.com/</a>  </p><p>由于转化器converter会转化的是IplImage从而获取得到Frame；<br>而robot机器从屏幕读取得到的像素图像只能是BufferedImage；所以这两者需要做一个转化；</p><p>参考一些Blog，发现说是BufferedImage与IplImage之间的转化问题；  </p><p>参考了博客：<a href="https://blog.csdn.net/zwl18210851801/article/details/81279725" target="_blank" rel="noopener">https://blog.csdn.net/zwl18210851801/article/details/81279725</a><br>这篇博客是记录Mat与BufferedImage与我要的不一致；</p><p>因为参考的博客比如：<a href="https://blog.csdn.net/qiao_198911/article/details/52135013" target="_blank" rel="noopener">https://blog.csdn.net/qiao_198911/article/details/52135013</a><br>这篇博客是转化IplImage转化为BufferedImage；而我要的是BufferedImage转化为IplImage；</p><p>后来又找到博客发现：<a href="https://stackoverflow.com/questions/8368078/java-bufferedimage-to-iplimage" target="_blank" rel="noopener">https://stackoverflow.com/questions/8368078/java-bufferedimage-to-iplimage</a><br>这篇博客就记录了BufferedImage转化成IplImage；</p><p>PC端视频直播屏幕变红解决：  </p><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**bufferedImage to IplImage 的转化*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> IplImage toIplImage(BufferedImage bufImage) &#123;</span><br><span class="line">    ToIplImage iplConverter = <span class="keyword">new</span> <span class="type">OpenCVFrameConverter</span>.ToIplImage();</span><br><span class="line">    Java2DFrameConverter java2dConverter = <span class="keyword">new</span> <span class="type">Java2DFrameConverter</span>();</span><br><span class="line">    IplImage iplImage = iplConverter.convert(java2dConverter.convert(bufImage));</span><br><span class="line">    <span class="keyword">return</span> iplImage;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>由于不是很明白；所以之前的代码都会做一个注释；贴一下之前的代码：</p><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br></pre></td><td class="code"><pre><span class="line">package com.live;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.nio.ByteBuffer;</span><br><span class="line"><span class="keyword">import</span> java.nio.ByteOrder;</span><br><span class="line"><span class="keyword">import</span> java.nio.ShortBuffer;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.ScheduledThreadPoolExecutor;</span><br><span class="line"><span class="keyword">import</span> java.util.concurrent.TimeUnit;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.sound.sampled.AudioFormat;</span><br><span class="line"><span class="keyword">import</span> javax.sound.sampled.AudioSystem;</span><br><span class="line"><span class="keyword">import</span> javax.sound.sampled.DataLine;</span><br><span class="line"><span class="keyword">import</span> javax.sound.sampled.Line;</span><br><span class="line"><span class="keyword">import</span> javax.sound.sampled.LineUnavailableException;</span><br><span class="line"><span class="keyword">import</span> javax.sound.sampled.Mixer;</span><br><span class="line"><span class="keyword">import</span> javax.sound.sampled.TargetDataLine;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JFrame;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.bytedeco.javacpp.Loader;</span><br><span class="line"><span class="keyword">import</span> org.bytedeco.javacpp.avcodec;</span><br><span class="line"><span class="keyword">import</span> org.bytedeco.javacpp.opencv_core.IplImage;</span><br><span class="line"><span class="keyword">import</span> org.bytedeco.javacpp.helper.opencv_objdetect;</span><br><span class="line"><span class="keyword">import</span> org.bytedeco.javacv.CanvasFrame;</span><br><span class="line"><span class="keyword">import</span> org.bytedeco.javacv.FFmpegFrameRecorder;</span><br><span class="line"><span class="keyword">import</span> org.bytedeco.javacv.Frame;</span><br><span class="line"><span class="keyword">import</span> org.bytedeco.javacv.FrameGrabber;</span><br><span class="line"><span class="keyword">import</span> org.bytedeco.javacv.FrameGrabber.Exception;</span><br><span class="line"><span class="keyword">import</span> org.bytedeco.javacv.FrameRecorder;</span><br><span class="line"><span class="keyword">import</span> org.bytedeco.javacv.OpenCVFrameConverter;</span><br><span class="line"><span class="keyword">import</span> org.bytedeco.javacv.OpenCVFrameGrabber;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.awt.AWTException;</span><br><span class="line"><span class="keyword">import</span> java.awt.Dimension;</span><br><span class="line"><span class="keyword">import</span> java.awt.GraphicsDevice;</span><br><span class="line"><span class="keyword">import</span> java.awt.GraphicsEnvironment;</span><br><span class="line"><span class="keyword">import</span> java.awt.Rectangle;</span><br><span class="line"><span class="keyword">import</span> java.awt.Robot;</span><br><span class="line"><span class="keyword">import</span> java.awt.Toolkit;</span><br><span class="line"><span class="keyword">import</span> java.awt.image.BufferedImage;</span><br><span class="line"><span class="keyword">import</span> java.awt.image.DataBufferByte;</span><br><span class="line"><span class="keyword">import</span> java.awt.image.WritableRaster;</span><br><span class="line"><span class="keyword">import</span> java.io.ByteArrayOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.text.ParseException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.imageio.ImageIO;</span><br><span class="line"><span class="keyword">import</span> javax.swing.JFrame;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.bytedeco.javacpp.BytePointer;</span><br><span class="line"><span class="keyword">import</span> org.bytedeco.javacpp.Loader;</span><br><span class="line"><span class="keyword">import</span> org.bytedeco.javacpp.avcodec;</span><br><span class="line"><span class="keyword">import</span> org.bytedeco.javacpp.opencv_highgui;</span><br><span class="line"><span class="keyword">import</span> org.bytedeco.javacpp.opencv_core.IplImage;</span><br><span class="line"><span class="keyword">import</span> org.bytedeco.javacv.CanvasFrame;</span><br><span class="line"><span class="keyword">import</span> org.bytedeco.javacv.Frame;</span><br><span class="line"><span class="keyword">import</span> org.bytedeco.javacv.FrameGrabber;</span><br><span class="line"><span class="keyword">import</span> org.bytedeco.javacv.FrameGrabber.Exception;</span><br><span class="line"><span class="keyword">import</span> org.bytedeco.javacv.FrameRecorder;</span><br><span class="line"><span class="keyword">import</span> org.bytedeco.javacv.Java2DFrameConverter;</span><br><span class="line"><span class="keyword">import</span> org.bytedeco.javacv.OpenCVFrameConverter;</span><br><span class="line"><span class="keyword">import</span> org.bytedeco.javacv.OpenCVFrameConverter.ToIplImage;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSONObject;</span><br><span class="line"><span class="keyword">import</span> com.service.VideoService;</span><br><span class="line"></span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">JavacvAudioTest</span> &#123;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**bufferedImage to IplImage 的转化*/</span></span><br><span class="line">public static IplImage toIplImage(BufferedImage bufImage) &#123;</span><br><span class="line">    ToIplImage iplConverter = <span class="keyword">new</span> OpenCVFrameConverter.ToIplImage();</span><br><span class="line">    Java2DFrameConverter java2dConverter = <span class="keyword">new</span> Java2DFrameConverter();</span><br><span class="line">    IplImage iplImage = iplConverter.convert(java2dConverter.convert(bufImage));</span><br><span class="line">    <span class="keyword">return</span> iplImage;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 推送/录制本机的音/视频(Webcam/Microphone)到流媒体服务器(Stream media server)</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * @param WEBCAM_DEVICE_INDEX</span></span><br><span class="line"><span class="comment"> *            - 视频设备，本机默认是0</span></span><br><span class="line"><span class="comment"> * @param AUDIO_DEVICE_INDEX</span></span><br><span class="line"><span class="comment"> *            - 音频设备，本机默认是4</span></span><br><span class="line"><span class="comment"> * @param outputFile</span></span><br><span class="line"><span class="comment"> *            - 输出文件/地址(可以是本地文件，也可以是流媒体服务器地址)</span></span><br><span class="line"><span class="comment"> * @param captureWidth</span></span><br><span class="line"><span class="comment"> *            - 摄像头宽</span></span><br><span class="line"><span class="comment"> * @param captureHeight</span></span><br><span class="line"><span class="comment"> *            - 摄像头高</span></span><br><span class="line"><span class="comment"> * @param FRAME_RATE</span></span><br><span class="line"><span class="comment"> *            - 视频帧率:最低 25(即每秒25张图片,低于25就会出现闪屏)</span></span><br><span class="line"><span class="comment"> * @throws org.bytedeco.javacv.FrameGrabber.Exception</span></span><br><span class="line"><span class="comment"> * @throws org.bytedeco.javacv.FrameRecorder.Exception </span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">public static CanvasFrame recordWebcamAndMicrophone(int WEBCAM_DEVICE_INDEX, final int AUDIO_DEVICE_INDEX, String outputFile,</span><br><span class="line">int captureWidth, int captureHeight, final int FRAME_RATE) throws org.bytedeco.javacv.FrameGrabber.Exception, org.bytedeco.javacv.FrameRecorder.Exception &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1.录制自己的小窗口进行隐藏，不能有声音</span></span><br><span class="line"><span class="comment"> * 2.将录制屏的不显示出来</span></span><br><span class="line"><span class="comment"> * 4.即通过录制屏将小窗口一起进行录制</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="regexp">//JavacAudioTest.recordWebcamAndMicrophone2(0, 4,"output.mp4", 100, 100,25);</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">//</span> 获取显示器</span><br><span class="line">long startTime = <span class="number">0</span>;</span><br><span class="line">long videoTS = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="regexp">// 获取当前屏幕大小</span></span><br><span class="line"><span class="regexp">Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();</span></span><br><span class="line"><span class="regexp">captureWidth=(int)screenSize.getWidth();</span></span><br><span class="line"><span class="regexp">captureHeight=(int)screenSize.getHeight();</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">//</span> 指定捕获屏幕区域大小，这里使用全屏捕获</span><br><span class="line">Rectangle rectangle = <span class="keyword">new</span> Rectangle(screenSize);</span><br><span class="line"></span><br><span class="line"><span class="regexp">// 本地环境</span></span><br><span class="line"><span class="regexp">GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">//</span> 获取本地屏幕设备列表</span><br><span class="line">GraphicsDevice[] gs = ge.getScreenDevices();</span><br><span class="line">System.err.println(<span class="string">"eguid温馨提示，找到"</span> + gs.length + <span class="string">"个屏幕设备"</span>);</span><br><span class="line"><span class="regexp">// 目的：取到本地屏幕设备当中可以进行获取本地屏幕的设备下标</span></span><br><span class="line"><span class="regexp">//</span> 通过robot可以实例化该获取本地屏幕的设备，大概就是这意思，</span><br><span class="line"><span class="regexp">// 先令该robot机器设置为null,也就是类似于foreach当中的一个变量，所以是不能够放在循环里面的</span></span><br><span class="line"><span class="regexp">//</span> 去循环遍历该本地屏幕设备列表当中的所有设备，即数组gs，通过下标取出数组当中的该元素来进行实例化robot对象</span><br><span class="line"><span class="regexp">// 如果存在数组当中有一个下标所对应的元素实例化了robot对象后，</span></span><br><span class="line"><span class="regexp">//</span> 可以让robot对象切实的获取得到本地屏幕的缓冲图片，且该缓冲图片不为空，并且宽大于<span class="number">0</span></span><br><span class="line"><span class="regexp">// 即说明该下标所对应在数组当中的该元素即，就是我们所需要寻找的设备</span></span><br><span class="line"><span class="regexp">Robot robot = null;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">//</span> -<span class="number">1</span> 猜测：极有可能说的是没有这种可以获取本地屏幕的设备</span><br><span class="line">int ret = -<span class="number">1</span>;</span><br><span class="line">BufferedImage img=<span class="literal">null</span>;</span><br><span class="line"><span class="regexp">// 进行本地屏幕设备数组列表的循环</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">for (int index = 0; index &lt; 10; index++) &#123;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">//</span> 从本地屏幕设备列表当中进行一一取出屏幕设备</span><br><span class="line">GraphicsDevice g = gs[index];</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="regexp">// 通过robot来进行生成该种获取本地屏幕的机器设备</span></span><br><span class="line"><span class="regexp">robot = new Robot(g);</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">//</span> 通过该可以获取本地屏幕的机器设备来进行生成本地屏幕，也就是显示器图片</span><br><span class="line"> img = robot.createScreenCapture(rectangle);</span><br><span class="line"></span><br><span class="line"> <span class="regexp">// 判断如果该图片如果不为空的话，并且该图片大于1，也就说明该图片是存在的，有一定宽度，而并不是宽为0，宽为0，即说明该并不是图片了</span></span><br><span class="line"><span class="regexp">if (img != null &amp;&amp; img.getWidth() &gt; 1) &#123;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">//</span> 获取得到该机器设备的下标，并赋值给ret</span><br><span class="line">ret = index;</span><br><span class="line"></span><br><span class="line"><span class="regexp">// 当下打断循环，跳出，找到该种设备之后立即打断循环，提高效率</span></span><br><span class="line"><span class="regexp">break;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp">&#125; catch (AWTException e) &#123;</span></span><br><span class="line"><span class="regexp">System.err.println("打开第" + index + "个屏幕设备失败，尝试打开第" + (index + 1) + "个屏幕设备");</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp">//</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span>/</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * FrameGrabber 类包含：OpenCVFrameGrabber</span></span><br><span class="line"><span class="comment"> * (opencv_videoio),C1394FrameGrabber, FlyCaptureFrameGrabber,</span></span><br><span class="line"><span class="comment"> * OpenKinectFrameGrabber,PS3EyeFrameGrabber,VideoInputFrameGrabber, 和</span></span><br><span class="line"><span class="comment"> * FFmpegFrameGrabber.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="comment">/*OpenCVFrameGrabber grabber = new OpenCVFrameGrabber(WEBCAM_DEVICE_INDEX);</span></span><br><span class="line"><span class="comment">grabber.setImageWidth(captureWidth);</span></span><br><span class="line"><span class="comment">grabber.setImageHeight(captureHeight);</span></span><br><span class="line"><span class="comment">System.out.println("开始抓取摄像头...");</span></span><br><span class="line"><span class="comment">int isTrue = 0;// 摄像头开启状态</span></span><br><span class="line"><span class="comment">try &#123;</span></span><br><span class="line"><span class="comment">grabber.start();</span></span><br><span class="line"><span class="comment">isTrue += 1;</span></span><br><span class="line"><span class="comment">&#125; catch (org.bytedeco.javacv.FrameGrabber.Exception e2) &#123;</span></span><br><span class="line"><span class="comment">if (grabber != null) &#123;</span></span><br><span class="line"><span class="comment">try &#123;</span></span><br><span class="line"><span class="comment">grabber.restart();</span></span><br><span class="line"><span class="comment">isTrue += 1;</span></span><br><span class="line"><span class="comment">&#125; catch (org.bytedeco.javacv.FrameGrabber.Exception e) &#123;</span></span><br><span class="line"><span class="comment">isTrue -= 1;</span></span><br><span class="line"><span class="comment">try &#123;</span></span><br><span class="line"><span class="comment">grabber.stop();</span></span><br><span class="line"><span class="comment">&#125; catch (org.bytedeco.javacv.FrameGrabber.Exception e1) &#123;</span></span><br><span class="line"><span class="comment">isTrue -= 1;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">if (isTrue &lt; 0) &#123;</span></span><br><span class="line"><span class="comment">System.err.println("摄像头首次开启失败，尝试重启也失败！");</span></span><br><span class="line"><span class="comment">return;</span></span><br><span class="line"><span class="comment">&#125; else if (isTrue &lt; 1) &#123;</span></span><br><span class="line"><span class="comment">System.err.println("摄像头开启失败！");</span></span><br><span class="line"><span class="comment">return;</span></span><br><span class="line"><span class="comment">&#125; else if (isTrue == 1) &#123;</span></span><br><span class="line"><span class="comment">System.err.println("摄像头开启成功！");</span></span><br><span class="line"><span class="comment">&#125; else if (isTrue == 1) &#123;</span></span><br><span class="line"><span class="comment">System.err.println("摄像头首次开启失败，重新启动成功！");</span></span><br><span class="line"><span class="comment">&#125;*/</span></span><br><span class="line"><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">//</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">//</span> 本机摄像头默认<span class="number">0</span>，这里使用javacv的帧抓取器，至于使用的是ffmpeg还是opencv，请自行查看源码</span><br><span class="line">FrameGrabber grabber = FrameGrabber.createDefault(ret);</span><br><span class="line"></span><br><span class="line"><span class="regexp">// 开启抓取器</span></span><br><span class="line"><span class="regexp">grabber.start();</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">//</span> 播放窗口的设置</span><br><span class="line">System.err.println(<span class="string">"打开的屏幕序号："</span> + ret);</span><br><span class="line"></span><br><span class="line"><span class="regexp">// javacv提供的图像展现窗口</span></span><br><span class="line"><span class="regexp">//</span> title 颜色的校正值</span><br><span class="line">CanvasFrame frame = <span class="keyword">new</span> CanvasFrame(<span class="string">"camera"</span>, CanvasFrame.getDefaultGamma() / grabber.getGamma());</span><br><span class="line"></span><br><span class="line">int width = <span class="number">800</span>;</span><br><span class="line">int height = <span class="number">600</span>;</span><br><span class="line"></span><br><span class="line"><span class="regexp">// 窗口居中</span></span><br><span class="line"><span class="regexp">frame.setBounds((int) (screenSize.getWidth() - width) / 2, (int) (screenSize.getHeight() - height) / 2, width, height);</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">//</span> 设置CanvasFrame窗口大小</span><br><span class="line">frame.setCanvasSize(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="regexp">//frame.setVisible(false);</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">//</span> 转换器的获取以及配置</span><br><span class="line">OpenCVFrameConverter.ToIplImage converter = <span class="keyword">new</span> OpenCVFrameConverter.ToIplImage();</span><br><span class="line"></span><br><span class="line"><span class="regexp">// 转换器通过抓取器grabber获取当前Frame进行来获取得到IplImage</span></span><br><span class="line"><span class="regexp">//</span> 抓取一帧视频并将其转换为图像，至于用这个图像用来做什么？加水印，人脸识别等等自行添加</span><br><span class="line">IplImage grabbedImage = converter.convert(grabber.grab());</span><br><span class="line"></span><br><span class="line"><span class="regexp">// 通过当前视频直播放映内容的存储地址以及当前视频直播放映界面的大小来进行创建视频记录器，也就是界面的记录</span></span><br><span class="line"><span class="regexp">final FrameRecorder recorder = FrameRecorder.createDefault(outputFile, width, height);</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">//</span> 设置该视频记录器的编码，即将视频直播的流进行编码，也就是直播流/推流进行编码</span><br><span class="line"><span class="regexp">// avcodec.AV_CODEC_ID_H264，编码</span></span><br><span class="line"><span class="regexp">recorder.setVideoCodec(avcodec.AV_CODEC_ID_H264);</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">//</span> 设置记录器的记录视频的格式</span><br><span class="line"><span class="regexp">// 封装格式，如果是推送到rtmp就必须是flv封装格式</span></span><br><span class="line"><span class="regexp">recorder.setFormat("flv");</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">//</span> 设置记录器的记录视频的速率</span><br><span class="line">recorder.setFrameRate(FRAME_RATE);</span><br><span class="line"><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span>/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * FFmpegFrameRecorder(String filename, int imageWidth, int imageHeight, int audioChannels) </span></span><br><span class="line"><span class="comment"> * fileName可以是本地文件（会自动创建），也可以是RTMP路径（发布到流媒体服务器）</span></span><br><span class="line"><span class="comment"> * imageWidth = width （为捕获器设置宽） </span></span><br><span class="line"><span class="comment"> * imageHeight = height （为捕获器设置高）</span></span><br><span class="line"><span class="comment"> * audioChannels = 2（立体声）；1（单声道）；0（无音频）</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="regexp">//final FFmpegFrameRecorder recorder = new FFmpegFrameRecorder(outputFile, captureWidth, captureHeight, 2);</span></span><br><span class="line"><span class="regexp">recorder.setInterleaved(true);</span></span><br><span class="line"><span class="regexp">recorder.setAudioChannels(2);</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">/**</span></span><br><span class="line"><span class="regexp"> * 该参数用于降低延迟 参考FFMPEG官方文档：https://</span>trac.ffmpeg.org/wiki/StreamingGuide</span><br><span class="line"> * 官方原文参考：ffmpeg -f dshow -i video=<span class="string">"Virtual-Camera"</span> -vcodec libx264</span><br><span class="line"> * -tune zerolatency -b <span class="number">900k</span> -f mpegts udp:<span class="regexp">//10.1.0.102:1234</span></span><br><span class="line"><span class="regexp"> */</span></span><br><span class="line"><span class="regexp">recorder.setVideoOption("tune", "zerolatency");</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">/**</span></span><br><span class="line"><span class="regexp"> * 权衡quality(视频质量)和encode speed(编码速度) values(值)：</span></span><br><span class="line"><span class="regexp"> * ultrafast(终极快),</span></span><br><span class="line"><span class="regexp"> * superfast(超级快),</span></span><br><span class="line"><span class="regexp"> * veryfast(非常快), </span></span><br><span class="line"><span class="regexp"> * faster(很快), </span></span><br><span class="line"><span class="regexp"> * fast(快),</span></span><br><span class="line"><span class="regexp"> * medium(中等), </span></span><br><span class="line"><span class="regexp"> * slow(慢), </span></span><br><span class="line"><span class="regexp"> * slower(很慢), </span></span><br><span class="line"><span class="regexp"> * veryslow(非常慢)</span></span><br><span class="line"><span class="regexp"> * ultrafast(终极快)提供最少的压缩（低编码器CPU）和最大的视频流大小；</span></span><br><span class="line"><span class="regexp"> * 而veryslow(非常慢)提供最佳的压缩（高编码器CPU）的同时降低视频流的大小</span></span><br><span class="line"><span class="regexp"> * 参考：https://</span>trac.ffmpeg.org/wiki/Encode/H.<span class="number">264</span> 官方原文参考：-preset ultrafast</span><br><span class="line"> * as the name implies provides <span class="keyword">for</span> the fastest possible encoding. If</span><br><span class="line"> * some tradeoff between quality <span class="keyword">and</span> encode speed, go <span class="keyword">for</span> the speed.</span><br><span class="line"> * This might be needed <span class="keyword">if</span> you are going <span class="keyword">to</span> be transcoding multiple</span><br><span class="line"> * streams <span class="literal">on</span> one machine.</span><br><span class="line"> */</span><br><span class="line">recorder.setVideoOption(<span class="string">"preset"</span>, <span class="string">"ultrafast"</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 参考转流命令: ffmpeg</span></span><br><span class="line"><span class="comment"> * -i'udp://localhost:5000?fifo_size=1000000&amp;overrun_nonfatal=1' -crf 30</span></span><br><span class="line"><span class="comment"> * -preset ultrafast -acodec aac -strict experimental -ar 44100 -ac</span></span><br><span class="line"><span class="comment"> * 2-b:a 96k -vcodec libx264 -r 25 -b:v 500k -f flv 'rtmp://&lt;wowza</span></span><br><span class="line"><span class="comment"> * serverIP&gt;/live/cam0' -crf 30</span></span><br><span class="line"><span class="comment"> * -设置内容速率因子,这是一个x264的动态比特率参数，它能够在复杂场景下(使用不同比特率，即可变比特率)保持视频质量；</span></span><br><span class="line"><span class="comment"> * 可以设置更低的质量(quality)和比特率(bit rate),参考Encode/H.264 -preset ultrafast</span></span><br><span class="line"><span class="comment"> * -参考上面preset参数，与视频压缩率(视频大小)和速度有关,需要根据情况平衡两大点：压缩率(视频大小)，编/解码速度 -acodec</span></span><br><span class="line"><span class="comment"> * aac -设置音频编/解码器 (内部AAC编码) -strict experimental</span></span><br><span class="line"><span class="comment"> * -允许使用一些实验的编解码器(比如上面的内部AAC属于实验编解码器) -ar 44100 设置音频采样率(audio sample</span></span><br><span class="line"><span class="comment"> * rate) -ac 2 指定双通道音频(即立体声) -b:a 96k 设置音频比特率(bit rate) -vcodec libx264</span></span><br><span class="line"><span class="comment"> * 设置视频编解码器(codec) -r 25 -设置帧率(frame rate) -b:v 500k -设置视频比特率(bit</span></span><br><span class="line"><span class="comment"> * rate),比特率越高视频越清晰,视频体积也会变大,需要根据实际选择合理范围 -f flv</span></span><br><span class="line"><span class="comment"> * -提供输出流封装格式(rtmp协议只支持flv封装格式) 'rtmp://&lt;FMS server</span></span><br><span class="line"><span class="comment"> * IP&gt;/live/cam0'-流媒体服务器地址</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">recorder.setVideoOption(<span class="string">"crf"</span>, <span class="string">"25"</span>);</span><br><span class="line"></span><br><span class="line"><span class="regexp">// 2000 kb/s, 720P视频的合理比特率范围</span></span><br><span class="line"><span class="regexp">recorder.setVideoBitrate(2000000);</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">//</span> h264编/解码器</span><br><span class="line"><span class="regexp">//recorder.setVideoCodec(avcodec.AV_CODEC_ID_H264);</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">//</span> 封装格式flv</span><br><span class="line"><span class="regexp">//recorder.setFormat("flv");</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">//</span> 视频帧率(保证视频质量的情况下最低<span class="number">25</span>，低于<span class="number">25</span>会出现闪屏)</span><br><span class="line"><span class="regexp">//recorder.setFrameRate(FRAME_RATE);</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">//</span> 关键帧间隔，一般与帧率相同或者是视频帧率的两倍</span><br><span class="line">recorder.setGopSize(FRAME_RATE * <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line"><span class="regexp">// 不可变(固定)音频比特率</span></span><br><span class="line"><span class="regexp">recorder.setAudioOption("crf", "0");</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">//</span> 最高质量</span><br><span class="line">recorder.setAudioQuality(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="regexp">// 音频比特率</span></span><br><span class="line"><span class="regexp">recorder.setAudioBitrate(192000);</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">//</span> 音频采样率</span><br><span class="line">recorder.setSampleRate(<span class="number">44100</span>);</span><br><span class="line"></span><br><span class="line"><span class="regexp">// 双通道(立体声)</span></span><br><span class="line"><span class="regexp">recorder.setAudioChannels(2);</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">//</span> 音频编/解码器</span><br><span class="line">recorder.setAudioCodec(avcodec.AV_CODEC_ID_AAC);</span><br><span class="line"></span><br><span class="line">System.out.println(<span class="string">"开始录制..."</span>);</span><br><span class="line"> </span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">recorder.start();</span><br><span class="line">&#125; <span class="keyword">catch</span> (org.bytedeco.javacv.FrameRecorder.Exception e2) &#123;</span><br><span class="line"><span class="keyword">if</span> (recorder != <span class="literal">null</span>) &#123;</span><br><span class="line">System.out.println(<span class="string">"关闭失败，尝试重启"</span>);</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">recorder.stop();</span><br><span class="line">recorder.start();</span><br><span class="line">&#125; <span class="keyword">catch</span> (org.bytedeco.javacv.FrameRecorder.Exception e) &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">System.out.println(<span class="string">"开启失败，关闭录制"</span>);</span><br><span class="line">recorder.stop();</span><br><span class="line"><span class="keyword">return</span> frame;</span><br><span class="line">&#125; <span class="keyword">catch</span> (org.bytedeco.javacv.FrameRecorder.Exception e1) &#123;</span><br><span class="line"><span class="keyword">return</span> frame;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"><span class="regexp">// 音频捕获</span></span><br><span class="line"><span class="regexp">new Thread(new Runnable() &#123;</span></span><br><span class="line"><span class="regexp">@Override</span></span><br><span class="line"><span class="regexp">public void run() &#123;</span></span><br><span class="line"><span class="regexp">/**</span></span><br><span class="line"><span class="regexp"> * 设置音频编码器 最好是系统支持的格式，否则getLine() 会发生错误</span></span><br><span class="line"><span class="regexp"> * 采样率:44.1k;</span></span><br><span class="line"><span class="regexp"> * 采样率位数:16位;</span></span><br><span class="line"><span class="regexp"> * 立体声(stereo);</span></span><br><span class="line"><span class="regexp"> * 是否签名;true:</span></span><br><span class="line"><span class="regexp"> * big-endian字节顺序,false:little-endian字节顺序(详见:ByteOrder类)</span></span><br><span class="line"><span class="regexp"> */</span></span><br><span class="line"><span class="regexp">AudioFormat audioFormat = new AudioFormat(44100.0F, 16, 2, true, false);</span></span><br><span class="line"><span class="regexp"> </span></span><br><span class="line"><span class="regexp">//</span> 通过AudioSystem获取本地音频混合器信息</span><br><span class="line">Mixer.Info[] minfoSet = AudioSystem.getMixerInfo();</span><br><span class="line"></span><br><span class="line"><span class="regexp">// 通过AudioSystem获取本地音频混合器</span></span><br><span class="line"><span class="regexp">Mixer mixer = AudioSystem.getMixer(minfoSet[AUDIO_DEVICE_INDEX]);</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">//</span> 通过设置好的音频编解码器获取数据线信息</span><br><span class="line">DataLine.Info dataLineInfo = <span class="keyword">new</span> DataLine.Info(TargetDataLine<span class="class">.<span class="keyword">class</span>, <span class="title">audioFormat</span>);</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line"><span class="regexp">// 打开并开始捕获音频</span></span><br><span class="line"><span class="regexp">//</span> 通过line可以获得更多控制权</span><br><span class="line"><span class="regexp">// 获取设备：TargetDataLine line</span></span><br><span class="line"><span class="regexp">//</span> =(TargetDataLine)mixer.getLine(dataLineInfo);</span><br><span class="line">final TargetDataLine line = (TargetDataLine) AudioSystem.getLine(dataLineInfo);</span><br><span class="line"></span><br><span class="line">line.open(audioFormat);</span><br><span class="line"></span><br><span class="line">line.start();</span><br><span class="line"></span><br><span class="line"><span class="regexp">// 获得当前音频采样率</span></span><br><span class="line"><span class="regexp">final int sampleRate = (int) audioFormat.getSampleRate();</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">//</span> 获取当前音频通道数量</span><br><span class="line">final int numChannels = audioFormat.getChannels();</span><br><span class="line"></span><br><span class="line"><span class="regexp">// 初始化音频缓冲区(size是音频采样率*通道数)</span></span><br><span class="line"><span class="regexp">int audioBufferSize = sampleRate * numChannels;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">final byte[] audioBytes = new byte[audioBufferSize];</span></span><br><span class="line"><span class="regexp"> </span></span><br><span class="line"><span class="regexp">ScheduledThreadPoolExecutor exec = new ScheduledThreadPoolExecutor(1);</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">exec.scheduleAtFixedRate(new Runnable() &#123;</span></span><br><span class="line"><span class="regexp">@Override</span></span><br><span class="line"><span class="regexp">public void run() &#123;</span></span><br><span class="line"><span class="regexp">try &#123;</span></span><br><span class="line"><span class="regexp">//</span> 非阻塞方式读取</span><br><span class="line">int nBytesRead = line.read(audioBytes, <span class="number">0</span>, line.available());</span><br><span class="line"></span><br><span class="line"><span class="regexp">// 因为我们设置的是16位音频格式,所以需要将byte[]转成short[]</span></span><br><span class="line"><span class="regexp">int nSamplesRead = nBytesRead / 2;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">short[] samples = new short[nSamplesRead];</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">/**</span></span><br><span class="line"><span class="regexp"> * ByteBuffer.wrap(audioBytes)-将byte[]数组包装到缓冲区</span></span><br><span class="line"><span class="regexp"> * ByteBuffer.order(ByteOrder)-按little-endian修改字节顺序，解码器定义的</span></span><br><span class="line"><span class="regexp"> * ByteBuffer.asShortBuffer()-创建一个新的short[]缓冲区</span></span><br><span class="line"><span class="regexp"> * ShortBuffer.get(samples)-将缓冲区里short数据传输到short[]</span></span><br><span class="line"><span class="regexp"> */</span></span><br><span class="line"><span class="regexp">ByteBuffer.wrap(audioBytes).order(ByteOrder.LITTLE_ENDIAN).asShortBuffer().get(samples);</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">//</span> 将short[]包装到ShortBuffer</span><br><span class="line">ShortBuffer sBuff = ShortBuffer.wrap(samples, <span class="number">0</span>, nSamplesRead);</span><br><span class="line"></span><br><span class="line"><span class="regexp">// 按通道录制shortBuffer</span></span><br><span class="line"><span class="regexp"> ((FFmpegFrameRecorder) recorder).recordSamples(sampleRate, numChannels, sBuff);</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&#125; catch (org.bytedeco.javacv.FrameRecorder.Exception e) &#123;</span></span><br><span class="line"><span class="regexp">e.printStackTrace();</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp">&#125;, 0, (long) 1000 / FRAME_RATE, TimeUnit.MILLISECONDS);</span></span><br><span class="line"><span class="regexp">&#125; catch (LineUnavailableException e1) &#123;</span></span><br><span class="line"><span class="regexp">e1.printStackTrace();</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp">&#125;).start();</span></span><br><span class="line"><span class="regexp"> </span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">//</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">//</span></span><br><span class="line"><span class="regexp">//</span> 设置界面的默认关闭操作的方式，即界面退出的时候</span><br><span class="line">frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);</span><br><span class="line"></span><br><span class="line"><span class="regexp">// 设置会让录制视频的窗体一直处于屏幕的最前端，即这个窗口永远会挡住别的窗口，所以录制到的内容也就是整个显示器的内容</span></span><br><span class="line"><span class="regexp">frame.setAlwaysOnTop(true);</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">//</span> 转换器通过进行转化 IplImage图片得到Frame,轮流[按顺序循环];</span><br><span class="line"><span class="regexp">//Frame rotatedFrame = converter.convert(grabbedImage);//</span> 不知道为什么这里不做转换就不能推到rtmp</span><br><span class="line">Frame rotatedFrame=converter.convert(toIplImage(robot.createScreenCapture(rectangle)));</span><br><span class="line"></span><br><span class="line"><span class="regexp">// //</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">///</span></span><br><span class="line"><span class="regexp">//</span> <span class="keyword">while</span>判断视频是否还在继续直播，如果继续的话，那么就显示图片</span><br><span class="line"><span class="keyword">while</span> (frame.isShowing() &amp;&amp; frame.isVisible() &amp;&amp; (grabbedImage = converter.convert(grabber.grab())) != <span class="literal">null</span>) &#123;</span><br><span class="line"></span><br><span class="line"><span class="regexp">// 从当前屏幕中读取的像素图像，该图像不包括鼠标光标</span></span><br><span class="line"><span class="regexp">BufferedImage image = robot.createScreenCapture(rectangle);</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">//</span> 该界面用以来显示图片</span><br><span class="line"><span class="regexp">//frame.showImage(image);</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">//</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">///</span></span><br><span class="line"><span class="regexp">//</span> 转换器通过进行转化 IplImage图片得到Frame,轮流[按顺序循环];</span><br><span class="line">rotatedFrame = converter.convert(toIplImage(robot.createScreenCapture(rectangle)));</span><br><span class="line"></span><br><span class="line"><span class="regexp">// 设置该Frame界面当中图为动态的图</span></span><br><span class="line"><span class="regexp">//</span> frame.showImage(rotatedFrame);</span><br><span class="line"><span class="regexp">// 如果开始时间为0，即让开始时间变为当前时间，初始化时间戳</span></span><br><span class="line"><span class="regexp">if (startTime == 0) &#123;</span></span><br><span class="line"><span class="regexp">startTime = System.currentTimeMillis();</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">//</span> ((当前时间-视频录制开始的时间)*<span class="number">1000</span>)=从开始到现在的时间差值</span><br><span class="line">videoTS = <span class="number">1000</span> * (System.currentTimeMillis() - startTime);</span><br><span class="line"></span><br><span class="line"><span class="regexp">// 设置视频记录器的时间戳</span></span><br><span class="line"><span class="regexp">//</span>recorder.setTimestamp(videoTS);</span><br><span class="line"></span><br><span class="line"><span class="regexp">//检查偏移量</span></span><br><span class="line"><span class="regexp">if (videoTS &gt; recorder.getTimestamp()) &#123;</span></span><br><span class="line"><span class="regexp">//</span>System.out.println(<span class="string">"Lip-flap correction: "</span> + videoTS + <span class="string">" : "</span> + recorder.getTimestamp() + <span class="string">" -&gt; "</span> + (videoTS - recorder.getTimestamp()));</span><br><span class="line"></span><br><span class="line"><span class="regexp">//告诉录制器写入这个timestamp</span></span><br><span class="line"><span class="regexp">recorder.setTimestamp(videoTS);</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">//</span> 设置视频的记录为 转化器通过进行转化IplImage图片得到的Frame，该Frame为轮流的</span><br><span class="line">recorder.record(rotatedFrame);</span><br><span class="line"></span><br><span class="line"><span class="regexp">// //</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span><span class="regexp">////</span>/</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="regexp">// 线程沉睡时间40</span></span><br><span class="line"><span class="regexp">Thread.sleep(40);</span></span><br><span class="line"><span class="regexp">&#125; catch (InterruptedException e) &#123;</span></span><br><span class="line"><span class="regexp">e.printStackTrace();</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">/*//</span> javaCV提供了优化非常好的硬件加速组件来帮助显示我们抓取的摄像头视频</span><br><span class="line">CanvasFrame cFrame = <span class="keyword">new</span> CanvasFrame(<span class="string">"Capture Preview"</span>, CanvasFrame.getDefaultGamma() / grabber.getGamma());</span><br><span class="line">Frame capturedFrame = <span class="literal">null</span>;</span><br><span class="line"><span class="regexp">// 执行抓取（capture）过程</span></span><br><span class="line"><span class="regexp">while ((capturedFrame = grabber.grab()) != null) &#123;</span></span><br><span class="line"><span class="regexp">if (cFrame.isVisible()) &#123;</span></span><br><span class="line"><span class="regexp">//</span>本机预览要发送的帧</span><br><span class="line">cFrame.showImage(capturedFrame);</span><br><span class="line">&#125;</span><br><span class="line"><span class="regexp">//定义我们的开始时间，当开始时需要先初始化时间戳</span></span><br><span class="line"><span class="regexp">if (startTime == 0)</span></span><br><span class="line"><span class="regexp">startTime = System.currentTimeMillis();</span></span><br><span class="line"><span class="regexp"> </span></span><br><span class="line"><span class="regexp">//</span> 创建一个 timestamp用来写入帧中</span><br><span class="line">videoTS = <span class="number">1000</span> * (System.currentTimeMillis() - startTime);</span><br><span class="line"></span><br><span class="line"><span class="regexp">//检查偏移量</span></span><br><span class="line"><span class="regexp">if (videoTS &gt; recorder.getTimestamp()) &#123;</span></span><br><span class="line"><span class="regexp">System.out.println("Lip-flap correction: " + videoTS + " : " + recorder.getTimestamp() + " -&gt; "</span></span><br><span class="line"><span class="regexp">+ (videoTS - recorder.getTimestamp()));</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">//</span>告诉录制器写入这个timestamp</span><br><span class="line">recorder.setTimestamp(videoTS);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="regexp">// 发送帧</span></span><br><span class="line"><span class="regexp">try &#123;</span></span><br><span class="line"><span class="regexp">recorder.record(capturedFrame);</span></span><br><span class="line"><span class="regexp">&#125; catch (org.bytedeco.javacv.FrameRecorder.Exception e) &#123;</span></span><br><span class="line"><span class="regexp">System.out.println("录制帧发生异常，什么都不做");</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp"> </span></span><br><span class="line"><span class="regexp">cFrame.dispose();*/</span></span><br><span class="line"><span class="regexp">try &#123;</span></span><br><span class="line"><span class="regexp">if (recorder != null) &#123;</span></span><br><span class="line"><span class="regexp">recorder.stop();</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp">&#125; catch (org.bytedeco.javacv.FrameRecorder.Exception e) &#123;</span></span><br><span class="line"><span class="regexp">System.out.println("关闭录制器失败");</span></span><br><span class="line"><span class="regexp">try &#123;</span></span><br><span class="line"><span class="regexp">if (recorder != null) &#123;</span></span><br><span class="line"><span class="regexp">grabber.stop();</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp">&#125; catch (org.bytedeco.javacv.FrameGrabber.Exception e1) &#123;</span></span><br><span class="line"><span class="regexp">System.out.println("关闭摄像头失败");</span></span><br><span class="line"><span class="regexp">return frame;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp">try &#123;</span></span><br><span class="line"><span class="regexp">if (recorder != null) &#123;</span></span><br><span class="line"><span class="regexp">grabber.stop();</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp">&#125; catch (org.bytedeco.javacv.FrameGrabber.Exception e) &#123;</span></span><br><span class="line"><span class="regexp">System.out.println("关闭摄像头失败");</span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">frame.dispose();</span></span><br><span class="line"><span class="regexp">recorder.stop();</span></span><br><span class="line"><span class="regexp">recorder.release();</span></span><br><span class="line"><span class="regexp">grabber.stop();</span></span><br><span class="line"><span class="regexp">return frame;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">public static void main(String[] args) throws Exception, org.bytedeco.javacv.FrameRecorder.Exception, ParseException &#123;</span></span><br><span class="line"><span class="regexp">VideoService videoService = new VideoService();</span></span><br><span class="line"><span class="regexp">String jsonStr = videoService.getPushAddress("Fsn");</span></span><br><span class="line"><span class="regexp">JSONObject json = JSONObject.parseObject(jsonStr);</span></span><br><span class="line"><span class="regexp">recordWebcamAndMicrophone(0, 4, json.getString("PUSH_URL"), 800, 600, 25);</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&#125;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在这当中协助我完成直播功能的博客：&lt;a href=&quot;https://me.csdn.net/eguid_1&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://me.csdn.net/eguid_1&lt;/a&gt;  &lt;/p&gt;
&lt;p&gt;前期使用了有Red5
      
    
    </summary>
    
    
      <category term="直播" scheme="https://fengshana.github.io/categories/%E7%9B%B4%E6%92%AD/"/>
    
    
      <category term="直播" scheme="https://fengshana.github.io/tags/%E7%9B%B4%E6%92%AD/"/>
    
  </entry>
  
  <entry>
    <title>MySql索引底层数据结构</title>
    <link href="https://fengshana.github.io/2020/04/15/%E9%9D%A2%E8%AF%95%E9%A2%98/MySql%E7%B4%A2%E5%BC%95/"/>
    <id>https://fengshana.github.io/2020/04/15/%E9%9D%A2%E8%AF%95%E9%A2%98/MySql%E7%B4%A2%E5%BC%95/</id>
    <published>2020-04-14T19:17:44.486Z</published>
    <updated>2020-04-24T01:36:20.826Z</updated>
    
    <content type="html"><![CDATA[<h2 id="笔记"><a href="#笔记" class="headerlink" title="笔记"></a>笔记</h2><p>观看笔记：<br><a href="https://www.bilibili.com/video/BV13x411Z7AQ?from=search&amp;seid=12763347691863057372" target="_blank" rel="noopener">https://www.bilibili.com/video/BV13x411Z7AQ?from=search&amp;seid=12763347691863057372</a></p><h3 id="索引的本质"><a href="#索引的本质" class="headerlink" title="索引的本质"></a>索引的本质</h3><p>索引的本质</p><p><img src="http://r.photo.store.qq.com/psc?/V13IdniL0W0T32/TCfiP1YaPeRT4Jil9RANXwvSlPCJJI2vYZaT3H0rZCG38flqH5eE7TMAOK*DSM1BhWXXI4cugphYQTkM94HMJ9GHGpkBn3QA6a5u74EOK8M!/r" alt="索引"></p><ul><li>索引是帮助MySQL高效获取数据的排好序的数据结构</li><li>索引存储在文件里</li><li>索引结构<ul><li>二叉树</li><li>红黑树</li><li>HASH</li><li>BTREE</li></ul></li></ul><p>问题：有没有在生产环境SQL查询的非常慢，需要优化的。<br>答：真的有过，就是上一家公司做的那个项目关系到全国，省，市，区，县这种的，每次一统计吧就是全国的那种统计，就是该省下有多少人注册了，该市下有多少人注册了…..这种，每次加载大半天都搞不赢，那个页面都出不来。<br>这个属于慢查询吗？我也不是很清楚诶。反正就是数据量贼大，然后用的Oracle数据库，因为还有就是交易量很大。  </p><p>问题： 遇到这种问题第一时间想到的优化是什么？<br>答：额，我好像也没有做什么优化，通过主键来进行查询，就是交易量特别大的时候，然后去查询的时候，就是使用的交易表TRANS 当中的主键去进行查询大部分是。然后就是因为是二次开发这个系统，所以在Oracle数据库当中是存在之前的开发者所写的索引的。然后就是不去使用外键，就是外键关联的外键这种不去进行使用，而是有些表当中额怎么说呢，就是有些表当中记录的字段存在，而另外一张表当中因为不去进行关联查询trans表这种数据量大的表就自己这张表也会记录一些数据这种。尽量通过主键去查询，因为通过其他的去查询，比如字符串这种的碰到有些时候会很慢。或者是还有就是写那个查询，navicat当中写个查询然后保存。<br>我想不到其他的了，因为没有怎么用过索引。  </p><p>首先检查索引；<br>查看SQL当中的where当中的查询字段是否有加索引；<br>或者说加了索引是否正确索引呢；<br>只要SQL不太烂，正常的走索引，数据量几百万上千万行的数据表，查询的速度依然会很快。  </p><p>思考： 一个几百万上千万数据量的表，只要加上了索引，然后查询的条件又是走的索引，关键的字段，为什么查找的速度就能够提高很多，性能会高？<br>答：因为索引就相当于是书的页码，比如我要查询新华字典当中的某一个字，找到它的索引，也就是它的页码，一下子就能找到了。不过至于它的底层方面的原理我不是很清楚。没有过这方面的研究，我也只是听说过是通过b+ 树实现的？  </p><p>索引的定义：索引是帮助MySQL高效获取数据的排好序的数据结构。<br>索引结构：  </p><ul><li>二叉树</li><li>红黑树</li><li>HASH(哈希表)</li><li>BTREE（B树）</li></ul><p>数据表是存储在磁盘文件当中；所装MySQL当中的data目录，目录下为数据库；<br>表数据实际上就存放在磁盘上了；<br>那从数据表当中去读取数据的时候查询某一行数据的时候，意味着就需要从磁盘上去查询这个数据表当中的数据。<br>如果该数据没有加索引则从第一行开始进行查找；<br>select * from t where t.col2=89;<br>如果该表t没有加任何索引则需要从该表第一行开始遍历。逐行查找逐行比对。直到查找到n次磁盘查找到数据匹配位置。如果要查找的数据在末尾，数据量非常大的情况下，每次从表头进行查找，性能非常差。这也就是全表扫描。  </p><p>问题：有什么办法优化SQL查询？  </p><ul><li>给字段加索引。<br>给col2字段加上索引后，即便是该表当中存在数据量十分大，查询起来的效率也会很高。<br>这个原因是什么？<br>给该字段加上索引之后，该字段作为索引字段之后，它在该表中的存储结构，该字段的存储结构就有一点区别。<br>索引本质上是一种数据结构。<br>所以当给col2字段加上索引之后，那么就会将该col2字段列的数据通过以一种数据结构进行存储起来。  </li></ul><h4 id="二叉树"><a href="#二叉树" class="headerlink" title="二叉树"></a>二叉树</h4><p>二叉树（Binary Search Trees，简写BST）：<a href="https://www.cs.usfca.edu/~galles/visualization/BST.html" target="_blank" rel="noopener">https://www.cs.usfca.edu/~galles/visualization/BST.html</a>  </p><p>比方说，常见的数据结构-二叉树，将col2字段该列的数据放到二叉树当中来，该字段col2的列的数据，每一个数据都放到二叉树当中去；<br>而二叉树的每一个结点是一个key-value的一个取值；也就是说key其实即为索引字段，而value则为箭头的指针；索引字段所对应的这一行的数据，在磁盘上的一个文件指针；<br>如果通过一个合理的方式，或者说是一个好一点的数据结构，来放索引的这个字段，以及每一个索引对应的这一行数据，磁盘文件指针；那么再去看查找这行数据。<br>数据结构-二叉树常识：  </p><ul><li>根节点（父节点）的右孩子取值大于根节点（父节点）取值；</li><li>根节点（父节点）的左孩子取值小于根节点（父节点）取值；</li><li>从左到右依次递增；</li></ul><p>如果要查找 select * from t where t.col2=89这一行数据；<br>用索引字段去查找的话，那么先走索引；<br>而索引是当前被放在二叉树这样一种数据结构当中去了；<br>那么再去进行查找；那么肯定是从根结点开始进行查找；那么第一次查询，从磁盘上进行查询结点后发现34和89对不上，错了；89是大于34的；按照二叉树数据结构的这样一个特点、特性；找到该根结点的右边的子结点，一找即发现当前右边的子结点即为当前查询的结点；然后通过找到的该结点找到该结点所对应的value；该value放的就是这个索引字段所对的那一行的数据磁盘文件指针；那么就可以很快查找得到；<br>通过一种合理的数据结构来放刚加的这个索引字段；那么这个查找的速度就会变得快很多。  </p><p>MySQL的底层原理并不是二叉树。<br>MySQL的底层是B+树；<br>MySQL的最终底层为什么选择B+树而不选择其他的数据结构？  </p><p>通过一种合理的数据结构来放索引的字段，那么查找的效率就将会快很多；就不用一行一行的去遍历表，即不用全表扫描式查询某一行数据；而是可以先快速的从索引的数据结构当中快速的定位到某一个索引，再把这个索引对应的那一行数据的磁盘文件指针给查询出来，就能够快速的从磁盘上找到该行要查询的数据；  </p><p>索引具体是什么样的数据结构？  </p><p>MySQL官方没有选择二叉树，说明二叉树在某些场景下是存在问题的；  </p><p>for example:  </p><p>假设表t，将col1作为索引字段，那么SQL语句就需要变成：<br>select * from t where t.col1=6;来进行查找；<br>现在将col1作为一个二叉树；<br>当t表在插入数据的时候，二叉树插入数据的一个变化过程；<br>二叉树这样一个索引结构的变化；<br>插入第一行数据首先会去维护这个索引，第一列col1的数据呈现的规律为顺序递增，递增；每插入一行数据会先要去维护索引的这个数据结构；<br>索引在二叉树当中存在一个递增的规律，顺序递增；<br>每插入一个数据，首先要维护二叉树（Binary Search Trees）递增顺序的一个字段；<br>二叉树如果是维护这样一个递增顺序的字段作为索引会是一个什么样的一个情况；  </p><ul><li>索引-BinarySearchTrees插入递增数据<br><img src="/2020/04/15/%E9%9D%A2%E8%AF%95%E9%A2%98/MySql%E7%B4%A2%E5%BC%95/%E7%B4%A2%E5%BC%95-BinarySearchTrees%E6%8F%92%E5%85%A5%E9%80%92%E5%A2%9E%E6%95%B0%E6%8D%AE.gif" alt="索引-BinarySearchTrees插入递增数据"></li></ul><blockquote><p>国外二叉树（各种数据结构）的一个教学网站（解析动画演示）：<br><a href="https://www.cs.usfca.edu/~galles/visualization/Algorithms.html" target="_blank" rel="noopener">https://www.cs.usfca.edu/~galles/visualization/Algorithms.html</a></p></blockquote><p>插入第一行数据，再插入第二行数据，先进行维护这个索引；<br>如果二叉树维护的是这种单边增长的这种字段，而二叉树正好作为索引的底层数据结构，此时就会出现问题；<br>二叉树也会变成单边增长；<br>二叉树对于这种col1字段是单边增长的这种情况是不符合的；<br>这种用二叉树存储索引字段，就跟在数据表中去全表扫描没有任何区别，效果一样,没有什么区别；<br>二叉树这种数据结构对于索引的存储，索引字段的存储在某些方面是存在局限的；  </p><ul><li>索引-BinarySearchTrees查询递增数据<br><img src="/2020/04/15/%E9%9D%A2%E8%AF%95%E9%A2%98/MySql%E7%B4%A2%E5%BC%95/%E7%B4%A2%E5%BC%95-BinarySearchTrees%E6%9F%A5%E8%AF%A2%E9%80%92%E5%A2%9E%E6%95%B0%E6%8D%AE.gif" alt="索引-BinarySearchTrees查询递增数据"></li></ul><h4 id="红黑树"><a href="#红黑树" class="headerlink" title="红黑树"></a>红黑树</h4><p>红黑树：<a href="https://www.cs.usfca.edu/~galles/visualization/RedBlack.html" target="_blank" rel="noopener">https://www.cs.usfca.edu/~galles/visualization/RedBlack.html</a>  </p><p>问题：是否听说过红黑树？<br>答：听说过，且jdk1.8当中HashMap当中链表长度达到8之后就会将数据结构链表转化成红黑树这种数据结构；  </p><p>二叉树不行，则看看其他的更好的数据结构是否能够更好的存储索引字段;<br>红黑树也是一种常见的数据结构；<br>jdk在1.8之后，HashMap底层的链表实际上就是用红黑树来做了一个优化；  </p><p>插入递增数据会自动平衡；  </p><ul><li>索引-RedBlack插入递增数据<br><img src="/2020/04/15/%E9%9D%A2%E8%AF%95%E9%A2%98/MySql%E7%B4%A2%E5%BC%95/%E7%B4%A2%E5%BC%95-RedBlack%E6%8F%92%E5%85%A5%E9%80%92%E5%A2%9E%E6%95%B0%E6%8D%AE.gif" alt="索引-RedBlack插入递增数据"></li></ul><p>查询时相对于二叉树来说要少一点；用红黑树来存储索引字段，相对于用普通的二叉树来存储来说，性能稍微高一点；<br>红黑树针对于这种单边增长的这种情况，只要单边出现3个连续递增的结点会做一个自动平衡的处理；那么存储同样的数据的话，整体的高度相对来说红黑树肯定要比二叉树要短；  </p><ul><li>索引-RedBlack查询递增数据<br><img src="/2020/04/15/%E9%9D%A2%E8%AF%95%E9%A2%98/MySql%E7%B4%A2%E5%BC%95/%E7%B4%A2%E5%BC%95-RedBlack%E6%9F%A5%E8%AF%A2%E9%80%92%E5%A2%9E%E6%95%B0%E6%8D%AE.gif" alt="索引-RedBlack查询递增数据"></li></ul><p>问题：二叉树是可以自动平衡的，那么想一想如果用二叉树来做索引字段存储的数据结构有没有什么弊端？在哪些业务场景当中可能又有一些小问题？<br>答：我想不太出来诶。  </p><ul><li>红黑树范围查询</li><li>当数据量小的时候查询起来效率还在线上；如果当数据量大的话，红黑树将不断的往下增长；树的高度有可能变成2的n次方；这个n即为树的高度；每个结点即2，这个树能够存多少索引字段，即2的n次方；</li><li>如果说要查找的n，要查找的那一行的索引字段刚好是在树的叶子结点上面。一般是从根节点上进行遍历，那么查找遍历的次数至少是树的n，高度次这么多；那么从磁盘上要经过几十次，一个结点查找一次，查找一次有一个专业的术语，跟磁盘打一次交道，叫做磁盘IO，这样的话针对磁盘IO来说性能是不高的；效率不是特别高；可以说效率比较低了；如果还经历几十次这样的磁盘IO，性能是肯定没有办法接受的；</li></ul><p>红黑树这种数据结构，一旦表的数据量特别大的时候，查找数据的效率依然会很慢；<br>因为查找数据可能就在叶子结点上；<br>红黑树在数据量大的时候也是存在弊端的；  </p><p>红黑树不行，可以对其做一点点改造；  </p><p>即便是大数量情况下，几百万甚至是上千万的数据量下；通过一种数据结构能够快速的定位到所需要的那个数据的索引的字段；从而根据那个索引的字段能够得到结点当中的那个value值，也就是索引所在那一行数据的磁盘文件指针来定位到磁盘上的某一个位置查找到这一行数据；  </p><p>可以对红黑树进行改造进行优化；  </p><p>红黑树也是二叉树；叫做二叉平衡树；<br>因为红黑树会自动平衡；在红黑树的基础上做一下改造，从而解决在大数据量这种情况下出现的弊端（因为树的高度太高，也就是树存储大数据量的情况下，树的高度太高，磁盘IO就将随着树的高度height增长而增长）；  </p><p>问题： 对红黑树进行改造，让红黑树效率更高一点？  </p><ul><li>n叉树</li><li>原来结点存储到磁盘上面，之前结点就只存储一个索引字段，那么可以将这个结点弄大一点，也就是将它的磁盘存储空间分配大一点（也就是让这个结点上多存储几个索引字段）；且每一个索引之间都可以进行分叉，分叉下的索引结点的磁盘存储空间也分配大一点，也存储多个索引字段，每一个结点都可以有多个结点（多个索引元素）；  </li></ul><p>问题： 这样的存储结构，同样的大数据量的情况下，这样改造红黑树后的结构存储大数据量记录比改造前的红黑树，树的高度要小得多得多；<br>减小了红黑树的纵向，红黑树的高度，而增长了红黑树的横向；<br>横向越长，存储同样大的数据量，树的高度就越矮；树的高度越矮，查找一行数据，也就是某一结点上的数据，那么其效率也就越高；  </p><p>已经慢慢接触到MySQL底层的数据结构：<br>这种改造其实就是B树  </p><ul><li>磁盘存取原理<ul><li>寻道时间（速度慢、费时）</li><li>旋转时间（速度较快）<br><img src="/2020/04/15/%E9%9D%A2%E8%AF%95%E9%A2%98/MySql%E7%B4%A2%E5%BC%95/%E7%A3%81%E7%9B%98%E5%AD%98%E5%8F%96%E5%8E%9F%E7%90%86.png" alt="磁盘存取原理"></li></ul></li></ul><p>横向查找不就慢了吗？</p><h4 id="B-Tree"><a href="#B-Tree" class="headerlink" title="B-Tree"></a>B-Tree</h4><p>B-Tree</p><p><img src="http://r.photo.store.qq.com/psc?/V13IdniL0W0T32/TCfiP1YaPeRT4Jil9RANXx5xRm2O7Hw.CPoJY21PbGHy3.R9D2C3BHGRAwPaR*QEhgcUF1UMc2yymaSzxbgBOKNjFYrOEqnDAvX4*fMGPmY!/r" alt="索引"></p><ul><li>度（Degree）-结点的数据存储个数</li><li>叶子结点具有相同的深度</li><li>叶子结点的指针为空</li><li>结点中的数据key从左到右递增排列</li></ul><p>刚刚说到红黑树不行，可以在红黑树的横向上做文章；<br>存储同样大的数据量，树的高度将会大大的减小；<br>那就变成了引入B树；  </p><ul><li>索引-BTree插入递增数据<br><img src="/2020/04/15/%E9%9D%A2%E8%AF%95%E9%A2%98/MySql%E7%B4%A2%E5%BC%95/%E7%B4%A2%E5%BC%95-BTree%E6%8F%92%E5%85%A5%E9%80%92%E5%A2%9E%E6%95%B0%E6%8D%AE.gif" alt="索引-BTree插入递增数据"></li></ul><p>结点内数据有限，不能无限放大；<br>B树比红黑树来说有更大的优点；<br>问题：在横向上做文章，那横向查找不就慢了吗？<br>注意：一个结点的大小是由限制的；结点当中的数据量是有限制的；不可能无限延长、大；比如说给这个结点设置几k大小，或者1Mb这么大；如果这个结点太大；<br>一个结点对应磁盘上的一个磁盘文件地址，对应一个大的磁盘文件地址；<br>MySQL设计的是，尽量的一次磁盘IO查找，在进行查找的时候是希望一次性把这个结点放到内存；<br>MySQL查找一次，跟磁盘做一次磁盘IO交互的时候，它会把这一个横向结点全部放到内存当中；只要这一个结点的数据都放到内存之后；那之后再到这个横向结点当中再进行查找数据；比方说要查找77，那么刚刚说经过了一次磁盘IO之后，会将这一个横向结点当中的所有索引元素都放到内存当中去，那么再去查找77，实际上就是从内存当中去进行查找这个77了；内存当中查找性能就非常快了；内存当中查找跟一次磁盘IO进行查找完全是不同级别的；<br>所以不用担心横向查找是否会慢；  </p><p>问题：那是否能将表中的所有行数据都放在一个横向结点当中，将这个横向结点设置为无限大；几百MB或者是几个G的大小用以这个横向结点做存储索引元素？那么一次查找即一次磁盘IO将这些数据一次性放到内存当中；之后就是从内存当中查询索引数据；那就很快了；？  </p><p>这个横向结点不能设置太大；<br>如果设置太大那么弊端将存在更多；首先；比如说几百万行上千万行的数据的索引怎么说也要几百MB，甚至1、2G来存储；也跟索引的字段类型有关，比如说String类型或者UUID类型等就肯定要几百MB；那么一次查找就全部放到内存的话；一次磁盘IO就需要花费很长时间，而且一次磁盘IO还不一定能够全部放到内存当中去；<br>一次磁盘IO也是有存在大小限制的；就算一次磁盘IO能够将该横向结点当中的所有的索引元素放到内存当中去，那也需要时间来放着几百MB的索引元素；而且可以思考一下，事先就将这几百MB设置几个G的索引元素直接放到内存当中去，而真正去查找数据的时候可能也就是查找最常用的10%都不到的行数据；<br>如果老是将整张表的数据全部都一次性放到内存当中去；那就将对这个内存的消耗太过于浪费；内存的资源是很宝贵的；<br>所以说这对该弊端；MySQL对于这一个横向结点是不会将其设置过大；尽量设置一个合适的大小；让这个结点，通过一次磁盘IO能够快速全部存入到内存当中；  </p><p>B-Tree应该叫做多叉平衡树；<br>B-Tree有一个特点：在中间来看一样也满足二叉树的原则；  </p><p><img src="http://r.photo.store.qq.com/psc?/V13IdniL0W0T32/TCfiP1YaPeRT4Jil9RANX5q0FjtHgrmg9JO6KfRhTseVNI0ZlC7sOBVRXN8io620BWK0osf4XOQsJRaBrrA60171VhwueoMM9fAlldBY.Fs!/r" alt="索引"></p><p>56左边的所有元素都小于56相对来说右边的元素；而56右边的索引元素都是大于56左边的父元素；<br>20和49都小于56；而20和49都大于15；  </p><p>然后B树还有一个特点就是在这一个结点当中，这一个横向结点当中从左到右它也是递增排序的；15小于56；56小于77；这是B树的一个特性；同时也是该数据结构的一个特性；<br>也就是说要用B树来维护这个数据结构时，它会按照这个特性进行初始化好；需要进行查询某一索引元素时也同样按照其特性去查找；<br>比方说要进行查找49这一索引元素；那么MySQL的查找方式即为：先将第一个结点横向结点根结点通过磁盘IO之后放到内存当中；然后到内存当中进行去比对；先比对15与49之间的大小；49大于15，接着进行比对49与56；则49小于56；然后再去查找比对15和56中间的索引元素；15和56中间存放的是指针，指针存放的是下一个索引元素，也就是下一个结点所对应的磁盘指针整个查询出来；即该指针所对应的结点数据全部放入到内存当中；然后放到内存当中去进行比对大小；然后接下来49与20进行比对，49大于20；那么接着49与49进行比对；就刚好相等；刚好找到该索引远元素了；找到该索引元素之后，则每一个索引当中存放的为key-value；value当中即存储着该索引这一行数据所在的磁盘文件当中的指针；那么拿到这个data之后；磁盘文件指针就能够快速的找到磁盘文件数据；即聚众索引；  </p><p>MySQL真正的底层索引并不是用B树来进行实现；而是使用的一种变种的B树，称之为B+树；  </p><h4 id="B-Tree-B-Tree变种"><a href="#B-Tree-B-Tree变种" class="headerlink" title="B+Tree(B-Tree变种)"></a>B+Tree(B-Tree变种)</h4><p>B+Tree(B-Tree变种)</p><ul><li>非叶子结点不存储data，只存储key，可以增大度；</li><li>叶子结点不存储指针；</li><li>顺序访问指针，提高区间访问性能；</li></ul><p>什么叫做B+树，B+树是B树的一个变种；  </p><p>B+树与B树的区别：<br>B+树：所有的data都放到了叶子结点上；而非叶子结点没有了data；<br>B+树的叶子结点上都有一个右指针；  </p><p>问题：为什么B树当中非叶子结点上的data元素都移到了叶子结点上去了；<br>B树当中每一个叶子结点并不重复；而B+树当中一些关键的索引做了冗余；不光是在叶子结点上非叶子结点上也做了冗余；  </p><p>非叶子结点上为什么没有data元素了？<br>这么一存的话（非叶子结点上存data元素，非叶子结点不存data元素）；那么就意味着整个B+树的叶子结点当中；就有了数据表的完整的所有行的索引；因为把每一行的data都往叶子结点上移动；那么每一行数据都存在有一个data的磁盘文件指针；那也就意味着；所有的行数据应该在叶子结点都有一份完整；只不过某一些关键的索引的元素；在非叶子结点上做了一个冗余；15、20、49做了冗余；方便遍历数据；一次磁盘IO取更多的k；  </p><p>其中常见的数据结构在不同场景下的区别  </p><p>MySQL实际上希望的是这一个结点的大小是有一个适当的大小，不能设置太大；<br>也就是说这一个结点的大小是存在有限制的；<br>每一个结点当中能够存储更小的元素，是不是也就意味着；一个大结点当中里面能够存储更多的索引的key；也就是说能够存储更多的索引字段；也就意味着这一个结点在大小相同的情况下；比方说，默认MySQL把这个结点的大小设置为16k；<br>在这一个大结点，一个大小固定的情况下面；这一个大结点当中的每一个小结点如果把data元素移动到叶子结点上去；是不是也就意味着整个这一个大结点可以横向可以存储更多的索引元素；  </p><p>那么如果横向可以存储更多的索引元素，那也就意味着这个横向结点向下的分叉也就越多；分叉分得更多，也就说明，存储同样大的数据量，树的高度也就更小了；那么叶子结点也就更大了；  </p><p>为什么要将data移动到叶子结点上去的原因就在于：非叶子结点当中也就可以横向存放更多的索引元素；从而树的高度也就效率，查找的效率也就提高了上来；  </p><p>MySQL默认把结点的大小设置为16k；<br>SHOW GLOBAL STATUS like ‘Innodb_page_size’;  </p><table><tr><th>Variable_name</th><th>Value</th></tr><tr><td>Innodb_page_size</td><td>16384</td></tr></table><p>该sql语句查出来的值实际是上就是MySQL底层存储索引字段，B+树的这个大结点的大小；当然也可以去进行修改该值；但是一般并不推荐去修改该值；<br>16384个字节；实际上也就相当于是16k数据；也就是16k的大小；这个大小在磁盘上也就是分配的16k的一个磁盘大小；  </p><p>思考：刚刚将data元素放到叶子结点上面去了；现在画的树的高度为3；思考现在高度为3的该树一共可以存储多少索引字段？  </p><p>假设该索引字段的字段类型为bigint；表的主键/索引的类型一般为bigint；<br>bigint在MySQL的底层的存储大小大概为8个字节byte；  </p><p>大结点当中除了索引字段占据n*8个字节外，还存在有指针；指针在MySQL底层源码使用的是6个字节byte来进行存储这个指针；这个指针说白了就是下个结点在磁盘文件上的一个地址；  </p><p>也就是说这个大结点当中存储了这样一个小的索引，以及索引旁边的指针；差不多也就是8Byte+6Byte=14Byte（一个索引+一个指针）；这一个大结点16k大概能够存储多少个索引；<br>公式=16384Byte/(8Byte+6Byte=14Byte)=1,170.285714285714<br>一个大的结点可存储的索引数约为1170个；也就是大概1k的样子；  </p><p>那么第二个结点，也可以进行存储1170个索引数；  </p><p>再说到叶子结点；所有的data元素都放到叶子结点；那么叶子结点就会变大；每一个小结点就都会变大了相比之前没有放data元素之前变大了；  </p><p>假设一下；假设这个叶子结点当中的一个小叶子结点，也就是对应的这一行索引以及该索引所在的行的那个磁盘文件文件指针或者说这一行的其他数据就存储到这个小结点当中；假设这个小结点就大一点，就存储1k的数据；那么这一个存储该小结点的大结点同样是存储16k的数据；那么也就是该结点所能够存储的索引元素为16个；<br>整个叶子结点当中可以容纳多少的索引元素（存储的所有的索引的数值）？<br>公式：（根结点上的1170这一层）1170<em>1170</em>16=21,902,400‬<br>算出来的该值实际上就是该叶子结点上所有可以存储的索引元素的总和；  </p><p>非叶子结点的所有的索引元素*每一个叶子结点可以存储的多少个索引行数据  </p><p>这个结果算出来差不多等于两千多万；两千多万所算出来的东西；也就意味着该叶子结点能够放的总索引元素个数（小索引元素+data元素）大概是两千多万；（也就相当于是两千多万条/行数据）；  </p><p>使用B+树这么一改造之后；发现同样树的高度；高度为3；该树就能够存储两千多万条个索引，也就说明可以支撑两千万行的表；将这两千多万行数据的表当中的一字段作为索引存储到该数据结构当中，那么同样高度为3，height为3，查找一个元素比方说查找50；那么从根结点去进行匹配对比；经过顺序查找；50与父节点/根结点当中的15-56对比，查找中间的数值即该根结点的左节点；也就是再跟15-28-49进行比较，得到50再去与该结点的下一结点比较即49-50；最多经过三次磁盘IO；就能够找到索要查找得到的元素50；性能十分高；  </p><p>这也就是为什么上千万行数据；只要索引字段建的比较的合理、合适；那么其磁盘查找次数是非常少的；  </p><p>用B+树来说；常见的数据表，树的高度一般就控制在2~4之间；<br>不管如何查询；即使是查询到叶子结点的速度也是十分快的；<br>只需要经过几次磁盘IO查找；  </p><h4 id="HASH表"><a href="#HASH表" class="headerlink" title="HASH表"></a>HASH表</h4><p>MySQL的索引字段当中存在有索引方法；点击下拉框进行选择索引方法（存在有两种实现：一种是BTREE；一种是HASH）<br>HASH 也是官方的一种实现；但是使用的不多；<br>90%以上的场景都是使用的B树；<br>为什么不用HASH表的原因：<br>HASH表存储索引的原理：<br>比方说将col1作为索引字段；select * from t where t.col1=4;<br>通过一个hash算法，hash（4）；对该4取了一个HASH；得到的该结果，那么该结果就跟所查询的where t.col1(4)这一行数据所在磁盘文件是有一个映射关系的；<br>这就是HASH表的一个存储结构；<br>HASH实际上就是一种算法；比说MD5;MD5就是一种HASH算法；<br>HASH就是将索引列通过一种HASH算法将索引列的值存放到HASH这一数据结构当中去；<br>那么select * from t where t.col1=6;进行查找该t.col1=6的数据行；的HASH查找即为：对该col1=6；该6的该取值做一次HASH算法运算得到它的结果hash(6)；根据这个结果；只需要做一次映射就能够快速的定位到这一行数据所在的文件磁盘指针；<br>那么即便是千万级别的数据也只需要通过hash()一次HASH结果进行计算定位得到索引所在行数据的文件磁盘指针也是能够快速的查找得到的；感觉HASH表性能更高，比B+树效率更高；B+树还要经过两三次的树的一个遍历；而HASH表的查找感觉更快；<br>只需要有这个索引字段，走索引，经过MYSQL底层定义好索引方法为HASH算法，只需要一次HASH计算结果就能够拿到该查找行数据的所在文件磁盘指针；感觉性能很快；<br>甚至在数据量更大的表当中进行查找表尾的数据，也只需要经过一次HASH计算就能找到该行数据所在的磁盘文件指针；  </p><p><img src="http://r.photo.store.qq.com/psc?/V13IdniL0W0T32/TCfiP1YaPeRT4Jil9RANXzV2Z6K9IOXoYW6kFdX*NnL.fv6XCleV5BjrQCN4Bw3HvJfkZCF6LFsSX26xC5WuUZwgbGD9vBaj2.Lec10r*m8!/r" alt="索引"></p><p>那么为什么MySQL一般用B树而不用HASH表呢？<br>（1）范围查找太慢；比如说select * from t where t.col1&gt;6;<br>      那么当这种情况下；如果col1大于的数值，极端来想的话，也就相当于是全表扫描了；<br>（2）HASH只用于范围查找很少的情况下才进行使用；那么这个时候索引使用HASH是<br>      没有问题的；而正常情况下一般都会要使用得到范围查找所以这个时候使用B Tree更佳；<br>（3）回到问题：为什么InnoDB的主键索引的叶子结点上存在有指针（右指针）？<br>      在维护B+树的时候，比方说叶子结点的最后一个结点满了，那么就需要开辟一个新的结点（下一个结点）来进行存储新的索引元素；那么就将前面那个结点（也就是之前叶子结点的最后一个结点满了的那个结点）中间开辟一个小小的元素空间；把下一个新开辟的这一个结点的磁盘文件地址的指针存放到该新开辟的结点的上一个结点的那个小元素空间当中去；也就说白了；该新开辟的结点的上一结点有一个指针，指向了下一结点，也就是该新开辟的结点的磁盘文件指针；<br>      通过有了这个指针；再联想HASH表的范围查找进行思考，那么是不是说明该指针就能够帮忙解决很大的问题；<br>      比方说：查找索引字段取值col1大于20取值的记录；从B+ 树的索引找到该20的这一个元素；因为整个叶子结点的索引元素都是从左到右依次递增形式的；通过这个（右）指针顺藤摸瓜的形式（其实这里形成了一个双向指针，查询即小于20的元素也是一样的；双向链表），通过指针就能够找到大于20，也就是20这个索引元素后面的所有索引元素结点；最后放到一个大的集合当中去；也就是这条sql语句所要返回的结果集合；  </p><p>B+树的两个特性：<br>（1）为了让非叶子结点能够存储更多的索引；从而叶子结点上除了索引元素还存在有data元素；<br>（2）在叶子结点索引元素之间还存在有一个指针指向下一索引元素结点的地址；存在有一个双向的指针；也就是为了解决如何高效的进行范围查找的这样一个问题；所以高效的范围查找也是可以进行走索引的；在某种情况下，范围查找也是可以走索引的；（因为存在指针，存在顺序递增顺序递减的这样一个结构，那么则肯定是可以走相关的索引的）  </p><h5 id="B-Tree索引的性能分析"><a href="#B-Tree索引的性能分析" class="headerlink" title="B+Tree索引的性能分析"></a>B+Tree索引的性能分析</h5><ul><li>一般使用磁盘I/O次数评价索引结构的优劣</li><li>预读：磁盘一般会顺序向后读取一定长度的数据（页的整数倍）放入内存</li><li>局部性原理：当一个数据被用到时，其附近的数据也通常会马上被使用；</li><li>B+Tree结点的大小设为等于一个页，每次新建结点直接申请一个页的空间，这样就保证一个结点物理上也存储在一个页里，就实现了一个结点的载入只需一次I/O。</li><li>B+Tree的度d一般会超过100；因此h非常小（一般为1~3之间）  </li><li>一般操作系统的最小存储单元为页，1页大小为4k；  </li><li>查看Mysql文件页大小（16k）: SHOW GLOBAL STATUS like ‘Innodb_page_size’;  </li></ul><h5 id="为什么MySQL页文件默认为16k"><a href="#为什么MySQL页文件默认为16k" class="headerlink" title="为什么MySQL页文件默认为16k"></a>为什么MySQL页文件默认为16k</h5><p>假设一行数据大小为1k；那么一页就能够存16条数据；也就是一个叶子结点能够存16条数据；再看非叶子结点，假设主键ID为bigint类型，那么长度为8B，指针大小在InnoDB源码中为6B，一共就是14B，那么一页里就可以存储16k/14=1170个（主键+指针）<br>那么一棵高度为2的B+树能存储的数据为1170<em>16=18720条，一棵高度为3的B+树能存储的数据为1170</em>1170*16=21902400（千万级条）  </p><h3 id="索引底层数据结构与算法"><a href="#索引底层数据结构与算法" class="headerlink" title="索引底层数据结构与算法"></a>索引底层数据结构与算法</h3><h3 id="InnoDB与MyISAM索引区别"><a href="#InnoDB与MyISAM索引区别" class="headerlink" title="InnoDB与MyISAM索引区别"></a>InnoDB与MyISAM索引区别</h3><p>InnoDB形容表还是形容数据库？<br>InnoDB以及MyISAM存储引擎是用来形容数据表的；  </p><p>当在设计表时，在选项当中有引擎选项存在有：ARCHIVE、BLACKHOLE、CSV、InnoDB、MEMORY、MRG MYISAM、MyISAM、PERFORMANCE SCHEMA…等等；  </p><p>存储引擎是形容表的，最常见的存储引擎即InnoDB以及MyISAM这两种存储引擎；<br>用的比较多的为InnoDB该存储引擎；  </p><p>不同表不同存储引擎底层的数据结构区别：  </p><p>test数据库对应都是存储在本地磁盘上的；<br>以数据库名命名的磁盘文件夹下；  </p><p>表=表结构+数据+索引  </p><p><img src="http://r.photo.store.qq.com/psc?/V13IdniL0W0T32/TCfiP1YaPeRT4Jil9RANX8IZB7poXY4Ed7**8BhOfVx.BLlNb39BqBwC.ebBPiVr7.bXbWAXqMbGapRUkOP8BwmJQWBxopXJj*htdZrocUE!/r" alt="索引"></p><p>InnoDB:<br>test.innodb.lock.frm - 表结构等相关信息存储文件<br>test.innodb.lock.ibd - 表数据+表索引结构  </p><p><img src="http://r.photo.store.qq.com/psc?/V13IdniL0W0T32/TCfiP1YaPeRT4Jil9RANX*r9r8zOgb4r0dv8mg9Q5qMyppmh2cPcvbiy6hMFV9ap4rR0IrTk.u5U5HvIcDcxnTh0*XJn4IhWeLwxBiXTkPg!/r" alt="索引"></p><p>InnoDB的表有一个主键，该主键自带索引；主键索引在InnoDB存储引擎下如何存储；<br>InnoDB的这种文件存储方式，MySQL官方在开发的时候，InnoDB当中的主键索引以及表当中的所有数据全部存储同一个文件，叫做后缀为ibd的文件当中；<br>InnoDB存储方式当中的叶子结点当中的的data元素所表示的内容与MyISAM存储方式当中叶子结点当中的data元素所表示的内容不一致；索引结构有点区别；<br>MyISAM叶子结点的data元素当中所存为索引所在行的行数据的磁盘文件指针；<br>但是发现InnoDB的主键索引，它的叶子结点当中的data元素当中所存储的为索引所在行的其他所有列的数据；这一行的所有列数据全部存储到该data元素当中去；<br>也就是说在InnoDB当中，通过一条sql语句，带有where查询通过索引进行查询的sql语句；只需要查找一个文件，从这个ibd文件当中一次性定位到索引元素，快速的就能根据data元素，这个索引所在行的其他的所有字段，将该行的所有字段进行查询出来放入内存当中去；就查找到了所需要查找的元素；相对来说性能应该要比MyISAM存储引擎的性能会高一点；  </p><p>InnoDB与MyISAM的底层存储是稍微有些区别的；  </p><p>MyISAM：<br>test.myisam.frm - 该文件存储对表的表结构一些定义的一些数据；<br>test.myisam.MYD - 实际上存储的为表的数据，D英文单词data的简写（该表当中所有的数据行）；<br>test.myisam.MYI - 该表所对应的索引字段存储的位置；  </p><p>主键自带主键索引；索引，它是一个数据结构，数据结构实际上存储在MYI文件当中；I即为Index首字母的简写；  </p><p>MyISAM底层也为B+树数据结构进行存储；<br>MyISAM索引底层存储，如何进行存储：  </p><p><img src="http://r.photo.store.qq.com/psc?/V13IdniL0W0T32/TCfiP1YaPeRT4Jil9RANX8sBSc*PWI*GgGhWe3pcWW625GV21FTGHFPkQrnPSFTCe3vCEKM3QCpTupcvYLjHH7f2N4y0qI7TTFDwZaL9fXc!/r" alt="索引"></p><p>col1是作为表的主键索引；<br>因为支持二叉查找，所以像15、20、49这种处于在中间的这些个数据将被作为冗余字段；<br>就更可以区分查找数据；像二叉折半查找等；一般取中间的元素作为冗余的索引；快速的过滤一些数据；减少查找次数；<br>将col1该字段列当中的所有数据放入到数据结构当中去；然后看；<br>原来在叶子结点当中存储的data元素，data元素存储的即使该索引所在行的行数据的磁盘文件指针；（地址指针，16进制的值）  </p><p>select * from t where t.col1=49;<br>col1主键索引；<br>MySQL底层实际上先会去到MYI文件当中；<br>因为索引（数据结构）存储在MYI索引文件当中；<br>先拿col1=49在MYI文件当中快速地定位到结点为49的结点；<br>根据B+树的特性；<br>先从根结点去进行定位；<br>根结点当中的数据通过一次磁盘IO，根结点当中的索引元素将会被放到内存当中，49将会在内存当中与15-56-77相进行比较；得到49在15-56之间；49就将走15与56中间的向下的指针，左节点也就是存放有15-20-49这三个索引元素的该结点中，那么此时左节点当中的索引元素将会进行第二次磁盘IO的操作，将左节点当中的索引元素放到内存当中去，与查询的数据49相进行比较；得到49在区间20-49之间；最后到了叶子结点，该叶子结点当中包括两个小结点49-50以及2个data元素（指针），那么第三次磁盘IO时，将49-50该叶子结点放到内存当中去，49就将与49-50相进行比较得到49，该49即为要查找的元素；49该小结点当中所对应的data元素拿出来，该data元素对于MyISAM存储引擎来说data元素存储的是为该索引所在行的行数据的磁盘文件指针；当拿到获取得到该指针之后就将到MYD文件当中进行查询获取得到相应数据值；  </p><p>面试题：聚集索引or聚众索引  </p><p>什么叫做聚集索引?  </p><p>聚集索引定义：叶结点包含了完整的数据记录；<br>InnoDB的主键索引，ibd这个主键索引的这个文件；主键索引其就叫做聚集索引；<br>因为InnoDB的主键索引，它是跟它的文件数据行整个是存储在一个文件当中ibd文件；<br>索引和数据是聚集存储在一起的；  </p><p>有聚集索引即存在非聚集索引；<br>MyISAM的主键索引就称作是非聚集索引；<br>因为MyISAM的主键索引存储在MYI文件当中；而数据存储在MYD文件当中；<br>那如果需要查找数据，每次都需要两个文件的一同查找才能查找得到；数据文件和索引文件分开存储了；所以称MyISAM的主键索引为非聚集索引；InnoDB的主键索引称为聚集索引；  </p><p>常见数据结构理论；  </p><p>结合具体的MySQL表来看一下；<br>不同的表底层如何进行存储；<br>MySQL的表无非就是MyISAM存储引擎/InnoDB存储引擎；<br>不同的表可能有不同的存储引擎；  </p><p>MyISAM索引实现（非聚集）<br><img src="http://r.photo.store.qq.com/psc?/V13IdniL0W0T32/TCfiP1YaPeRT4Jil9RANX2tYjinQbFQFT5hJICKOua.p8u*tNGRGnBmzDnCDDuui9JbsxaFmbrmLTSu0V4thfYO9zIg6UNnWwUY*NxnoWlU!/r" alt="索引"></p><ul><li>MyISAM索引文件和数据文件是分离的；</li></ul><p>InnoDB索引实现（聚集）</p><p><img src="http://r.photo.store.qq.com/psc?/V13IdniL0W0T32/TCfiP1YaPeRT4Jil9RANX*GhKIY3zUQdhemNpwYPZHMTx6WJ6HggRWyAqiDQHIGmxm2m2V7hUQmLQaYwj8CF*g.zfe8sCKjjxpzzRlDfl3I!/r" alt="索引"></p><ul><li>表数据本身就是按照B+Tree组织的一个索引结构文件</li><li>聚集索引-叶结点包含了完整的数据记录</li><li>为什么InnoDB表必须要有主键？并且推荐使用整型的自增主键?  <ul><li>为什么必须要建主键，MySQL官方对于InnoDB的表，其数据就需要用一个索引B+树来组织；所以肯定是需要主键的；<br>（之间建了InnoDB的表但是没有建索引也建成功了）针对这种情况，MySQL会自动在底层建一个索引；如果表中没有建索引，MySQL会在底层找一个唯一能标识这一行数据的字段作为索引；<br>如果找不到，它会默认给表生成一个类似像row_id，一个隐藏列作为主键索引，主键；<br>根据该表主键索引来维护整张表的数据；MySQl官方设计的就是要用一个B+树的存储结构来组织；B+树其实就是该索引，索引结构；所以必须要有一个主键索引；即便表中没有建立，MySQL也会默认生成一个隐藏的列/主键索引；  </li><li>主键尽量为整型自增；为什么主键尽量为整型自增？<br>假设主键不设置为整型，设置为UUID类型，UUID不为整型，而是字符串类型；<br>为什么不推荐使用UUID，而推荐使用整型并且自增的类型；<br>首先用UUID，它是字符串类型的，而且是很长一串，字母+数字+其他符号；<br>这样存在的弊端有：<br>（1）相对于整型来说，首先，这一长串字符串的存储空间比整型大得多（字符串长度越长占用空间越大；索引存放在磁盘上面，那么也将会占用磁盘存储空间；那么UUID存储磁盘空间是肯定会要比整型类型字段要大得多）；<br>（2） 而且，底层B+树索引去进行查找的时候；是需要进行结点之间比较大小的；一个一个根据B+树，二叉一个个进行比较大小找对应的元素；而结点当中存储的都为UUID，一个个去比较大小的话；字符串比较大小，字符串跟数字进行比较，一位一位进行比较性能将会非常的低；字符串去进行比较先要转成ASCII码值（国标码）按照码表当中的顺序进行比较大小；这个性能就非常低了；<br>相对于整型来比较：数值之间的比较性能肯定是高的多的；<br>（3）为什么要使用自增的？UUID肯定不是自增类型的；<br>正常情况下如果是使用顺序自增：插入的元素基本上是往后面进行插入的；后面的结点空间满了，然后继续往后面去开辟一个空间继续放；如果现在新加一个元素；叶子结点从左到右都是依次递增的；在每一个结点当中每一个元素都是依次递增，左边小于右边；B+树当中的所有叶子结点；<br>从左到右都是依次递增的；<br>现在将一个不是自增的新元素UUID进行插入；<br>而插入的位置正好是叶子结点中间的一个位置，而并不是结尾的位置；<br>比如插入到20与30的叶子结点中间；<br>那么这个时候将20和30想象成UUID类型的字符串内容；当新元素UUID进行插入的时候就将会形成分裂的这种情况；<br>有可能就是将20与新元素新分裂出一个叶子结点，30单独分裂出去一个叶子结点；<br>插入的元素需要进行分裂一次；然后还需要平衡一次；<br>相对于这种插入新元素，插入一个元素按顺序递增往后面进行一个一个递增的加元素的这种情况效率就要高多了；<br>这也就是为什么B+ 树推荐的主键索引为整型并且自增类型；<br>因为自增它会尽可能的避免：新增的该结点插入到叶子结点上去了之后，会导致叶子结点原有的已经满了的大的叶子结点做分裂以及自动平衡；<br>（4）指针（B+树的叶子结点上的右指针）的作用：叶子结点当中某一大结点如已经存满了16k的索引元素；按照B+树从左到右的依次递增的顺序；假设当前该字段不是自增的；现在来了一个新的元素需要进行插入数据，看到索引的值比方说为25；那么按顺序这个索引值就应该插入到叶子结点20-30的中间；但是当前该叶子结点的存储空间大小16k已经满了，已经存不下了；<br>那么此时在这种情况下：<br>1&gt;当前叶子结点的存储空间已经满了<br>2&gt;当前需要新插入一个新的索引元素，而该索引元素的大小取值应该放在该当前叶子结点的中间；<br>那么这个时候就需要进行叶子结点的分裂；分裂成两个结点；20与25这两个索引元素成为一个新的叶子结点；而30将被分裂到另外一个叶子结点上面去；<br>而如果插入的元素都是递增类型的元素的话则比如说插入新元素100；那么就肯定不再需要往中间去进行插入；都是直接在后面新开辟一块空间来进行存储该新元素100；  </li></ul></li></ul><p><img src="http://r.photo.store.qq.com/psc?/V13IdniL0W0T32/TCfiP1YaPeRT4Jil9RANX8fDAvL3g7DJ9HhnBQeGRqDvrpkZXABEIRyvGCl2wXfLlwUZMMrCWHUUoUCg2YMQdB8MP3ElixOLflsVbBIu18U!/r" alt="索引"></p><ul><li>为什么非主键索引结构叶子结点存储的是主键值？（一致性和节省存储空间）  </li></ul><h3 id="索引最左前缀原理"><a href="#索引最左前缀原理" class="headerlink" title="索引最左前缀原理"></a>索引最左前缀原理</h3><ul><li>联合索引的底层存储结构长什么样?  </li></ul><p>(字段1，字段2，字段3)<br>比方说字段1、字段2、字段3是联合索引；  </p><p><img src="http://r.photo.store.qq.com/psc?/V13IdniL0W0T32/TCfiP1YaPeRT4Jil9RANX50m84lF6rjqlgyWXpKCriCR9zfdJdu7YbMYTBq.e8Oj47TQyP3KTeZ1anErrKoy5mNBgGaDtLH9DbfHrrCBYYg!/r" alt="索引"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;笔记&quot;&gt;&lt;a href=&quot;#笔记&quot; class=&quot;headerlink&quot; title=&quot;笔记&quot;&gt;&lt;/a&gt;笔记&lt;/h2&gt;&lt;p&gt;观看笔记：&lt;br&gt;&lt;a href=&quot;https://www.bilibili.com/video/BV13x411Z7AQ?from=sea
      
    
    </summary>
    
    
      <category term="笔记" scheme="https://fengshana.github.io/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="面试" scheme="https://fengshana.github.io/tags/%E9%9D%A2%E8%AF%95/"/>
    
      <category term="红黑树" scheme="https://fengshana.github.io/tags/%E7%BA%A2%E9%BB%91%E6%A0%91/"/>
    
      <category term="MySql索引" scheme="https://fengshana.github.io/tags/MySql%E7%B4%A2%E5%BC%95/"/>
    
      <category term="B+树" scheme="https://fengshana.github.io/tags/B-%E6%A0%91/"/>
    
      <category term="B树" scheme="https://fengshana.github.io/tags/B%E6%A0%91/"/>
    
      <category term="HASH表" scheme="https://fengshana.github.io/tags/HASH%E8%A1%A8/"/>
    
      <category term="二叉树" scheme="https://fengshana.github.io/tags/%E4%BA%8C%E5%8F%89%E6%A0%91/"/>
    
  </entry>
  
  <entry>
    <title>前端页面双色球3</title>
    <link href="https://fengshana.github.io/2020/04/15/%E9%9D%A2%E8%AF%95%E9%A2%98/%E5%89%8D%E7%AB%AF%E9%A1%B5%E9%9D%A2%E6%94%B9%E8%BF%9B3/"/>
    <id>https://fengshana.github.io/2020/04/15/%E9%9D%A2%E8%AF%95%E9%A2%98/%E5%89%8D%E7%AB%AF%E9%A1%B5%E9%9D%A2%E6%94%B9%E8%BF%9B3/</id>
    <published>2020-04-14T18:20:59.119Z</published>
    <updated>2020-04-15T13:23:57.705Z</updated>
    
    <content type="html"><![CDATA[<h2 id="需求内容"><a href="#需求内容" class="headerlink" title="需求内容"></a>需求内容</h2><p><a href="https://github.com/fengshana/Mamai" target="_blank" rel="noopener">https://github.com/fengshana/Mamai</a>  </p><ol><li>分页加个页码</li><li>这个10出过了很多期的，最近的这一期130，4.10，到今天最新的一期不管数值多少，为止已经多少期没出了，求差值</li><li>把搜索的数字加个红色也行</li></ol><h3 id="效果图"><a href="#效果图" class="headerlink" title="效果图"></a>效果图</h3><p><img src="http://r.photo.store.qq.com/psc?/V13IdniL0W0T32/TCfiP1YaPeRT4Jil9RANX0OntByQ9RopVFKqFo2EAAP.w*ru3lHqrrQXKPPvOiJcpxdOfhwHYah.is4YlEKT.jSTullaIqHR6PMItPvTZnk!/r" alt="image"><br><img src="http://r.photo.store.qq.com/psc?/V13IdniL0W0T32/TCfiP1YaPeRT4Jil9RANX6NdBhxBRYBUy.T6WIURM8FztiZEk0bzwnUWuk2wwu0zeYpSbcbz.bcVfsU6GZo8tyfIU60tglNtx0E4zdfuFgM!/r" alt="image"><br><img src="http://r.photo.store.qq.com/psc?/V13IdniL0W0T32/TCfiP1YaPeRT4Jil9RANX.hsLuSnbnm1WocRcndLv9YK0y2Ojuh2G*eAAF14QcltwhNkZ.r8foxuxlNiqT.LK0X4HY7fncWH*Ik9RrigLc8!/r" alt="image"></p><h3 id="接触docker并部署项目"><a href="#接触docker并部署项目" class="headerlink" title="接触docker并部署项目"></a>接触docker并部署项目</h3><p>这边是将项目打包成jar包部署linux环境当中的docker容器内</p><p>参考Blog：</p><ul><li><a href="https://www.jianshu.com/p/397929dbc27d" target="_blank" rel="noopener">https://www.jianshu.com/p/397929dbc27d</a></li></ul><p>相关命令：</p><p>docker ps -a<br>docker images<br>docker stop 镜像的名称<br>docker start 镜像的名称</p><figure class="highlight basic"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">432 </span> cd ../logs/</span><br><span class="line"><span class="symbol">433 </span> tail -<span class="number">300</span>f access.<span class="keyword">log</span></span><br><span class="line"><span class="symbol">434 </span> ../sbin/nginx -s quit</span><br><span class="line"><span class="symbol">435 </span> ../sbin/nginx -s <span class="keyword">stop</span></span><br><span class="line"><span class="symbol">436 </span> cd ../conf</span><br><span class="line"><span class="symbol">437 </span> vim nginx.conf</span><br><span class="line"><span class="symbol">438 </span> ../sbin/nginx -s reload</span><br><span class="line"><span class="symbol">439 </span> /<span class="keyword">usr</span>/local/nginx/sbin/nginx -c /<span class="keyword">usr</span>/local/nginx/conf/nginx.conf</span><br><span class="line"><span class="symbol">440 </span> ../sbin/nginx -s reload</span><br><span class="line"><span class="symbol">441 </span> vim nginx.conf</span><br><span class="line"><span class="symbol">442 </span> ../sbin/nginx -s reload</span><br><span class="line"><span class="symbol">443 </span> vim nginx.conf</span><br><span class="line"><span class="symbol">444 </span> ../sbin/nginx  -s reload</span><br><span class="line"><span class="symbol">445 </span> vim nginx.conf</span><br><span class="line"><span class="symbol">446 </span> cd </span><br><span class="line"><span class="symbol">447 </span> ll</span><br><span class="line"><span class="symbol">448 </span> cd apache-tomcat-<span class="number">8.5.51</span>/</span><br><span class="line"><span class="symbol">449 </span> ll</span><br><span class="line"><span class="symbol">450 </span> ccd logs/</span><br><span class="line"><span class="symbol">451 </span> ll</span><br><span class="line"><span class="symbol">452 </span> cd logs/</span><br><span class="line"><span class="symbol">453 </span> ll</span><br><span class="line"><span class="symbol">454 </span> cd ..</span><br><span class="line"><span class="symbol">455 </span> ll</span><br><span class="line"><span class="symbol">456 </span> cd ..</span><br><span class="line"><span class="symbol">457 </span> ll</span><br><span class="line"><span class="symbol">458 </span> more install.sh </span><br><span class="line"><span class="symbol">459 </span> <span class="keyword">clear</span></span><br><span class="line"><span class="symbol">460 </span> cd /<span class="keyword">usr</span>/local/nginx/</span><br><span class="line"><span class="symbol">461 </span> ll</span><br><span class="line"><span class="symbol">462 </span> cd conf</span><br><span class="line"><span class="symbol">463 </span> more nginx.conf</span><br><span class="line"><span class="symbol">464 </span> vim nginx.conf</span><br><span class="line"><span class="symbol">465 </span> ../sbin/nginx -s reload</span><br><span class="line"><span class="symbol">466 </span> ll</span><br><span class="line"><span class="symbol">467 </span> ps -ef |grep  java</span><br><span class="line"><span class="symbol">468 </span> <span class="keyword">kill</span> -<span class="number">9</span> <span class="number">23983</span></span><br><span class="line"><span class="symbol">469 </span> ll</span><br><span class="line"><span class="symbol">470 </span> <span class="keyword">kill</span> -<span class="number">9</span> <span class="number">23983</span></span><br><span class="line"><span class="symbol">471 </span> ps -ef |grep  java</span><br><span class="line"><span class="symbol">472 </span> <span class="keyword">kill</span> -<span class="number">9</span> <span class="number">703</span></span><br><span class="line"><span class="symbol">473 </span> <span class="keyword">clear</span></span><br><span class="line"><span class="symbol">474 </span> ll</span><br><span class="line"><span class="symbol">475 </span> <span class="keyword">mkdir</span> docker</span><br><span class="line"><span class="symbol">476 </span> ll</span><br><span class="line"><span class="symbol">477 </span> cd docker/</span><br><span class="line"><span class="symbol">478 </span> ll</span><br><span class="line"><span class="symbol">479 </span> <span class="keyword">clear</span></span><br><span class="line"><span class="symbol">480 </span> cd ..</span><br><span class="line"><span class="symbol">481 </span> ll</span><br><span class="line"><span class="symbol">482 </span> cp Mamai-<span class="number">1.0</span>-SNAPSHOT.jar docker/</span><br><span class="line"><span class="symbol">483 </span> ll</span><br><span class="line"><span class="symbol">484 </span> cd docker/</span><br><span class="line"><span class="symbol">485 </span> ll</span><br><span class="line"><span class="symbol">486 </span> <span class="keyword">clear</span></span><br><span class="line"><span class="symbol">487 </span> pwd</span><br><span class="line"><span class="symbol">488 </span> ll</span><br><span class="line"><span class="symbol">489 </span> <span class="keyword">clear</span></span><br><span class="line"><span class="symbol">490 </span> docker build -t springbootdemo4docker .</span><br><span class="line"><span class="symbol">491 </span> docker images</span><br><span class="line"><span class="symbol">492 </span> docker <span class="keyword">run</span> -d -p <span class="number">8080</span>:<span class="number">8080</span> springbootdemo4docker</span><br><span class="line"><span class="symbol">493 </span> <span class="keyword">clear</span></span><br><span class="line"><span class="symbol">494 </span> ps -ef |grep java</span><br><span class="line"><span class="symbol">495 </span> docker logs --tail <span class="number">300</span> -f demo</span><br><span class="line"><span class="symbol">496 </span> docker ps</span><br><span class="line"><span class="symbol">497 </span> <span class="keyword">clear</span></span><br><span class="line"><span class="symbol">498 </span> netstat -na</span><br><span class="line"><span class="symbol">499 </span> <span class="keyword">clear</span></span><br><span class="line"><span class="symbol">500 </span> ps -ef|grep java</span><br><span class="line"><span class="symbol">501 </span> ll</span><br><span class="line"><span class="symbol">502 </span> more Dockerfile </span><br><span class="line"><span class="symbol">503 </span> <span class="keyword">clear</span></span><br><span class="line"><span class="symbol">504 </span> docker-compose exec java bash</span><br><span class="line"><span class="symbol">505 </span> cd /<span class="keyword">usr</span>/local/bin/</span><br><span class="line"><span class="symbol">506 </span> docker-compose exec java bash</span><br><span class="line"><span class="symbol">507 </span> ll</span><br><span class="line"><span class="symbol">508 </span> netstat -lnp|grep <span class="number">8080</span></span><br><span class="line"><span class="symbol">509 </span> ll</span><br><span class="line"><span class="symbol">510 </span> cd /<span class="keyword">usr</span>/local/nginx/conf</span><br><span class="line"><span class="symbol">511 </span> vim nginx.conf</span><br><span class="line"><span class="symbol">512 </span> ../sbin/nginx -s reload</span><br><span class="line"><span class="symbol">513 </span> vim nginx.conf</span><br><span class="line"><span class="symbol">514 </span> ../sbin/nginx -s reload</span><br><span class="line"><span class="symbol">515 </span> ll</span><br><span class="line"><span class="symbol">516 </span> cd apache-tomcat-<span class="number">8.5.51</span>/</span><br><span class="line"><span class="symbol">517 </span> ll</span><br><span class="line"><span class="symbol">518 </span> cd ..</span><br><span class="line"><span class="symbol">519 </span> ll</span><br><span class="line"><span class="symbol">520 </span> rm -rf apache-tomcat-<span class="number">8.5.51</span>/</span><br><span class="line"><span class="symbol">521 </span> ll</span><br><span class="line"><span class="symbol">522 </span> <span class="keyword">clear</span></span><br><span class="line"><span class="symbol">523 </span> ll</span><br><span class="line"><span class="symbol">524 </span> wget https://mirrors.cnnic.cn/apache/tomcat/tomcat-<span class="number">9</span>/v9.<span class="number">0.7</span>/bin/apache-tomcat-<span class="number">9.0.7.</span>tar.gz</span><br><span class="line"><span class="symbol">525 </span> wget https://archive.apache.org/dist/tomcat/tomcat-<span class="number">8</span>/v8.<span class="number">0.23</span>/bin/apache-tomcat-<span class="number">8.0.23.</span>tar.gz</span><br><span class="line"><span class="symbol">526 </span> <span class="keyword">clear</span></span><br><span class="line"><span class="symbol">527 </span> ll</span><br><span class="line"><span class="symbol">528 </span> tar -zxvf apache-tomcat-<span class="number">8.0.23.</span>tar.gz </span><br><span class="line"><span class="symbol">529 </span> ll</span><br><span class="line"><span class="symbol">530 </span> <span class="keyword">clear</span></span><br><span class="line"><span class="symbol">531 </span> ll</span><br><span class="line"><span class="symbol">532 </span> cd apache-tomcat-<span class="number">8.0.23</span></span><br><span class="line"><span class="symbol">533 </span> ll</span><br><span class="line"><span class="symbol">534 </span> cd webapps/</span><br><span class="line"><span class="symbol">535 </span> ll</span><br><span class="line"><span class="symbol">536 </span> rm -rf docs/</span><br><span class="line"><span class="symbol">537 </span> rm -rf examples/</span><br><span class="line"><span class="symbol">538 </span> rm -rf host-manager/</span><br><span class="line"><span class="symbol">539 </span> rm -rf manager/</span><br><span class="line"><span class="symbol">540 </span> rm -rf ROOT/</span><br><span class="line"><span class="symbol">541 </span> ll</span><br><span class="line"><span class="symbol">542 </span> <span class="keyword">clear</span></span><br><span class="line"><span class="symbol">543 </span> ll</span><br><span class="line"><span class="symbol">544 </span> cd ..</span><br><span class="line"><span class="symbol">545 </span> ll</span><br><span class="line"><span class="symbol">546 </span> cd work/</span><br><span class="line"><span class="symbol">547 </span> ll</span><br><span class="line"><span class="symbol">548 </span> cd ..</span><br><span class="line"><span class="symbol">549 </span> cd conf/</span><br><span class="line"><span class="symbol">550 </span> ll</span><br><span class="line"><span class="symbol">551 </span> vim server.xml </span><br><span class="line"><span class="symbol">552 </span> <span class="keyword">clear</span></span><br><span class="line"><span class="symbol">553 </span> cd ..</span><br><span class="line"><span class="symbol">554 </span> cd webapps/</span><br><span class="line"><span class="symbol">555 </span> ll</span><br><span class="line"><span class="symbol">556 </span> pwd</span><br><span class="line"><span class="symbol">557 </span> cd ..</span><br><span class="line"><span class="symbol">558 </span> cd conf/</span><br><span class="line"><span class="symbol">559 </span> vim server.xml </span><br><span class="line"><span class="symbol">560 </span> <span class="keyword">clear</span></span><br><span class="line"><span class="symbol">561 </span> ll</span><br><span class="line"><span class="symbol">562 </span> cd ..</span><br><span class="line"><span class="symbol">563 </span> ll</span><br><span class="line"><span class="symbol">564 </span> cd bin</span><br><span class="line"><span class="symbol">565 </span> ./startup.sh </span><br><span class="line"><span class="symbol">566 </span> cd ..</span><br><span class="line"><span class="symbol">567 </span> cd logs/</span><br><span class="line"><span class="symbol">568 </span> ll</span><br><span class="line"><span class="symbol">569 </span> ls</span><br><span class="line"><span class="symbol">570 </span> cd ..</span><br><span class="line"><span class="symbol">571 </span> ls</span><br><span class="line"><span class="symbol">572 </span> cd server</span><br><span class="line"><span class="symbol">573 </span> cd www</span><br><span class="line"><span class="symbol">574 </span> cd server</span><br><span class="line"><span class="symbol">575 </span> ls</span><br><span class="line"><span class="symbol">576 </span> cd tomcat</span><br><span class="line"><span class="symbol">577 </span> ls</span><br><span class="line"><span class="symbol">578 </span> cd bin</span><br><span class="line"><span class="symbol">579 </span> ls</span><br><span class="line"><span class="symbol">580 </span> cd apache-tomcat-<span class="number">8.5.12</span>/</span><br><span class="line"><span class="symbol">581 </span> ls</span><br><span class="line"><span class="symbol">582 </span> cd bin</span><br><span class="line"><span class="symbol">583 </span> ./startup.sh</span><br><span class="line"><span class="symbol">584 </span> ls</span><br><span class="line"><span class="symbol">585 </span> ./startup.sh</span><br><span class="line"><span class="symbol">586 </span> ./shutdown.sh</span><br><span class="line"><span class="symbol">587 </span> ./startup.sh</span><br><span class="line"><span class="symbol">588 </span> ll</span><br><span class="line"><span class="symbol">589 </span> cd apache-tomcat-<span class="number">8.0.23</span></span><br><span class="line"><span class="symbol">590 </span> ll</span><br><span class="line"><span class="symbol">591 </span> cd webapps/</span><br><span class="line"><span class="symbol">592 </span> ll</span><br><span class="line"><span class="symbol">593 </span> <span class="keyword">clear</span></span><br><span class="line"><span class="symbol">594 </span> cd ..</span><br><span class="line"><span class="symbol">595 </span> cd webapps/</span><br><span class="line"><span class="symbol">596 </span> ll</span><br><span class="line"><span class="symbol">597 </span> cd myProject</span><br><span class="line"><span class="symbol">598 </span> ll</span><br><span class="line"><span class="symbol">599 </span> cd WEB-INF/</span><br><span class="line"><span class="symbol">600 </span> ll</span><br><span class="line"><span class="symbol">601 </span> cd classes/</span><br><span class="line"><span class="symbol">602 </span> ll</span><br><span class="line"><span class="symbol">603 </span> more application.properties </span><br><span class="line"><span class="symbol">604 </span> cd ..</span><br><span class="line"><span class="symbol">605 </span> ll</span><br><span class="line"><span class="symbol">606 </span> cd ..</span><br><span class="line"><span class="symbol">607 </span> ll</span><br><span class="line"><span class="symbol">608 </span> <span class="keyword">clear</span></span><br><span class="line"><span class="symbol">609 </span> cd META-INF/</span><br><span class="line"><span class="symbol">610 </span> ll</span><br><span class="line"><span class="symbol">611 </span> cd ..</span><br><span class="line"><span class="symbol">612 </span> ll</span><br><span class="line"><span class="symbol">613 </span> cd WEB-INF/</span><br><span class="line"><span class="symbol">614 </span> ll</span><br><span class="line"><span class="symbol">615 </span> cd classes/</span><br><span class="line"><span class="symbol">616 </span> ll</span><br><span class="line"><span class="symbol">617 </span> cd templates/</span><br><span class="line"><span class="symbol">618 </span> ll</span><br><span class="line"><span class="symbol">619 </span> cd ..</span><br><span class="line"><span class="symbol">620 </span> ll</span><br><span class="line"><span class="symbol">621 </span> cd classes/</span><br><span class="line"><span class="symbol">622 </span> ll</span><br><span class="line"><span class="symbol">623 </span> <span class="keyword">clear</span></span><br><span class="line"><span class="symbol">624 </span> ll</span><br><span class="line"><span class="symbol">625 </span> more application.properties </span><br><span class="line"><span class="symbol">626 </span> ll</span><br><span class="line"><span class="symbol">627 </span> cd templates/</span><br><span class="line"><span class="symbol">628 </span> ll</span><br><span class="line"><span class="symbol">629 </span> cd js/</span><br><span class="line"><span class="symbol">630 </span> ll</span><br><span class="line"><span class="symbol">631 </span> <span class="keyword">clear</span></span><br><span class="line"><span class="symbol">632 </span> vim <span class="keyword">common</span>.js </span><br><span class="line"><span class="symbol">633 </span> cd .</span><br><span class="line"><span class="symbol">634 </span> cd ..</span><br><span class="line"><span class="symbol">635 </span> cd conf/</span><br><span class="line"><span class="symbol">636 </span> more server.xml </span><br><span class="line"><span class="symbol">637 </span> cd ..</span><br><span class="line"><span class="symbol">638 </span> cd webapps/</span><br><span class="line"><span class="symbol">639 </span> ll</span><br><span class="line"><span class="symbol">640 </span> <span class="keyword">clear</span></span><br><span class="line"><span class="symbol">641 </span> cd myProject</span><br><span class="line"><span class="symbol">642 </span> ll</span><br><span class="line"><span class="symbol">643 </span> cd WEB-INF/</span><br><span class="line"><span class="symbol">644 </span> ll</span><br><span class="line"><span class="symbol">645 </span> cd ca</span><br><span class="line"><span class="symbol">646 </span> cd classes/</span><br><span class="line"><span class="symbol">647 </span> ll</span><br><span class="line"><span class="symbol">648 </span> cd templates/</span><br><span class="line"><span class="symbol">649 </span> ll</span><br><span class="line"><span class="symbol">650 </span> cd js/</span><br><span class="line"><span class="symbol">651 </span> ll</span><br><span class="line"><span class="symbol">652 </span> vim <span class="keyword">common</span>.js </span><br><span class="line"><span class="symbol">653 </span> ps -ef |grep java</span><br><span class="line"><span class="symbol">654 </span> netstat -lnp|grep <span class="number">8082</span></span><br><span class="line"><span class="symbol">655 </span> systemctl status firewalld</span><br><span class="line"><span class="symbol">656 </span> <span class="keyword">clear</span></span><br><span class="line"><span class="symbol">657 </span> firewall-cmd --zone=public --add-port=<span class="number">80</span>/tcp --permanent</span><br><span class="line"><span class="symbol">658 </span> firewall-cmd --zone=public --add-port=<span class="number">8082</span>/tcp --permanent</span><br><span class="line"><span class="symbol">659 </span> firewall-cmd --reload</span><br><span class="line"><span class="symbol">660 </span> firewall-cmd --zone=public --query-port=<span class="number">8082</span>/tcp</span><br><span class="line"><span class="symbol">661 </span> history </span><br><span class="line"><span class="symbol">662 </span> <span class="keyword">clear</span></span><br><span class="line"><span class="symbol">663 </span> ll</span><br><span class="line"><span class="symbol">664 </span> cd ..</span><br><span class="line"><span class="symbol">665 </span> cd bin/</span><br><span class="line"><span class="symbol">666 </span> ./shutdown.sh </span><br><span class="line"><span class="symbol">667 </span> netstat -lnp|grep <span class="number">8080</span></span><br><span class="line"><span class="symbol">668 </span> netstat -lnp|grep <span class="number">8082</span></span><br><span class="line"><span class="symbol">669 </span> <span class="keyword">kill</span> -<span class="number">9</span> <span class="number">1109</span></span><br><span class="line"><span class="symbol">670 </span> netstat -lnp|grep <span class="number">8080</span></span><br><span class="line"><span class="symbol">671 </span> <span class="keyword">clear</span></span><br><span class="line"><span class="symbol">672 </span> cd ..</span><br><span class="line"><span class="symbol">673 </span> cd conf/</span><br><span class="line"><span class="symbol">674 </span> ll</span><br><span class="line"><span class="symbol">675 </span> vim server.xml </span><br><span class="line"><span class="symbol">676 </span> cd ..</span><br><span class="line"><span class="symbol">677 </span> cd bin/</span><br><span class="line"><span class="symbol">678 </span> ./startup.sh </span><br><span class="line"><span class="symbol">679 </span> netstat -lnp|grep <span class="number">8080</span></span><br><span class="line"><span class="symbol">680 </span> <span class="keyword">clear</span></span><br><span class="line"><span class="symbol">681 </span> ll</span><br><span class="line"><span class="symbol">682 </span> cd ../logs/</span><br><span class="line"><span class="symbol">683 </span> more catalina.<span class="keyword">out</span> </span><br><span class="line"><span class="symbol">684 </span> cd ../webapps/</span><br><span class="line"><span class="symbol">685 </span> cd myProject</span><br><span class="line"><span class="symbol">686 </span> ll</span><br><span class="line"><span class="symbol">687 </span> cd WEB-INF/</span><br><span class="line"><span class="symbol">688 </span> ll</span><br><span class="line"><span class="symbol">689 </span> cd classes/</span><br><span class="line"><span class="symbol">690 </span> ll</span><br><span class="line"><span class="symbol">691 </span> cd templates/</span><br><span class="line"><span class="symbol">692 </span> ll</span><br><span class="line"><span class="symbol">693 </span> cd js/</span><br><span class="line"><span class="symbol">694 </span> ll</span><br><span class="line"><span class="symbol">695 </span> <span class="keyword">clear</span></span><br><span class="line"><span class="symbol">696 </span> ll</span><br><span class="line"><span class="symbol">697 </span> vim <span class="keyword">common</span>.js </span><br><span class="line"><span class="symbol">698 </span> cd ..</span><br><span class="line"><span class="symbol">699 </span> <span class="keyword">clear</span></span><br><span class="line"><span class="symbol">700 </span> ll</span><br><span class="line"><span class="symbol">701 </span> cd ..</span><br><span class="line"><span class="symbol">702 </span> cd bin/</span><br><span class="line"><span class="symbol">703 </span> ./shutdown.sh </span><br><span class="line"><span class="symbol">704 </span> ll</span><br><span class="line"><span class="symbol">705 </span> cd apache-tomcat-<span class="number">8.0.23</span></span><br><span class="line"><span class="symbol">706 </span> ll</span><br><span class="line"><span class="symbol">707 </span> cd webapps/</span><br><span class="line"><span class="symbol">708 </span> ll</span><br><span class="line"><span class="symbol">709 </span> rm -rf myProject</span><br><span class="line"><span class="symbol">710 </span> rm -rf myProject.war </span><br><span class="line"><span class="symbol">711 </span> cd ..</span><br><span class="line"><span class="symbol">712 </span> cd work/</span><br><span class="line"><span class="symbol">713 </span> ll</span><br><span class="line"><span class="symbol">714 </span> cd Catalina/</span><br><span class="line"><span class="symbol">715 </span> ll</span><br><span class="line"><span class="symbol">716 </span> cd localhost/</span><br><span class="line"><span class="symbol">717 </span> ll</span><br><span class="line"><span class="symbol">718 </span> rm -rf myProject/</span><br><span class="line"><span class="symbol">719 </span> ll</span><br><span class="line"><span class="symbol">720 </span> <span class="keyword">clear</span></span><br><span class="line"><span class="symbol">721 </span> cd ../../../</span><br><span class="line"><span class="symbol">722 </span> ll</span><br><span class="line"><span class="symbol">723 </span> cd ..</span><br><span class="line"><span class="symbol">724 </span> cd </span><br><span class="line"><span class="symbol">725 </span> ll</span><br><span class="line"><span class="symbol">726 </span> <span class="keyword">clear</span></span><br><span class="line"><span class="symbol">727 </span> history </span><br><span class="line"><span class="symbol">728 </span> ll</span><br><span class="line"><span class="symbol">729 </span> cd docker/</span><br><span class="line"><span class="symbol">730 </span> ll</span><br><span class="line"><span class="symbol">731 </span> docker <span class="keyword">run</span> -d -p <span class="number">8080</span>:<span class="number">8080</span> springbootdemo4docker</span><br><span class="line"><span class="symbol">732 </span> <span class="keyword">clear</span></span><br><span class="line"><span class="symbol">733 </span>  docker build -t springbootdemo4docker .</span><br><span class="line"><span class="symbol">734 </span> ll</span><br><span class="line"><span class="symbol">735 </span> more Dockerfile </span><br><span class="line"><span class="symbol">736 </span> <span class="keyword">clear</span></span><br><span class="line"><span class="symbol">737 </span> ll</span><br><span class="line"><span class="symbol">738 </span> docker build -t springbootdemo5docker .</span><br><span class="line"><span class="symbol">739 </span> docker build -t springbootdemo4docker .</span><br><span class="line"><span class="symbol">740 </span> service docker restart</span><br><span class="line"><span class="symbol">741 </span> docker build -t springbootdemo5docker .</span><br><span class="line"><span class="symbol">742 </span> docker images</span><br><span class="line"><span class="symbol">743 </span> docker <span class="keyword">run</span> -d -p <span class="number">8080</span>:<span class="number">8080</span> springbootdemo5docker</span><br><span class="line"><span class="symbol">744 </span> docker rmi <span class="number">05</span>c655fd2bd6</span><br><span class="line"><span class="symbol">745 </span> ps -ef |grep java</span><br><span class="line"><span class="symbol">746 </span> <span class="keyword">kill</span> -<span class="number">9</span> <span class="number">2632</span></span><br><span class="line"><span class="symbol">747 </span> <span class="keyword">kill</span> -<span class="number">9</span> <span class="number">2874</span></span><br><span class="line"><span class="symbol">748 </span> <span class="keyword">clear</span></span><br><span class="line"><span class="symbol">749 </span> cd ..</span><br><span class="line"><span class="symbol">750 </span> ll</span><br><span class="line"><span class="symbol">751 </span> pwd</span><br><span class="line"><span class="symbol">752 </span> ll</span><br><span class="line"><span class="symbol">753 </span> rm -rf Mamai-<span class="number">1.0</span>-SNAPSHOT.jar </span><br><span class="line"><span class="symbol">754 </span> ll</span><br><span class="line"><span class="symbol">755 </span> <span class="keyword">clear</span></span><br><span class="line"><span class="symbol">756 </span> pwd</span><br><span class="line"><span class="symbol">757 </span> ll</span><br><span class="line"><span class="symbol">758 </span> cd docker/</span><br><span class="line"><span class="symbol">759 </span> ll</span><br><span class="line"><span class="symbol">760 </span> <span class="keyword">clear</span></span><br><span class="line"><span class="symbol">761 </span> ll</span><br><span class="line"><span class="symbol">762 </span> rm -rf Mamai-<span class="number">1.0</span>-SNAPSHOT.jar </span><br><span class="line"><span class="symbol">763 </span> <span class="keyword">clear</span></span><br><span class="line"><span class="symbol">764 </span> cp ../Mamai-<span class="number">1.0</span>-SNAPSHOT.jar  Mamai-<span class="number">1.0</span>-SNAPSHOT.jar</span><br><span class="line"><span class="symbol">765 </span> ll</span><br><span class="line"><span class="symbol">766 </span> <span class="keyword">clear</span></span><br><span class="line"><span class="symbol">767 </span> rm -rf Mamai-<span class="number">1.0</span>-SNAPSHOT.jar </span><br><span class="line"><span class="symbol">768 </span> cd ..</span><br><span class="line"><span class="symbol">769 </span> ll</span><br><span class="line"><span class="symbol">770 </span> cear</span><br><span class="line"><span class="symbol">771 </span> rm -rf Mamai-<span class="number">1.0</span>-SNAPSHOT.jar </span><br><span class="line"><span class="symbol">772 </span> ll</span><br><span class="line"><span class="symbol">773 </span> <span class="keyword">clear</span></span><br><span class="line"><span class="symbol">774 </span> ll</span><br><span class="line"><span class="symbol">775 </span> tail -<span class="number">300</span>f tempMaima.txt </span><br><span class="line"><span class="symbol">776 </span> <span class="keyword">clear</span></span><br><span class="line"><span class="symbol">777 </span> ll</span><br><span class="line"><span class="symbol">778 </span> cp Mamai-<span class="number">1.0</span>-SNAPSHOT.jar ./docker/</span><br><span class="line"><span class="symbol">779 </span> ll</span><br><span class="line"><span class="symbol">780 </span> cd docker/</span><br><span class="line"><span class="symbol">781 </span> ll</span><br><span class="line"><span class="symbol">782 </span> <span class="keyword">clear</span></span><br><span class="line"><span class="symbol">783 </span> docker images</span><br><span class="line"><span class="symbol">784 </span> docker start <span class="number">05</span>c655fd2bd6</span><br><span class="line"><span class="symbol">785 </span> <span class="keyword">clear</span></span><br><span class="line"><span class="symbol">786 </span> docker build -t springbootdemo6docker .</span><br><span class="line"><span class="symbol">787 </span> docker images</span><br><span class="line"><span class="symbol">788 </span> docker <span class="keyword">run</span> -d -p <span class="number">8080</span>:<span class="number">8080</span> springbootdemo6docker</span><br><span class="line"><span class="symbol">789 </span> docker images</span><br><span class="line"><span class="symbol">790 </span> ll</span><br><span class="line"><span class="symbol">791 </span> cd ..</span><br><span class="line"><span class="symbol">792 </span> ll</span><br><span class="line"><span class="symbol">793 </span> tail -<span class="number">300</span>f tempMaima.txt </span><br><span class="line"><span class="symbol">794 </span> <span class="keyword">clear</span></span><br><span class="line"><span class="symbol">795 </span> ll</span><br><span class="line"><span class="symbol">796 </span> cd docker/</span><br><span class="line"><span class="symbol">797 </span> docker images</span><br><span class="line"><span class="symbol">798 </span> docker rmi05c655fd2bd6</span><br><span class="line"><span class="symbol">799 </span> docker rmi <span class="number">05</span>c655fd2bd6</span><br><span class="line"><span class="symbol">800 </span> docker rmi springbootdemo4docker:latest </span><br><span class="line"><span class="symbol">801 </span> docker rmi -f <span class="number">05</span>c655fd2bd6</span><br><span class="line"><span class="symbol">802 </span> docker rmi springbootdemo5docker:latest</span><br><span class="line"><span class="symbol">803 </span> docker rmi -f <span class="number">05</span>c655fd2bd6</span><br><span class="line"><span class="symbol">804 </span> docker images</span><br><span class="line"><span class="symbol">805 </span> ls</span><br><span class="line"><span class="symbol">806 </span> Mamai-<span class="number">1.0</span>-SNAPSHOT.jar.sh <span class="keyword">stop</span></span><br><span class="line"><span class="symbol">807 </span> Mamai-<span class="number">1.0</span>-SNAPSHOT <span class="keyword">stop</span></span><br><span class="line"><span class="symbol">808 </span> Mamai-<span class="number">1.0</span>-SNAPSHOT.jar <span class="keyword">stop</span></span><br><span class="line"><span class="symbol">809 </span> top</span><br><span class="line"><span class="symbol">810 </span> ls</span><br><span class="line"><span class="symbol">811 </span> java -jar Mamai-<span class="number">1.0</span>-SNAPSHOT.jar </span><br><span class="line"><span class="symbol">812 </span> ls</span><br><span class="line"><span class="symbol">813 </span> ps -ef</span><br><span class="line"><span class="symbol">814 </span> ls</span><br><span class="line"><span class="symbol">815 </span> java -jar Mamai-<span class="number">1.0</span>-SNAPSHOT.jar</span><br><span class="line"><span class="symbol">816 </span> ls</span><br><span class="line"><span class="symbol">817 </span> java -jar Mamai-<span class="number">1.0</span>-SNAPSHOT.jar</span><br><span class="line"><span class="symbol">818 </span> ls</span><br><span class="line"><span class="symbol">819 </span> java -jar Mamai-<span class="number">1.0</span>-SNAPSHOT.jar</span><br><span class="line"><span class="symbol">820 </span> ll</span><br><span class="line"><span class="symbol">821 </span> tail -<span class="number">300</span>f tempMaima.txt </span><br><span class="line"><span class="symbol">822 </span> netstat -lnp|grep <span class="number">8080</span></span><br><span class="line"><span class="symbol">823 </span> <span class="keyword">clear</span></span><br><span class="line"><span class="symbol">824 </span> docker ps</span><br><span class="line"><span class="symbol">825 </span> ll</span><br><span class="line"><span class="symbol">826 </span> cd docker/</span><br><span class="line"><span class="symbol">827 </span> ll</span><br><span class="line"><span class="symbol">828 </span> <span class="keyword">clear</span></span><br><span class="line"><span class="symbol">829 </span> docker ps</span><br><span class="line"><span class="symbol">830 </span> <span class="keyword">clear</span></span><br><span class="line"><span class="symbol">831 </span> ps -ef |grep java</span><br><span class="line"><span class="symbol">832 </span> ps -ef |grep <span class="number">8080</span></span><br><span class="line"><span class="symbol">833 </span> <span class="keyword">clear</span></span><br><span class="line"><span class="symbol">834 </span> history </span><br><span class="line"><span class="symbol">835 </span> <span class="keyword">clear</span></span><br><span class="line"><span class="symbol">836 </span> cd /</span><br><span class="line"><span class="symbol">837 </span> ll</span><br><span class="line"><span class="symbol">838 </span> cd www/</span><br><span class="line"><span class="symbol">839 </span> ll</span><br><span class="line"><span class="symbol">840 </span> cd server/</span><br><span class="line"><span class="symbol">841 </span> ll</span><br><span class="line"><span class="symbol">842 </span> cd nginx/</span><br><span class="line"><span class="symbol">843 </span> ll</span><br><span class="line"><span class="symbol">844 </span> <span class="keyword">clear</span></span><br><span class="line"><span class="symbol">845 </span> ll</span><br><span class="line"><span class="symbol">846 </span> cd bin</span><br><span class="line"><span class="symbol">847 </span> ll</span><br><span class="line"><span class="symbol">848 </span> cd sbin/</span><br><span class="line"><span class="symbol">849 </span> ll</span><br><span class="line"><span class="symbol">850 </span> <span class="keyword">clear</span></span><br><span class="line"><span class="symbol">851 </span> ll</span><br><span class="line"><span class="symbol">852 </span> cd .</span><br><span class="line"><span class="symbol">853 </span> cd ..</span><br><span class="line"><span class="symbol">854 </span> cd conf/</span><br><span class="line"><span class="symbol">855 </span> ll</span><br><span class="line"><span class="symbol">856 </span> cd ..</span><br><span class="line"><span class="symbol">857 </span> cd sbin</span><br><span class="line"><span class="symbol">858 </span> ./nginx -c ../conf/nginx.conf</span><br><span class="line"><span class="symbol">859 </span> cd ../conf/</span><br><span class="line"><span class="symbol">860 </span> ll</span><br><span class="line"><span class="symbol">861 </span> <span class="keyword">clear</span></span><br><span class="line"><span class="symbol">862 </span> ../sbin/nginx -c nginx.conf</span><br><span class="line"><span class="symbol">863 </span> pwd</span><br><span class="line"><span class="symbol">864 </span> tail -<span class="number">300</span>f nginx.conf</span><br><span class="line"><span class="symbol">865 </span> <span class="keyword">clear</span></span><br><span class="line"><span class="symbol">866 </span> cd ..</span><br><span class="line"><span class="symbol">867 </span> cd sbin/</span><br><span class="line"><span class="symbol">868 </span> ./nginx  -s reload</span><br><span class="line"><span class="symbol">869 </span> ll</span><br><span class="line"><span class="symbol">870 </span> cd ..</span><br><span class="line"><span class="symbol">871 </span> ll</span><br><span class="line"><span class="symbol">872 </span> cd logs/</span><br><span class="line"><span class="symbol">873 </span> l</span><br><span class="line"><span class="symbol">874 </span> ll</span><br><span class="line"><span class="symbol">875 </span> tail -<span class="number">300</span>f <span class="keyword">error</span>.<span class="keyword">log</span> </span><br><span class="line"><span class="symbol">876 </span> <span class="keyword">clear</span></span><br><span class="line"><span class="symbol">877 </span> cd ..</span><br><span class="line"><span class="symbol">878 </span> ll</span><br><span class="line"><span class="symbol">879 </span> cd ..</span><br><span class="line"><span class="symbol">880 </span> cd </span><br><span class="line"><span class="symbol">881 </span> docker images</span><br><span class="line"><span class="symbol">882 </span> docker image ls</span><br><span class="line"><span class="symbol">883 </span> systemctl daemon-reload</span><br><span class="line"><span class="symbol">884 </span> docker images</span><br><span class="line"><span class="symbol">885 </span> service docker status</span><br><span class="line"><span class="symbol">886 </span> service docker start</span><br><span class="line"><span class="symbol">887 </span> systemctl  docker start</span><br><span class="line"><span class="symbol">888 </span> systemctl docker status</span><br><span class="line"><span class="symbol">889 </span> systemctl restart docker</span><br><span class="line"><span class="symbol">890 </span> systemctl status docker</span><br><span class="line"><span class="symbol">891 </span> docker ps</span><br><span class="line"><span class="symbol">892 </span> docker images</span><br><span class="line"><span class="symbol">893 </span> <span class="keyword">clear</span></span><br><span class="line"><span class="symbol">894 </span> docker images</span><br><span class="line"><span class="symbol">895 </span> docker ps -a</span><br><span class="line"><span class="symbol">896 </span> history </span><br><span class="line"><span class="symbol">897 </span> <span class="keyword">clear</span></span><br><span class="line"><span class="symbol">898 </span> docker images</span><br><span class="line"><span class="symbol">899 </span> docker ps</span><br><span class="line"><span class="symbol">900 </span> docker ps -a</span><br><span class="line"><span class="symbol">901 </span> docker start gifted_hamilton</span><br><span class="line"><span class="symbol">902 </span> docker ps</span><br><span class="line"><span class="symbol">903 </span> ll</span><br><span class="line"><span class="symbol">904 </span> tail -<span class="number">300</span>f tempMaima.txt </span><br><span class="line"><span class="symbol">905 </span> <span class="keyword">clear</span></span><br><span class="line"><span class="symbol">906 </span> history </span><br><span class="line"><span class="symbol">907 </span> ll</span><br><span class="line"><span class="symbol">908 </span> docker ps -a</span><br><span class="line"><span class="symbol">909 </span> docker <span class="keyword">stop</span> gifted_hamilton</span><br><span class="line"><span class="symbol">910 </span> pwd</span><br><span class="line"><span class="symbol">911 </span> ll</span><br><span class="line"><span class="symbol">912 </span> cd docker/</span><br><span class="line"><span class="symbol">913 </span> l</span><br><span class="line"><span class="symbol">914 </span> ll</span><br><span class="line"><span class="symbol">915 </span> <span class="keyword">clear</span></span><br><span class="line"><span class="symbol">916 </span> ll</span><br><span class="line"><span class="symbol">917 </span> rm -rf Mamai-<span class="number">1.0</span>-SNAPSHOT.jar </span><br><span class="line"><span class="symbol">918 </span> ll</span><br><span class="line"><span class="symbol">919 </span> <span class="keyword">clear</span></span><br><span class="line"><span class="symbol">920 </span> pwd</span><br><span class="line"><span class="symbol">921 </span> docker ps -a</span><br><span class="line"><span class="symbol">922 </span> ll</span><br><span class="line"><span class="symbol">923 </span> docker start gifted_hamilton</span><br><span class="line"><span class="symbol">924 </span> docker ps -a</span><br><span class="line"><span class="symbol">925 </span> ps -ef |grep java</span><br><span class="line"><span class="symbol">926 </span> ll</span><br><span class="line"><span class="symbol">927 </span> docker ps -a</span><br><span class="line"><span class="symbol">928 </span> docker <span class="keyword">stop</span> gifted_hamilton</span><br><span class="line"><span class="symbol">929 </span> cd docker/</span><br><span class="line"><span class="symbol">930 </span> ll</span><br><span class="line"><span class="symbol">931 </span> rm -rf Mamai-<span class="number">1.0</span>-SNAPSHOT.jar </span><br><span class="line"><span class="symbol">932 </span> ll</span><br><span class="line"><span class="symbol">933 </span> pwd</span><br><span class="line"><span class="symbol">934 </span> ll</span><br><span class="line"><span class="symbol">935 </span> <span class="keyword">clear</span></span><br><span class="line"><span class="symbol">936 </span> docker ps -a</span><br><span class="line"><span class="symbol">937 </span> docker start gifted_hamilton</span><br><span class="line"><span class="symbol">938 </span> docker ps -a</span><br><span class="line"><span class="symbol">939 </span> docker <span class="keyword">stop</span> gifted_hamilton</span><br><span class="line"><span class="symbol">940 </span> docker ps -a</span><br><span class="line"><span class="symbol">941 </span> <span class="keyword">clear</span></span><br><span class="line"><span class="symbol">942 </span> docker ps -a</span><br><span class="line"><span class="symbol">943 </span> docker rm gifted_hamilton</span><br><span class="line"><span class="symbol">944 </span> docker ps -a</span><br><span class="line"><span class="symbol">945 </span> docker images</span><br><span class="line"><span class="symbol">946 </span> docker rmi springbootdemo6docker</span><br><span class="line"><span class="symbol">947 </span> docker iamges</span><br><span class="line"><span class="symbol">948 </span> docker images</span><br><span class="line"><span class="symbol">949 </span> <span class="keyword">clear</span></span><br><span class="line"><span class="symbol">950 </span> ll</span><br><span class="line"><span class="symbol">951 </span> more Dockerfile </span><br><span class="line"><span class="symbol">952 </span> <span class="keyword">clear</span></span><br><span class="line"><span class="symbol">953 </span> docker build -t mamai .</span><br><span class="line"><span class="symbol">954 </span> docker images</span><br><span class="line"><span class="symbol">955 </span> cd ..</span><br><span class="line"><span class="symbol">956 </span> ll</span><br><span class="line"><span class="symbol">957 </span> cd docker/</span><br><span class="line"><span class="symbol">958 </span> ll</span><br><span class="line"><span class="symbol">959 </span> <span class="keyword">clear</span></span><br><span class="line"><span class="symbol">960 </span> more Dockerfile </span><br><span class="line"><span class="symbol">961 </span> docker <span class="keyword">run</span> -d -p <span class="number">8080</span>:<span class="number">8080</span> mamai</span><br><span class="line"><span class="symbol">962 </span> docker ps -a</span><br><span class="line"><span class="symbol">963 </span> <span class="keyword">clear</span></span><br><span class="line"><span class="symbol">964 </span> ll</span><br><span class="line"><span class="symbol">965 </span> cd .</span><br><span class="line"><span class="symbol">966 </span> c d..</span><br><span class="line"><span class="symbol">967 </span> cd ..</span><br><span class="line"><span class="symbol">968 </span> <span class="keyword">clear</span></span><br><span class="line"><span class="symbol">969 </span> ll</span><br><span class="line"><span class="symbol">970 </span> rm -rf Ma</span><br><span class="line"><span class="symbol">971 </span> rm -rf Mamai-<span class="number">1.0</span>-SNAPSHOT.jar </span><br><span class="line"><span class="symbol">972 </span> ll</span><br><span class="line"><span class="symbol">973 </span> <span class="keyword">clear</span></span><br><span class="line"><span class="symbol">974 </span> ll</span><br><span class="line"><span class="symbol">975 </span> rm -rf apache-tomcat-<span class="number">8.0.23</span></span><br><span class="line"><span class="symbol">976 </span> rm -rf apache-tomcat-<span class="number">8.0.23.</span>tar.gz </span><br><span class="line"><span class="symbol">977 </span> <span class="keyword">clear</span></span><br><span class="line"><span class="symbol">978 </span> ll</span><br><span class="line"><span class="symbol">979 </span> more install.sh </span><br><span class="line"><span class="symbol">980 </span> <span class="keyword">clear</span></span><br><span class="line"><span class="symbol">981 </span> docker ps -a</span><br><span class="line"><span class="symbol">982 </span> docker <span class="keyword">stop</span> agitated_brown</span><br><span class="line"><span class="symbol">983 </span> ll</span><br><span class="line"><span class="symbol">984 </span> cd docker/</span><br><span class="line"><span class="symbol">985 </span> ll</span><br><span class="line"><span class="symbol">986 </span> rm -rf Mamai-<span class="number">1.0</span>-SNAPSHOT.jar </span><br><span class="line"><span class="symbol">987 </span> ll</span><br><span class="line"><span class="symbol">988 </span> docker  images</span><br><span class="line"><span class="symbol">989 </span> docker ps -a</span><br><span class="line"><span class="symbol">990 </span> docker start agitated_brown</span><br><span class="line"><span class="symbol">991 </span> docker ps -a</span><br><span class="line"><span class="symbol">992 </span> top</span><br><span class="line"><span class="symbol">993 </span> df -h</span><br><span class="line"><span class="symbol">994 </span> top</span><br><span class="line"><span class="symbol">995 </span> ll</span><br><span class="line"><span class="symbol">996 </span> cd docker/</span><br><span class="line"><span class="symbol">997 </span> ll</span><br><span class="line"><span class="symbol">998 </span> more Dockerfile </span><br><span class="line"><span class="symbol">999 </span> history</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;需求内容&quot;&gt;&lt;a href=&quot;#需求内容&quot; class=&quot;headerlink&quot; title=&quot;需求内容&quot;&gt;&lt;/a&gt;需求内容&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/fengshana/Mamai&quot; target=&quot;_blank&quot; r
      
    
    </summary>
    
    
      <category term="前端" scheme="https://fengshana.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="javaScript" scheme="https://fengshana.github.io/tags/javaScript/"/>
    
      <category term="docker" scheme="https://fengshana.github.io/tags/docker/"/>
    
      <category term="前端" scheme="https://fengshana.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="双色球" scheme="https://fengshana.github.io/tags/%E5%8F%8C%E8%89%B2%E7%90%83/"/>
    
  </entry>
  
  <entry>
    <title>MySql-存储过程</title>
    <link href="https://fengshana.github.io/2020/04/15/%E9%A2%86%E8%B5%AB/%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B/"/>
    <id>https://fengshana.github.io/2020/04/15/%E9%A2%86%E8%B5%AB/%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B/</id>
    <published>2020-04-14T17:48:49.428Z</published>
    <updated>2020-04-15T13:22:55.765Z</updated>
    
    <content type="html"><![CDATA[<h2 id="记录"><a href="#记录" class="headerlink" title="记录"></a>记录</h2><p>在领赫这个项目当中，方便敏捷式开发的存储过程pojo-model层以及mapper的编写。  </p><h3 id="david指导"><a href="#david指导" class="headerlink" title="david指导"></a>david指导</h3><ul><li>那个存储过程等你有时间你得优化一下，不要名字全是sqlxJava，至少也要说明摸个存储过程是干嘛用的，不然后期很难维护，过几天你自己都忘了哪个 是干嘛用的。</li><li>如果业务不熟很复杂，还是少用存储过程，不利于维护。</li><li>写存储过程也可以，但是不要搞复杂了，你之前获取产品列表那个存储过程，我感觉你搞复杂了。</li><li>我们这业务不存在复杂的计算，基本上关联几张表就能查出数据。如果存在复杂的业务计算的时候存储过程才能发挥他额作用</li><li>存储过程可以用，尽力做好备注</li><li>两种方式都可以。你那个存储过程那个可以优化一下，通过临时表传递两个存储过程之间的数据不是很好的方式。临时表最好在一个存储过程中使用，不要夸多个存储过程。</li></ul><p>其实我能说我不会写复杂的sql所以写了存储过程吗？(<em>/ω＼</em>)<br>害  </p><h3 id="拼接列的名称"><a href="#拼接列的名称" class="headerlink" title="拼接列的名称"></a>拼接列的名称</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> DEFINER=<span class="string">`admin`</span>@<span class="string">`%`</span> <span class="keyword">PROCEDURE</span> <span class="string">`concatColume`</span>(<span class="keyword">in</span> t_name <span class="built_in">char</span>(<span class="number">30</span>))</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">select</span></span><br><span class="line"><span class="keyword">GROUP_CONCAT</span>(</span><br><span class="line">column_name</span><br><span class="line">) <span class="keyword">as</span> <span class="keyword">java</span></span><br><span class="line"><span class="keyword">from</span></span><br><span class="line">information_schema. <span class="keyword">columns</span></span><br><span class="line"><span class="keyword">where</span></span><br><span class="line">table_name = t_name;</span><br><span class="line"><span class="keyword">select</span></span><br><span class="line"><span class="keyword">GROUP_CONCAT</span>(</span><br><span class="line"><span class="keyword">CONCAT</span>(<span class="string">'#&#123;'</span>,column_name,<span class="string">'&#125;#'</span>)</span><br><span class="line">) <span class="keyword">as</span> <span class="keyword">java</span></span><br><span class="line"><span class="keyword">from</span></span><br><span class="line">information_schema. <span class="keyword">columns</span></span><br><span class="line"><span class="keyword">where</span></span><br><span class="line">table_name = t_name;</span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h3 id="通过逗号分隔字段取值"><a href="#通过逗号分隔字段取值" class="headerlink" title="通过逗号分隔字段取值"></a>通过逗号分隔字段取值</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DEFINER</span>=`<span class="keyword">admin</span>`@`%` <span class="keyword">PROCEDURE</span> `fieldValue_split_by_comma`(<span class="keyword">in</span> splitContent <span class="type">varchar</span>(<span class="number">255</span>))</span><br><span class="line"><span class="keyword">BEGIN</span> <span class="comment">-- 原来的procedure - sql9java,现在改名为 field_split_by_comma</span></span><br><span class="line">   <span class="keyword">DECLARE</span> n   <span class="type">int</span>  <span class="keyword">DEFAULT</span> <span class="number">0</span>; <span class="comment">-- 特殊字符总个数</span></span><br><span class="line"> <span class="keyword">DECLARE</span> test_n   <span class="type">int</span>  <span class="keyword">DEFAULT</span> <span class="number">0</span>; <span class="comment">-- 特殊字符总个数</span></span><br><span class="line"> <span class="keyword">DECLARE</span> i   <span class="type">int</span>  <span class="keyword">DEFAULT</span> <span class="number">0</span>; <span class="comment">-- 循环变量</span></span><br><span class="line"> <span class="keyword">DECLARE</span> ind <span class="type">int</span>  <span class="keyword">DEFAULT</span> <span class="number">0</span>; <span class="comment">-- 得到特殊字符的下标</span></span><br><span class="line"> <span class="keyword">DECLARE</span> left_str  <span class="type">varchar</span>(<span class="number">30</span>); <span class="comment">-- 左边的字符串</span></span><br><span class="line"> <span class="keyword">DECLARE</span> str_value <span class="type">varchar</span>(<span class="number">30</span>); <span class="comment">-- value变量</span></span><br><span class="line"> <span class="keyword">DECLARE</span> str       <span class="type">varchar</span>(<span class="number">255</span>); <span class="comment">-- 用于拼接的变量</span></span><br><span class="line"> <span class="keyword">create</span> <span class="keyword">temporary</span> <span class="keyword">table</span> <span class="keyword">if</span> <span class="keyword">not</span> <span class="keyword">exists</span> tmp_sql5java(num <span class="type">int</span>,s_id <span class="type">varchar</span>(<span class="number">255</span>));</span><br><span class="line"> <span class="keyword">delete</span> <span class="keyword">from</span> tmp_sql5java;<span class="comment">-- 将拆分出来的那个供应商编号新增入该表</span></span><br><span class="line"> <span class="keyword">SET</span> i = <span class="number">1</span>;</span><br><span class="line"> <span class="keyword">SET</span> str = splitContent;</span><br><span class="line"> <span class="keyword">SET</span> n = length(str)-length(REPLACE(str,",",""))+<span class="number">1</span>; <span class="comment">-- 总共有多少次需要进行替换以及大小写变化</span></span><br><span class="line"> <span class="keyword">SET</span> max_sp_recursion_depth = <span class="number">3000</span>;</span><br><span class="line">    <span class="keyword">WHILE</span> i &lt;= n <span class="keyword">DO</span> </span><br><span class="line">    <span class="keyword">SET</span> ind = LENGTH(SUBSTRING_INDEX(str,<span class="string">','</span>,i)); <span class="comment">-- 特殊字符的下标</span></span><br><span class="line">  <span class="keyword">SET</span> left_str = SUBSTRING_INDEX(str,<span class="string">','</span>,i); <span class="comment">-- 特殊字符左边的字符串</span></span><br><span class="line"><span class="keyword">SET</span> test_n =  LENGTH(SUBSTRING_INDEX(left_str,<span class="string">','</span>,i)); <span class="comment">-- 查看截取了的内容是否还有特殊字符</span></span><br><span class="line"><span class="keyword">if</span>(test_n&lt;<span class="number">0</span>) <span class="keyword">then</span></span><br><span class="line"><span class="keyword">SET</span> str_value = left_str;</span><br><span class="line"><span class="keyword">else</span>   </span><br><span class="line"><span class="keyword">SET</span> str_value = SUBSTRING_INDEX(left_str,<span class="string">','</span>,<span class="number">-1</span>);</span><br><span class="line"><span class="keyword">end</span> <span class="keyword">if</span>;</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tmp_sql5java <span class="keyword">values</span>(i,str_value);</span><br><span class="line"><span class="keyword">SET</span> i = i+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">END</span> <span class="keyword">WHILE</span>;</span><br><span class="line"><span class="keyword">END</span></span><br></pre></td></tr></table></figure><h3 id="生成基本的-Mapper-映射"><a href="#生成基本的-Mapper-映射" class="headerlink" title="生成基本的 Mapper 映射"></a>生成基本的 Mapper 映射</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DEFINER</span>=`<span class="keyword">admin</span>`@`%` <span class="keyword">PROCEDURE</span> `generate_base_mapper`(<span class="keyword">in</span> t_name <span class="type">char</span>(<span class="number">255</span>))</span><br><span class="line"><span class="keyword">BEGIN</span>  <span class="comment">-- 原来的 procedure - sql6java,现在改名为 generate_base_mapper</span></span><br><span class="line"><span class="comment">-- t_name 即table_name 上送参数为表名称</span></span><br><span class="line"><span class="keyword">DECLARE</span> columnName <span class="type">varchar</span>(<span class="number">5000</span>);         <span class="comment">-- 原型字段名称</span></span><br><span class="line"><span class="keyword">DECLARE</span> property <span class="type">varchar</span>(<span class="number">255</span>);           <span class="comment">-- 大小写驼峰字段名称</span></span><br><span class="line"><span class="keyword">DECLARE</span> mapper <span class="type">varchar</span>(<span class="number">255</span>);             <span class="comment">-- 表映射名称</span></span><br><span class="line"><span class="keyword">DECLARE</span> <span class="keyword">class</span> <span class="type">varchar</span>(<span class="number">255</span>);              <span class="comment">-- 类名称</span></span><br><span class="line"><span class="keyword">DECLARE</span> varClass <span class="type">varchar</span>(<span class="number">255</span>);           <span class="comment">-- 变量类名称</span></span><br><span class="line"><span class="keyword">DECLARE</span> str text(<span class="number">50000</span>);               <span class="comment">-- 字符串变量</span></span><br><span class="line"><span class="keyword">DECLARE</span> columnsStr <span class="type">varchar</span>(<span class="number">5000</span>);                <span class="comment">-- 列字符串变量</span></span><br><span class="line"><span class="keyword">DECLARE</span> insertColumnsStr <span class="type">varchar</span>(<span class="number">5000</span>);                <span class="comment">-- 列字符串变量</span></span><br><span class="line"><span class="keyword">DECLARE</span> propertyStr <span class="type">varchar</span>(<span class="number">5000</span>);               <span class="comment">-- 属性字符串变量</span></span><br><span class="line"><span class="keyword">DECLARE</span> columnPropertyStr <span class="type">varchar</span>(<span class="number">5000</span>); <span class="comment">-- 列属性字符串变量</span></span><br><span class="line"><span class="keyword">DECLARE</span> findByIdStr <span class="type">varchar</span>(<span class="number">5000</span>);       <span class="comment">-- 通过主键查找对象方法</span></span><br><span class="line"><span class="keyword">DECLARE</span> insertRecord <span class="type">varchar</span>(<span class="number">5000</span>);      <span class="comment">-- 新增记录</span></span><br><span class="line"><span class="keyword">DECLARE</span> selectCount <span class="type">varchar</span>(<span class="number">5000</span>);      <span class="comment">-- 新增记录</span></span><br><span class="line"><span class="keyword">DECLARE</span> findAll <span class="type">varchar</span>(<span class="number">5000</span>);      <span class="comment">-- 新增记录</span></span><br><span class="line"><span class="keyword">DECLARE</span> head <span class="type">varchar</span>(<span class="number">5000</span>);              <span class="comment">-- 新增记录</span></span><br><span class="line"><span class="keyword">DECLARE</span> resultMapper text(<span class="number">10000</span>);             <span class="comment">-- 新增记录</span></span><br><span class="line"><span class="keyword">DECLARE</span> n  <span class="type">int</span>  <span class="keyword">DEFAULT</span> <span class="number">0</span> ;             <span class="comment">-- 总共的字段数</span></span><br><span class="line"><span class="keyword">DECLARE</span> i  <span class="type">int</span>  <span class="keyword">DEFAULT</span> <span class="number">0</span>;              <span class="comment">-- 循环时的变量</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">temporary</span> <span class="keyword">table</span> <span class="keyword">if</span> <span class="keyword">not</span> <span class="keyword">exists</span> tmp_sql2java(property_name <span class="type">varchar</span>(<span class="number">255</span>));</span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> tmp_sql2java;</span><br><span class="line"><span class="keyword">SET</span> i = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">SET</span> str = <span class="string">''</span>;</span><br><span class="line"><span class="keyword">SET</span> columnsStr = <span class="string">''</span>;</span><br><span class="line"><span class="keyword">SET</span> insertColumnsStr = <span class="string">''</span>;</span><br><span class="line"><span class="keyword">SET</span> propertyStr = <span class="string">''</span>;</span><br><span class="line"><span class="keyword">SET</span> columnPropertyStr = <span class="string">''</span>;</span><br><span class="line"><span class="keyword">SET</span> findByIdStr = <span class="string">''</span>;</span><br><span class="line"><span class="keyword">SET</span> insertRecord = <span class="string">''</span>;</span><br><span class="line"><span class="keyword">SET</span> selectCount =<span class="string">''</span>;      <span class="comment">-- 新增记录</span></span><br><span class="line"><span class="keyword">SET</span> findAll =<span class="string">''</span>;</span><br><span class="line"><span class="keyword">SET</span> property = <span class="string">''</span>;</span><br><span class="line"><span class="keyword">SET</span> mapper = <span class="string">''</span>;</span><br><span class="line"><span class="keyword">SET</span> <span class="keyword">class</span> = <span class="string">''</span>;</span><br><span class="line"><span class="keyword">SET</span> varClass = <span class="string">''</span>;</span><br><span class="line"><span class="keyword">SET</span> resultMapper = <span class="string">''</span>;</span><br><span class="line"><span class="keyword">CALL</span> generate_class_mapperClass_name(t_name,<span class="string">'Mapper'</span>,@mapperName);       <span class="comment">-- 通过表名称获取得到Mapper类名称</span></span><br><span class="line"><span class="keyword">CALL</span> generate_class_mapperClass_name(t_name,<span class="string">''</span>,@className);  <span class="comment">-- 通过表名称获取得到Model类名称</span></span><br><span class="line"><span class="keyword">SET</span> mapper = @mapperName;</span><br><span class="line"><span class="keyword">SET</span> <span class="keyword">class</span> = @className;</span><br><span class="line"><span class="keyword">SET</span> head = CONCAT(</span><br><span class="line"><span class="string">'&lt;?xml version="1.0" encoding="UTF-8"?&gt;\n'</span>,</span><br><span class="line"><span class="string">'&lt;!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;\n'</span>,</span><br><span class="line"><span class="string">'&lt;mapper namespace="com.yourshares.entity.dao.'</span>,</span><br><span class="line">mapper,</span><br><span class="line"><span class="string">'"&gt;\n'</span>,</span><br><span class="line"><span class="string">'&lt;resultMap id="BaseResultMap" type="com.yourshares.entity.model.'</span>,</span><br><span class="line"><span class="keyword">class</span>,</span><br><span class="line"><span class="string">'"&gt;\n'</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">select</span> COUNT(*) <span class="keyword">into</span> n <span class="keyword">from</span> information_schema.<span class="keyword">columns</span> <span class="keyword">where</span> <span class="built_in">table_name</span> = t_name; <span class="comment">-- 总共的字段</span></span><br><span class="line"><span class="keyword">WHILE</span> i &lt;= n <span class="keyword">DO</span>                           <span class="comment">-- 循环</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">column_name</span> <span class="keyword">into</span> columnName <span class="keyword">from</span> information_schema.`<span class="keyword">columns</span>` <span class="keyword">where</span> <span class="built_in">table_name</span> = t_name <span class="keyword">and</span> ordinal_position=i;</span><br><span class="line"><span class="keyword">CALL</span> generate_property_name(columnName,@propertyName);    <span class="comment">-- 通过表字段获取得到属性名称</span></span><br><span class="line"><span class="keyword">SET</span>  property = @propertyName;              <span class="comment">-- 赋值</span></span><br><span class="line"><span class="keyword">CALL</span> generate_class_mapperClass_name(columnName,<span class="string">'Mapper'</span>,@varClassName);</span><br><span class="line"><span class="keyword">SET</span>  varClass = @varClassName;</span><br><span class="line"><span class="keyword">select</span> </span><br><span class="line">CONCAT(</span><br><span class="line">columnPropertyStr,</span><br><span class="line"><span class="keyword">case</span></span><br><span class="line"><span class="keyword">when</span> column_key <span class="keyword">in</span> (<span class="string">'PRI'</span>) <span class="keyword">then</span>  <span class="string">'&lt;id column="'</span> </span><br><span class="line"><span class="keyword">when</span> column_key <span class="keyword">not</span> <span class="keyword">in</span>  (<span class="string">'PRI'</span>,<span class="string">'MUL'</span>)   <span class="keyword">then</span>  <span class="string">'&lt;result column="'</span></span><br><span class="line"><span class="keyword">when</span> column_key <span class="keyword">in</span> (<span class="string">'MUL'</span>) <span class="keyword">then</span>  <span class="string">'&lt;association column="'</span></span><br><span class="line"><span class="keyword">end</span>,</span><br><span class="line"><span class="built_in">column_name</span>,</span><br><span class="line">CONCAT(<span class="string">'" property="'</span>, property, <span class="string">'"  '</span>),</span><br><span class="line"><span class="keyword">case</span></span><br><span class="line"><span class="keyword">when</span> column_key <span class="keyword">in</span> (<span class="string">'PRI'</span>) <span class="keyword">then</span> </span><br><span class="line">CONCAT(</span><br><span class="line"><span class="string">'jdbcType="'</span> ,</span><br><span class="line"><span class="keyword">case</span></span><br><span class="line"><span class="keyword">when</span> data_type <span class="keyword">in</span> (<span class="string">'int'</span>,<span class="string">'smallint'</span>) <span class="keyword">then</span> <span class="string">'INTEGER'</span></span><br><span class="line"><span class="keyword">else</span> UPPER(data_type)</span><br><span class="line"><span class="keyword">end</span>,</span><br><span class="line"><span class="string">'"  /&gt;\n'</span></span><br><span class="line">)</span><br><span class="line">  <span class="keyword">when</span> column_key <span class="keyword">not</span> <span class="keyword">in</span> (<span class="string">'PRI'</span>,<span class="string">'MUL'</span>) <span class="keyword">then</span> </span><br><span class="line">CONCAT(</span><br><span class="line"><span class="string">'jdbcType="'</span> ,</span><br><span class="line"><span class="keyword">case</span></span><br><span class="line"><span class="keyword">when</span> data_type <span class="keyword">in</span> (<span class="string">'int'</span>,<span class="string">'smallint'</span>) <span class="keyword">then</span> <span class="string">'INTEGER'</span></span><br><span class="line"><span class="keyword">else</span> UPPER(data_type)</span><br><span class="line"><span class="keyword">end</span>,</span><br><span class="line"><span class="string">'"  /&gt;\n'</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">when</span> column_key <span class="keyword">in</span> (<span class="string">'MUL'</span>) <span class="keyword">then</span> </span><br><span class="line">CONCAT(</span><br><span class="line"><span class="string">'select="com.yourshares.entity.dao.'</span>,</span><br><span class="line">@varClassName,</span><br><span class="line"><span class="string">'.findById"&gt;&lt;/association&gt;\n'</span></span><br><span class="line">)</span><br><span class="line"><span class="keyword">else</span> <span class="string">''</span></span><br><span class="line"><span class="keyword">end</span></span><br><span class="line">) <span class="keyword">into</span> columnPropertyStr </span><br><span class="line"><span class="keyword">from</span></span><br><span class="line">information_schema.<span class="keyword">columns</span></span><br><span class="line"><span class="keyword">where</span></span><br><span class="line"><span class="built_in">table_name</span> = t_name <span class="keyword">and</span> ordinal_position=i;</span><br><span class="line"></span><br><span class="line"><span class="keyword">SET</span> str = CONCAT(str,columnPropertyStr); <span class="comment">-- 拼接resultMap节点当中的子节点</span></span><br><span class="line"><span class="keyword">select</span> CONCAT(columnsStr,<span class="string">'a.'</span>,<span class="built_in">column_name</span>,<span class="string">','</span>) <span class="keyword">into</span> columnsStr <span class="keyword">from</span>  information_schema.<span class="keyword">columns</span> <span class="keyword">where</span> <span class="built_in">table_name</span> = t_name <span class="keyword">and</span> ordinal_position=i; <span class="comment">-- 所有字段列</span></span><br><span class="line"><span class="keyword">select</span> CONCAT(insertColumnsStr,<span class="built_in">column_name</span>,<span class="string">','</span>) <span class="keyword">into</span> insertColumnsStr <span class="keyword">from</span>  information_schema.<span class="keyword">columns</span> <span class="keyword">where</span> <span class="built_in">table_name</span> = t_name <span class="keyword">and</span> ordinal_position=i; <span class="comment">-- 所有字段列</span></span><br><span class="line"><span class="keyword">select</span> CONCAT(propertyStr,<span class="string">'#&#123;'</span>,property,<span class="string">'&#125;,'</span>) <span class="keyword">into</span> propertyStr <span class="keyword">from</span>  information_schema.<span class="keyword">columns</span> <span class="keyword">where</span> <span class="built_in">table_name</span> = t_name <span class="keyword">and</span> ordinal_position=i; <span class="comment">-- 所有属性列</span></span><br><span class="line"><span class="keyword">SET</span> i = i+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">END</span> <span class="keyword">WHILE</span>; </span><br><span class="line"><span class="keyword">SET</span> columnsStr = SUBSTRING(columnsStr,<span class="number">1</span>,LENGTH(columnsStr)<span class="number">-1</span>);</span><br><span class="line"><span class="keyword">SET</span> propertyStr = SUBSTRING(propertyStr,<span class="number">1</span>,LENGTH(propertyStr)<span class="number">-1</span>);</span><br><span class="line"><span class="keyword">SET</span> findByIdStr = CONCAT(</span><br><span class="line"><span class="string">'&lt;select id="findById" parameterType="java.lang.Integer" resultMap="BaseResultMap"&gt;\n'</span>,</span><br><span class="line"><span class="string">'select '</span>, columnsStr, <span class="string">' from '</span>, t_name, <span class="string">' a where a.id=#&#123;value&#125; \n'</span>,</span><br><span class="line"><span class="string">'&lt;/select&gt;\n'</span></span><br><span class="line">);  <span class="comment">-- 查询语句</span></span><br><span class="line"><span class="keyword">SET</span> insertRecord = CONCAT(</span><br><span class="line"><span class="string">'&lt;insert id="insertRecord" parameterType="com.yourshares.entity.model.'</span>, <span class="keyword">class</span>, <span class="string">'"&gt;\n'</span>,</span><br><span class="line"><span class="string">' insert into '</span>,t_name, <span class="string">'\n'</span>,<span class="string">'('</span>,insertColumnsStr,<span class="string">')\n'</span>, <span class="string">'values\n'</span>, <span class="string">'('</span>,propertyStr,<span class="string">')\n'</span>,</span><br><span class="line"><span class="string">'&lt;/insert&gt;\n'</span></span><br><span class="line">);  <span class="comment">-- 新增语句</span></span><br><span class="line"><span class="keyword">SET</span> selectCount = CONCAT(</span><br><span class="line"><span class="string">''</span>,<span class="string">''</span>,<span class="string">''</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">SET</span> selectCount = CONCAT(</span><br><span class="line"><span class="string">''</span>,<span class="string">''</span>,<span class="string">''</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">SET</span> resultMapper = CONCAT(</span><br><span class="line">head,</span><br><span class="line">columnPropertyStr,</span><br><span class="line"><span class="string">'&lt;/resultMap&gt;\n'</span>,</span><br><span class="line">findByIdStr,</span><br><span class="line">insertRecord,</span><br><span class="line">    <span class="string">'&lt;/mapper&gt;'</span></span><br><span class="line">);</span><br><span class="line"><span class="keyword">select</span> resultMapper;</span><br><span class="line"><span class="keyword">END</span></span><br></pre></td></tr></table></figure><h3 id="生成类的名称，以及映射类的名称"><a href="#生成类的名称，以及映射类的名称" class="headerlink" title="生成类的名称，以及映射类的名称"></a>生成类的名称，以及映射类的名称</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DEFINER</span>=`<span class="keyword">admin</span>`@`%` <span class="keyword">PROCEDURE</span> `generate_class_mapperClass_name`(<span class="keyword">in</span> t_name <span class="type">varchar</span>(<span class="number">255</span>),<span class="keyword">in</span> split_joint_str <span class="type">varchar</span>(<span class="number">255</span>), <span class="keyword">out</span> property_name <span class="type">varchar</span>(<span class="number">255</span>))</span><br><span class="line"><span class="keyword">BEGIN</span> <span class="comment">-- 原来的 procedure - sql5java,现在改名为  generate_class_mapperClass_name,用于生成类名称或者是映射类的名称</span></span><br><span class="line">   <span class="keyword">DECLARE</span> n   <span class="type">int</span>  <span class="keyword">DEFAULT</span> <span class="number">0</span>; <span class="comment">-- 特殊字符总个数</span></span><br><span class="line"> <span class="keyword">DECLARE</span> i   <span class="type">int</span>  <span class="keyword">DEFAULT</span> <span class="number">0</span>; <span class="comment">-- 循环变量</span></span><br><span class="line"> <span class="keyword">DECLARE</span> ind <span class="type">int</span>  <span class="keyword">DEFAULT</span> <span class="number">0</span>; <span class="comment">-- 得到特殊字符的下标</span></span><br><span class="line"> <span class="keyword">DECLARE</span> left_str  <span class="type">varchar</span>(<span class="number">255</span>); <span class="comment">-- 左边的字符串</span></span><br><span class="line"> <span class="keyword">DECLARE</span> right_str <span class="type">varchar</span>(<span class="number">255</span>); <span class="comment">-- 右边的字符串</span></span><br><span class="line"> <span class="keyword">DECLARE</span> midd_char <span class="type">varchar</span>(<span class="number">255</span>); <span class="comment">-- 中间的那个需要修改的字符</span></span><br><span class="line"> <span class="keyword">DECLARE</span> str       <span class="type">varchar</span>(<span class="number">1024</span>); <span class="comment">-- 用于拼接的变量</span></span><br><span class="line"> <span class="keyword">DECLARE</span> first_str <span class="type">varchar</span>(<span class="number">255</span>); <span class="comment">-- 第一个字符</span></span><br><span class="line"> <span class="keyword">DECLARE</span> join_str  <span class="type">varchar</span>(<span class="number">255</span>); <span class="comment">-- 拼接进来的字符串</span></span><br><span class="line"> <span class="keyword">SET</span> i = <span class="number">1</span>;</span><br><span class="line"> <span class="keyword">SET</span> str = t_name;</span><br><span class="line"> <span class="keyword">SET</span> join_str = split_joint_str;</span><br><span class="line"> <span class="keyword">SET</span> n = length(str)-length(REPLACE(str,"_",""))+<span class="number">1</span>; <span class="comment">-- 总共有多少次需要进行替换以及大小写变化</span></span><br><span class="line">    <span class="keyword">WHILE</span> i &lt; n <span class="keyword">DO</span> </span><br><span class="line">    <span class="keyword">SET</span> ind = LENGTH(SUBSTRING_INDEX(str,<span class="string">'_'</span>,i)); <span class="comment">-- 特殊字符的下标</span></span><br><span class="line">  <span class="keyword">SET</span> left_str = CONCAT(SUBSTRING_INDEX(str,<span class="string">'_'</span>,i),<span class="string">'_'</span>); <span class="comment">-- 特殊字符左边的字符串</span></span><br><span class="line"><span class="keyword">SET</span> right_str = </span><br><span class="line">SUBSTRING(SUBSTRING_INDEX(str,<span class="string">'_'</span>,i-(n)),<span class="number">2</span>,LENGTH(SUBSTRING_INDEX(str,<span class="string">'_'</span>,i-(n)))); <span class="comment">-- 特殊字符右边的字符串</span></span><br><span class="line"><span class="keyword">SET</span> midd_char = UPPER(SUBSTRING(SUBSTRING_INDEX(str,<span class="string">'_'</span>,i-(n)),<span class="number">1</span>,<span class="number">1</span>)); <span class="comment">-- 需要变化成大写的字符</span></span><br><span class="line"><span class="keyword">SET</span> str = concat(left_str,midd_char,right_str); <span class="comment">-- 对str字符串变量进行重新赋值</span></span><br><span class="line"><span class="keyword">SET</span> i = i+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">END</span> <span class="keyword">WHILE</span>;</span><br><span class="line"><span class="keyword">SET</span> first_str = UPPER(SUBSTRING(str,<span class="number">1</span>,<span class="number">1</span>));</span><br><span class="line"><span class="keyword">SET</span> str = SUBSTRING(REPLACE(str,"_",""),<span class="number">2</span>);</span><br><span class="line"><span class="keyword">SET</span> property_name = CONCAT(first_str,str,join_str);</span><br><span class="line"><span class="keyword">END</span></span><br></pre></td></tr></table></figure><h3 id="生成模型层model层的属性-区分大小写"><a href="#生成模型层model层的属性-区分大小写" class="headerlink" title="生成模型层model层的属性,区分大小写"></a>生成模型层model层的属性,区分大小写</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DEFINER</span>=`<span class="keyword">admin</span>`@`%` <span class="keyword">PROCEDURE</span> `generate_model_case`(<span class="keyword">in</span> t_name <span class="type">char</span>(<span class="number">255</span>))</span><br><span class="line"><span class="keyword">BEGIN</span>  <span class="comment">-- 原来的procedure - sql4java,现在改名为 generate_model_case,生成model层属性，属性名称驼峰处理</span></span><br><span class="line"><span class="keyword">DECLARE</span> columnName <span class="type">varchar</span>(<span class="number">1000</span>); <span class="comment">-- 字段名称</span></span><br><span class="line"><span class="keyword">DECLARE</span> property <span class="type">varchar</span>(<span class="number">5000</span>);   <span class="comment">-- 字段名称</span></span><br><span class="line"><span class="keyword">DECLARE</span> str <span class="type">varchar</span>(<span class="number">5000</span>);       <span class="comment">-- 字段名称</span></span><br><span class="line"><span class="keyword">DECLARE</span> n  <span class="type">int</span>  <span class="keyword">DEFAULT</span> <span class="number">0</span> ;     <span class="comment">-- 总共的字段数</span></span><br><span class="line"><span class="keyword">DECLARE</span> i  <span class="type">int</span>  <span class="keyword">DEFAULT</span> <span class="number">0</span>;      <span class="comment">-- 循环时的变量</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">temporary</span> <span class="keyword">table</span> <span class="keyword">if</span> <span class="keyword">not</span> <span class="keyword">exists</span> tmp_sql2java(property_name <span class="type">varchar</span>(<span class="number">5000</span>));</span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> tmp_sql2java;</span><br><span class="line"><span class="keyword">SET</span> i = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">select</span> count(*) <span class="keyword">into</span> n <span class="keyword">from</span> information_schema.<span class="keyword">columns</span> <span class="keyword">where</span> <span class="built_in">table_name</span> = t_name;</span><br><span class="line"><span class="keyword">WHILE</span> i &lt;= n <span class="keyword">DO</span> </span><br><span class="line"><span class="keyword">select</span> <span class="built_in">column_name</span> <span class="keyword">into</span> columnName <span class="keyword">from</span> information_schema.`<span class="keyword">columns</span>` <span class="keyword">where</span> <span class="built_in">table_name</span> = t_name <span class="keyword">and</span> ordinal_position=i;</span><br><span class="line"><span class="keyword">CALL</span> generate_property_name(columnName,@propertyName);</span><br><span class="line"><span class="keyword">SET</span> property = @propertyName;</span><br><span class="line"><span class="keyword">select</span></span><br><span class="line">    concat(</span><br><span class="line">         <span class="string">'/*'</span>,</span><br><span class="line">         column_comment,</span><br><span class="line">         <span class="string">'*/\n'</span>,</span><br><span class="line">        <span class="string">'private  '</span>,</span><br><span class="line">        <span class="keyword">case</span></span><br><span class="line">    <span class="keyword">when</span> data_type <span class="keyword">in</span> (<span class="string">'varchar'</span>, <span class="string">'char'</span>, <span class="string">'text'</span>) <span class="keyword">then</span></span><br><span class="line">        <span class="string">'String'</span></span><br><span class="line">    <span class="keyword">when</span> data_type <span class="keyword">in</span> (<span class="string">'int'</span>, <span class="string">'tinyint'</span>,<span class="string">'smallint'</span>) <span class="keyword">then</span></span><br><span class="line">        <span class="string">'Integer'</span></span><br><span class="line"><span class="keyword">when</span> data_type <span class="keyword">in</span> (<span class="string">'float'</span>, <span class="string">'double'</span>,<span class="string">'decimal'</span>) <span class="keyword">then</span></span><br><span class="line">        <span class="string">'BigDecimal'</span></span><br><span class="line">    <span class="keyword">when</span> data_type <span class="keyword">in</span> (<span class="string">'bigint'</span>) <span class="keyword">then</span></span><br><span class="line">        <span class="string">'Long'</span></span><br><span class="line">    <span class="keyword">when</span> data_type <span class="keyword">in</span> (<span class="string">'datetime'</span>) <span class="keyword">then</span></span><br><span class="line">        <span class="string">'Date'</span></span><br><span class="line">    <span class="keyword">when</span> data_type <span class="keyword">in</span> (<span class="string">'bit'</span>, <span class="string">'boolean'</span>) <span class="keyword">then</span></span><br><span class="line">        <span class="string">'Boolean'</span></span><br><span class="line"><span class="keyword">when</span> data_type <span class="keyword">in</span> (<span class="string">'double'</span>) <span class="keyword">then</span></span><br><span class="line">        <span class="string">'BigDecimal'</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="string">'类型不确定'</span></span><br><span class="line">    <span class="keyword">end</span>,</span><br><span class="line">    <span class="string">'  '</span>,</span><br><span class="line">    property,</span><br><span class="line">    <span class="string">';'</span></span><br><span class="line">    ) <span class="keyword">as</span> java <span class="keyword">into</span> str </span><br><span class="line"><span class="keyword">from</span></span><br><span class="line">    information_schema. <span class="keyword">columns</span></span><br><span class="line"><span class="keyword">where</span></span><br><span class="line">    <span class="built_in">table_name</span> = t_name <span class="keyword">and</span> ordinal_position=i;</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tmp_sql2java (property_name) <span class="keyword">values</span>(str); </span><br><span class="line"><span class="keyword">SET</span> i = i+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">END</span> <span class="keyword">WHILE</span>;</span><br><span class="line"><span class="keyword">select</span> property_name <span class="keyword">from</span> tmp_sql2java;</span><br><span class="line"><span class="keyword">END</span></span><br></pre></td></tr></table></figure><h3 id="生成model层属性，不区分大小写"><a href="#生成model层属性，不区分大小写" class="headerlink" title="生成model层属性，不区分大小写"></a>生成model层属性，不区分大小写</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DEFINER</span>=`<span class="keyword">admin</span>`@`%` <span class="keyword">PROCEDURE</span> `generate_model_case`(<span class="keyword">in</span> t_name <span class="type">char</span>(<span class="number">255</span>))</span><br><span class="line"><span class="keyword">BEGIN</span>  <span class="comment">-- 原来的procedure - sql4java,现在改名为 generate_model_case,生成model层属性，属性名称驼峰处理</span></span><br><span class="line"><span class="keyword">DECLARE</span> columnName <span class="type">varchar</span>(<span class="number">1000</span>); <span class="comment">-- 字段名称</span></span><br><span class="line"><span class="keyword">DECLARE</span> property <span class="type">varchar</span>(<span class="number">5000</span>);   <span class="comment">-- 字段名称</span></span><br><span class="line"><span class="keyword">DECLARE</span> str <span class="type">varchar</span>(<span class="number">5000</span>);       <span class="comment">-- 字段名称</span></span><br><span class="line"><span class="keyword">DECLARE</span> n  <span class="type">int</span>  <span class="keyword">DEFAULT</span> <span class="number">0</span> ;     <span class="comment">-- 总共的字段数</span></span><br><span class="line"><span class="keyword">DECLARE</span> i  <span class="type">int</span>  <span class="keyword">DEFAULT</span> <span class="number">0</span>;      <span class="comment">-- 循环时的变量</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">temporary</span> <span class="keyword">table</span> <span class="keyword">if</span> <span class="keyword">not</span> <span class="keyword">exists</span> tmp_sql2java(property_name <span class="type">varchar</span>(<span class="number">5000</span>));</span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> tmp_sql2java;</span><br><span class="line"><span class="keyword">SET</span> i = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">select</span> count(*) <span class="keyword">into</span> n <span class="keyword">from</span> information_schema.<span class="keyword">columns</span> <span class="keyword">where</span> <span class="built_in">table_name</span> = t_name;</span><br><span class="line"><span class="keyword">WHILE</span> i &lt;= n <span class="keyword">DO</span> </span><br><span class="line"><span class="keyword">select</span> <span class="built_in">column_name</span> <span class="keyword">into</span> columnName <span class="keyword">from</span> information_schema.`<span class="keyword">columns</span>` <span class="keyword">where</span> <span class="built_in">table_name</span> = t_name <span class="keyword">and</span> ordinal_position=i;</span><br><span class="line"><span class="keyword">CALL</span> generate_property_name(columnName,@propertyName);</span><br><span class="line"><span class="keyword">SET</span> property = @propertyName;</span><br><span class="line"><span class="keyword">select</span></span><br><span class="line">    concat(</span><br><span class="line">         <span class="string">'/*'</span>,</span><br><span class="line">         column_comment,</span><br><span class="line">         <span class="string">'*/\n'</span>,</span><br><span class="line">        <span class="string">'private  '</span>,</span><br><span class="line">        <span class="keyword">case</span></span><br><span class="line">    <span class="keyword">when</span> data_type <span class="keyword">in</span> (<span class="string">'varchar'</span>, <span class="string">'char'</span>, <span class="string">'text'</span>) <span class="keyword">then</span></span><br><span class="line">        <span class="string">'String'</span></span><br><span class="line">    <span class="keyword">when</span> data_type <span class="keyword">in</span> (<span class="string">'int'</span>, <span class="string">'tinyint'</span>,<span class="string">'smallint'</span>) <span class="keyword">then</span></span><br><span class="line">        <span class="string">'Integer'</span></span><br><span class="line"><span class="keyword">when</span> data_type <span class="keyword">in</span> (<span class="string">'float'</span>, <span class="string">'double'</span>,<span class="string">'decimal'</span>) <span class="keyword">then</span></span><br><span class="line">        <span class="string">'BigDecimal'</span></span><br><span class="line">    <span class="keyword">when</span> data_type <span class="keyword">in</span> (<span class="string">'bigint'</span>) <span class="keyword">then</span></span><br><span class="line">        <span class="string">'Long'</span></span><br><span class="line">    <span class="keyword">when</span> data_type <span class="keyword">in</span> (<span class="string">'datetime'</span>) <span class="keyword">then</span></span><br><span class="line">        <span class="string">'Date'</span></span><br><span class="line">    <span class="keyword">when</span> data_type <span class="keyword">in</span> (<span class="string">'bit'</span>, <span class="string">'boolean'</span>) <span class="keyword">then</span></span><br><span class="line">        <span class="string">'Boolean'</span></span><br><span class="line"><span class="keyword">when</span> data_type <span class="keyword">in</span> (<span class="string">'double'</span>) <span class="keyword">then</span></span><br><span class="line">        <span class="string">'BigDecimal'</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="string">'类型不确定'</span></span><br><span class="line">    <span class="keyword">end</span>,</span><br><span class="line">    <span class="string">'  '</span>,</span><br><span class="line">    property,</span><br><span class="line">    <span class="string">';'</span></span><br><span class="line">    ) <span class="keyword">as</span> java <span class="keyword">into</span> str </span><br><span class="line"><span class="keyword">from</span></span><br><span class="line">    information_schema. <span class="keyword">columns</span></span><br><span class="line"><span class="keyword">where</span></span><br><span class="line">    <span class="built_in">table_name</span> = t_name <span class="keyword">and</span> ordinal_position=i;</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tmp_sql2java (property_name) <span class="keyword">values</span>(str); </span><br><span class="line"><span class="keyword">SET</span> i = i+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">END</span> <span class="keyword">WHILE</span>;</span><br><span class="line"><span class="keyword">select</span> property_name <span class="keyword">from</span> tmp_sql2java;</span><br><span class="line"><span class="keyword">END</span></span><br></pre></td></tr></table></figure><h3 id="生成属性名称"><a href="#生成属性名称" class="headerlink" title="生成属性名称"></a>生成属性名称</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DEFINER</span>=`<span class="keyword">admin</span>`@`%` <span class="keyword">PROCEDURE</span> `generate_property_name`(<span class="keyword">in</span> <span class="built_in">column_name</span> <span class="type">varchar</span>(<span class="number">1000</span>),<span class="keyword">out</span> property_name <span class="type">varchar</span>(<span class="number">30</span>))</span><br><span class="line"><span class="keyword">BEGIN</span>  <span class="comment">-- 原来的procedure - sql3java,现在改名为 generate_property_name</span></span><br><span class="line">   <span class="keyword">DECLARE</span> n   <span class="type">int</span>  <span class="keyword">DEFAULT</span> <span class="number">0</span>; <span class="comment">-- 特殊字符总个数</span></span><br><span class="line"> <span class="keyword">DECLARE</span> i   <span class="type">int</span>  <span class="keyword">DEFAULT</span> <span class="number">0</span>; <span class="comment">-- 循环变量</span></span><br><span class="line"> <span class="keyword">DECLARE</span> ind <span class="type">int</span>  <span class="keyword">DEFAULT</span> <span class="number">0</span>; <span class="comment">-- 得到特殊字符的下标</span></span><br><span class="line"> <span class="keyword">DECLARE</span> left_str  <span class="type">varchar</span>(<span class="number">30</span>); <span class="comment">-- 左边的字符串</span></span><br><span class="line"> <span class="keyword">DECLARE</span> right_str <span class="type">varchar</span>(<span class="number">30</span>); <span class="comment">-- 右边的字符串</span></span><br><span class="line"> <span class="keyword">DECLARE</span> midd_char <span class="type">varchar</span>(<span class="number">30</span>); <span class="comment">-- 中间的那个需要修改的字符</span></span><br><span class="line"> <span class="keyword">DECLARE</span> str       <span class="type">varchar</span>(<span class="number">5000</span>); <span class="comment">-- 用于拼接的变量</span></span><br><span class="line"> <span class="keyword">SET</span> i = <span class="number">1</span>;</span><br><span class="line"> <span class="keyword">SET</span> str = <span class="built_in">column_name</span>;</span><br><span class="line"> <span class="keyword">SET</span> n = length(str)-length(REPLACE(str,"_",""))+<span class="number">1</span>; <span class="comment">-- 总共有多少次需要进行替换以及大小写变化</span></span><br><span class="line">    <span class="keyword">WHILE</span> i &lt; n <span class="keyword">DO</span> </span><br><span class="line">    <span class="keyword">SET</span> ind = LENGTH(SUBSTRING_INDEX(str,<span class="string">'_'</span>,i)); <span class="comment">-- 特殊字符的下标</span></span><br><span class="line">  <span class="keyword">SET</span> left_str = CONCAT(SUBSTRING_INDEX(str,<span class="string">'_'</span>,i),<span class="string">'_'</span>); <span class="comment">-- 特殊字符左边的字符串</span></span><br><span class="line"><span class="keyword">SET</span> right_str = </span><br><span class="line">SUBSTRING(SUBSTRING_INDEX(str,<span class="string">'_'</span>,i-(n)),<span class="number">2</span>,LENGTH(SUBSTRING_INDEX(str,<span class="string">'_'</span>,i-(n)))); <span class="comment">-- 特殊字符右边的字符串</span></span><br><span class="line"><span class="keyword">SET</span> midd_char = UPPER(SUBSTRING(SUBSTRING_INDEX(str,<span class="string">'_'</span>,i-(n)),<span class="number">1</span>,<span class="number">1</span>)); <span class="comment">-- 需要变化成大写的字符</span></span><br><span class="line"><span class="keyword">SET</span> str = concat(left_str,midd_char,right_str); <span class="comment">-- 对str字符串变量进行重新赋值</span></span><br><span class="line"><span class="keyword">SET</span> i = i+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">END</span> <span class="keyword">WHILE</span>;</span><br><span class="line"><span class="keyword">SET</span> property_name = REPLACE(str,"_","");</span><br><span class="line"><span class="keyword">END</span></span><br></pre></td></tr></table></figure><h3 id="用于前端react使用"><a href="#用于前端react使用" class="headerlink" title="用于前端react使用"></a>用于前端react使用</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DEFINER</span>=`<span class="keyword">admin</span>`@`%` <span class="keyword">PROCEDURE</span> `generate_view_interface_model`(<span class="keyword">in</span> t_name <span class="type">char</span>(<span class="number">125</span>))</span><br><span class="line"><span class="keyword">BEGIN</span>  <span class="comment">-- 原来的procedure - sql7java, 用于前端生成基本属性映射，现在改名为  generate_view_interface_model</span></span><br><span class="line"><span class="keyword">DECLARE</span> columnName <span class="type">varchar</span>(<span class="number">1000</span>); <span class="comment">-- 字段名称</span></span><br><span class="line"><span class="keyword">DECLARE</span> <span class="keyword">class</span> <span class="type">varchar</span>(<span class="number">125</span>);</span><br><span class="line"><span class="keyword">DECLARE</span> property <span class="type">varchar</span>(<span class="number">5000</span>);   <span class="comment">-- 字段名称</span></span><br><span class="line"><span class="keyword">DECLARE</span> columnPropertyStr <span class="type">varchar</span>(<span class="number">5000</span>); <span class="comment">-- 列属性字符串变量</span></span><br><span class="line"><span class="keyword">DECLARE</span> resultInterface <span class="type">varchar</span>(<span class="number">5000</span>);             <span class="comment">-- 新增记录</span></span><br><span class="line"><span class="keyword">DECLARE</span> str <span class="type">varchar</span>(<span class="number">5000</span>);       <span class="comment">-- 字段名称</span></span><br><span class="line"><span class="keyword">DECLARE</span> n  <span class="type">int</span>  <span class="keyword">DEFAULT</span> <span class="number">0</span> ;     <span class="comment">-- 总共的字段数</span></span><br><span class="line"><span class="keyword">DECLARE</span> i  <span class="type">int</span>  <span class="keyword">DEFAULT</span> <span class="number">0</span>;      <span class="comment">-- 循环时的变量</span></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">temporary</span> <span class="keyword">table</span> <span class="keyword">if</span> <span class="keyword">not</span> <span class="keyword">exists</span> tmp_sql2java(property_name <span class="type">varchar</span>(<span class="number">5000</span>));</span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> tmp_sql2java;</span><br><span class="line"><span class="keyword">SET</span> i = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">SET</span> columnPropertyStr = <span class="string">''</span>;</span><br><span class="line"><span class="keyword">SET</span> str = <span class="string">''</span>;</span><br><span class="line"><span class="keyword">SET</span> resultInterface = <span class="string">''</span>;</span><br><span class="line"><span class="keyword">CALL</span> generate_class_mapperClass_name(t_name,<span class="string">''</span>,@className);</span><br><span class="line"><span class="keyword">SET</span> <span class="keyword">class</span> = @className;</span><br><span class="line"><span class="keyword">select</span> count(*) <span class="keyword">into</span> n <span class="keyword">from</span> information_schema.<span class="keyword">columns</span> <span class="keyword">where</span> <span class="built_in">table_name</span> = t_name;</span><br><span class="line"><span class="keyword">WHILE</span> i &lt;= n <span class="keyword">DO</span> </span><br><span class="line"><span class="keyword">select</span> <span class="built_in">column_name</span> <span class="keyword">into</span> columnName <span class="keyword">from</span> information_schema.`<span class="keyword">columns</span>` <span class="keyword">where</span> <span class="built_in">table_name</span> = t_name <span class="keyword">and</span> ordinal_position=i;</span><br><span class="line"><span class="keyword">CALL</span> generate_property_name(columnName,@propertyName);</span><br><span class="line"><span class="keyword">SET</span> property = @propertyName;</span><br><span class="line"><span class="keyword">select</span></span><br><span class="line">    concat(</span><br><span class="line">     <span class="string">'/*'</span>,</span><br><span class="line">         column_comment,</span><br><span class="line">         <span class="string">'*/\n'</span>,</span><br><span class="line">        property,</span><br><span class="line"><span class="keyword">case</span></span><br><span class="line">    <span class="keyword">when</span> is_nullable <span class="keyword">in</span> (<span class="string">'YES'</span>) <span class="keyword">then</span></span><br><span class="line">        <span class="string">'?'</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="string">''</span></span><br><span class="line"><span class="keyword">end</span>,</span><br><span class="line">":",</span><br><span class="line">    <span class="keyword">case</span></span><br><span class="line">    <span class="keyword">when</span> data_type <span class="keyword">in</span> (<span class="string">'varchar'</span>, <span class="string">'char'</span>, <span class="string">'text'</span>) <span class="keyword">then</span></span><br><span class="line">        <span class="string">'string'</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="string">'number'</span></span><br><span class="line">    <span class="keyword">end</span>,</span><br><span class="line">    <span class="string">';\n'</span></span><br><span class="line">    ) <span class="keyword">as</span> java <span class="keyword">into</span> columnPropertyStr </span><br><span class="line"><span class="keyword">from</span></span><br><span class="line">    information_schema. <span class="keyword">columns</span></span><br><span class="line"><span class="keyword">where</span></span><br><span class="line">    <span class="built_in">table_name</span> = t_name <span class="keyword">and</span> ordinal_position=i;</span><br><span class="line"><span class="keyword">SET</span> str = CONCAT(str,columnPropertyStr);</span><br><span class="line"><span class="keyword">SET</span> i = i+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">END</span> <span class="keyword">WHILE</span>;</span><br><span class="line"><span class="keyword">SET</span> resultInterface = CONCAT(<span class="string">'export interface '</span>,<span class="keyword">class</span>,<span class="string">' &#123;\n'</span>,str,<span class="string">'&#125;'</span>);</span><br><span class="line"><span class="keyword">select</span> resultInterface;</span><br><span class="line"><span class="keyword">END</span></span><br></pre></td></tr></table></figure><h3 id="分页"><a href="#分页" class="headerlink" title="分页"></a>分页</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">CREATE <span class="attribute">DEFINER</span>=`admin`@`%` PROCEDURE `page_helper`(<span class="keyword">in</span><span class="built_in"> page </span>int,<span class="keyword">in</span> pageSize int,<span class="keyword">in</span> sqlValue text(10000))</span><br><span class="line">BEGIN  -- 原来的procedure - sql12java,现在改名称为 page_helper</span><br><span class="line">DECLARE prepareSQL text(10000);</span><br><span class="line">DECLARE countSQL int<span class="built_in"> default </span>0;</span><br><span class="line">DECLARE count_sql text(10000);</span><br><span class="line">DECLARE select_sql text(10000);</span><br><span class="line"><span class="builtin-name">SET</span> count_sql = <span class="string">''</span>;</span><br><span class="line"><span class="builtin-name">SET</span> select_sql = <span class="string">''</span>;</span><br><span class="line"><span class="keyword">IF</span><span class="built_in"> page </span>&lt; 1 THEN </span><br><span class="line"><span class="builtin-name">SET</span><span class="built_in"> page </span>= 1;</span><br><span class="line">END <span class="keyword">IF</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">IF</span> pageSize &lt; 0 THEN </span><br><span class="line"><span class="builtin-name">SET</span> pageSize = 10;</span><br><span class="line">END <span class="keyword">IF</span>;</span><br><span class="line"></span><br><span class="line"><span class="builtin-name">SET</span> <span class="attribute">count_sql</span>=concat('select count(*) as count_sum <span class="keyword">from</span> ( <span class="string">',sqlValue,'</span> ) t<span class="string">');</span></span><br><span class="line"><span class="string">  SET @prepareCountSql = count_sql;</span></span><br><span class="line"><span class="string">prepare countSQL from @prepareCountSql; </span></span><br><span class="line"><span class="string">EXECUTE countSQL;           </span></span><br><span class="line"><span class="string">deallocate prepare countSQL;    </span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">select page, pageSize as page_size;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">SET select_sql=concat(sqlValue,'</span>  limit <span class="string">',page*pageSize-pageSize,'</span>,<span class="string">',pageSize);</span></span><br><span class="line"><span class="string">-- select select_sql;</span></span><br><span class="line"><span class="string">SET @preparesql = select_sql;</span></span><br><span class="line"><span class="string">prepare prepareSQL from @preparesql; </span></span><br><span class="line"><span class="string">EXECUTE prepareSQL;           </span></span><br><span class="line"><span class="string">deallocate prepare prepareSQL;    </span></span><br><span class="line"><span class="string">END</span></span><br></pre></td></tr></table></figure><h3 id="通过供应商名称获取得到产品编号"><a href="#通过供应商名称获取得到产品编号" class="headerlink" title="通过供应商名称获取得到产品编号"></a>通过供应商名称获取得到产品编号</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DEFINER</span>=`<span class="keyword">admin</span>`@`%` <span class="keyword">PROCEDURE</span> `select_productId_by_supplierName`(<span class="keyword">in</span> keyValue <span class="type">varchar</span>(<span class="number">255</span>))</span><br><span class="line"><span class="keyword">BEGIN</span>  <span class="comment">-- 原来的procedure - sql8java,用于中台当中的产品管理当中的关键字查询，通过供应商名称查找得到供应商编号，再进行对比产品表当中存在有供应商为查询得到的供应商编号，则取出该产品编号，现在改名为 select_productId_by_supplierName</span></span><br><span class="line"><span class="keyword">DECLARE</span> n TINYINT(<span class="number">1</span>) <span class="keyword">DEFAULT</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">DECLARE</span> t_supplier_id <span class="type">int</span>; <span class="comment">-- t_supplier表当中通过模糊查询出来的供应商编号</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">BEGIN</span> </span><br><span class="line"><span class="keyword">DECLARE</span> cur_1 <span class="keyword">CURSOR</span> <span class="keyword">FOR</span> <span class="keyword">select</span> t.id <span class="keyword">from</span> t_supplier t <span class="keyword">where</span> t.supplier_name <span class="keyword">like</span> keyValue <span class="keyword">and</span> t.`status`=<span class="string">'0'</span>;</span><br><span class="line"><span class="keyword">DECLARE</span> <span class="keyword">CONTINUE</span> <span class="keyword">HANDLER</span> <span class="keyword">FOR</span> <span class="keyword">NOT</span> <span class="built_in">FOUND</span> <span class="keyword">SET</span> n=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">temporary</span> <span class="keyword">table</span> <span class="keyword">if</span> <span class="keyword">not</span> <span class="keyword">exists</span> tmp_sql3java(product <span class="type">int</span>);<span class="comment">-- 该表的作用在于，如果存在有这样的产品则进行新增到该表当中最后进行查询该表即可</span></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> tmp_sql3java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">open</span> cur_1;                               <span class="comment">-- 打开游标，开始第一轮的遍历循环，循环的内容是通过关键字模糊查询出来的所有供应商编号,过滤删除掉的</span></span><br><span class="line"><span class="keyword">WHILE</span> n&lt;&gt;<span class="number">1</span> <span class="keyword">DO</span></span><br><span class="line"><span class="keyword">FETCH</span> cur_1 <span class="keyword">INTO</span> t_supplier_id;    </span><br><span class="line"></span><br><span class="line"><span class="keyword">BEGIN</span> </span><br><span class="line"><span class="keyword">DECLARE</span> nn TINYINT(<span class="number">1</span>) <span class="keyword">DEFAULT</span> <span class="number">0</span>;                    <span class="comment">-- 变量，代表的是t_product当中supplier_id字段不为空值的总条数</span></span><br><span class="line"><span class="keyword">DECLARE</span> supplier_ids <span class="type">varchar</span>(<span class="number">255</span>); <span class="comment">-- 进行查询出来供应商字段取值不为空的未进行拆分的supplierId字符串</span></span><br><span class="line"><span class="keyword">DECLARE</span> supp_id_value <span class="type">varchar</span>(<span class="number">255</span>);        <span class="comment">-- 新增入tmp_sql4java表的属性字段supp_id</span></span><br><span class="line"><span class="keyword">DECLARE</span> flag <span class="type">int</span>;                <span class="comment">-- 是否可以将产品编号进行新增到tmp_sql3java表当中的依据，如果大于0则新增当前循环的产品编号</span></span><br><span class="line"><span class="keyword">DECLARE</span> nnn <span class="type">int</span>;                  <span class="comment">-- supplier_ids字符串拆分成数组后的总长度</span></span><br><span class="line"><span class="keyword">DECLARE</span> iii <span class="type">int</span>;                  <span class="comment">-- 遍历supplier_ids拆分后数组的变量iii</span></span><br><span class="line"><span class="keyword">DECLARE</span> id_value <span class="type">int</span>;             <span class="comment">-- 新增入tmp_sql4java表的属性字段id</span></span><br><span class="line"><span class="keyword">DECLARE</span> supplier_id <span class="type">int</span>;           <span class="comment">-- 进行了拆分之后的supplierId编号</span></span><br><span class="line"><span class="keyword">DECLARE</span> product_id <span class="type">int</span>;            <span class="comment">-- 进行查询出来供应商字段取值不为空的产品编号</span></span><br><span class="line"><span class="keyword">DECLARE</span> cur_2 <span class="keyword">CURSOR</span> <span class="keyword">FOR</span> <span class="keyword">select</span> tt.id,tt.supplier_id <span class="keyword">from</span> t_product tt <span class="keyword">where</span> tt.supplier_id <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">and</span> tt.`status`=<span class="string">'0'</span>;</span><br><span class="line"><span class="keyword">DECLARE</span> <span class="keyword">CONTINUE</span> <span class="keyword">HANDLER</span> <span class="keyword">FOR</span> <span class="keyword">NOT</span> <span class="built_in">FOUND</span> <span class="keyword">SET</span> nn=<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">open</span> cur_2;                               <span class="comment">-- 打开游标，开始第二轮的遍历循环,循环的内容是产品表当中所有supplier_id字段不为空的记录,过滤删除掉的</span></span><br><span class="line"><span class="keyword">WHILE</span> nn&lt;&gt;<span class="number">1</span> <span class="keyword">DO</span></span><br><span class="line"><span class="keyword">FETCH</span> cur_2 <span class="keyword">INTO</span> product_id,supplier_ids; <span class="comment">-- 获取数据产品编号以及供应商字段取值（未进行拆分的供应商编号字符串）</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">temporary</span> <span class="keyword">table</span> <span class="keyword">if</span> <span class="keyword">not</span> <span class="keyword">exists</span> tmp_sql4java(supp_id <span class="type">varchar</span>(<span class="number">255</span>));</span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> tmp_sql4java;<span class="comment">-- 每当循环产品表一条记录则刷新一遍tmp_sql4java表，当中存的值是每一条产品表记录当中的supplier_ids字符串进行拆分出来的数值</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SET</span> flag=<span class="number">0</span>;   <span class="comment">-- 首先先定义值为0</span></span><br><span class="line"><span class="keyword">SET</span> iii=<span class="number">1</span>;    <span class="comment">-- 赋初始值，赋值为1的原因是我是从1开始的，所以约定好从第一个开始，也就是@i,其实不要也行</span></span><br><span class="line"><span class="keyword">call</span> fieldValue_split_by_comma(supplier_ids);<span class="comment">-- 拆分之后进表</span></span><br><span class="line"><span class="keyword">SELECT</span> count(*) <span class="keyword">into</span> nnn <span class="keyword">FROM</span> tmp_sql5java; <span class="comment">-- 为nnn进行赋值</span></span><br><span class="line"><span class="keyword">while</span> iii &lt;= nnn <span class="keyword">DO</span> <span class="comment">-- 进行循环遍历拆分supplierIds的数组</span></span><br><span class="line"><span class="keyword">SELECT</span> s_id <span class="keyword">into</span> supp_id_value </span><br><span class="line"><span class="keyword">FROM</span>  </span><br><span class="line">tmp_sql5java </span><br><span class="line"><span class="keyword">WHERE</span> </span><br><span class="line">num=iii;</span><br><span class="line"> <span class="keyword">insert</span> <span class="keyword">into</span> tmp_sql4java <span class="keyword">values</span> (supp_id_value);</span><br><span class="line"><span class="keyword">SET</span> iii=iii+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">end</span> <span class="keyword">while</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> count(*) <span class="keyword">into</span> flag <span class="keyword">from</span> tmp_sql4java  <span class="keyword">where</span> tmp_sql4java.supp_id=t_supplier_id;</span><br><span class="line"><span class="keyword">if</span>(flag&gt;<span class="number">0</span>) <span class="keyword">THEN</span> <span class="comment">-- 如果存在有拆分出来的供应商编号与模糊查找出来的供应商编号对应的上的话则</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tmp_sql3java <span class="keyword">values</span>(product_id);<span class="comment">-- 将当前循环到的该产品编号存入临时表当中，否则不作处理</span></span><br><span class="line"><span class="keyword">END</span> <span class="keyword">IF</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">end</span> <span class="keyword">while</span>; #结束循环</span><br><span class="line"><span class="keyword">close</span> cur_2; #关闭游标<span class="number">2</span></span><br><span class="line"><span class="keyword">END</span>;</span><br><span class="line"> <span class="keyword">end</span> <span class="keyword">while</span>; #结束循环</span><br><span class="line"> <span class="keyword">close</span> cur_1; #关闭游标<span class="number">1</span></span><br><span class="line"> <span class="keyword">END</span>;</span><br><span class="line">    <span class="comment">-- select product from tmp_sql3java;</span></span><br><span class="line">  <span class="keyword">END</span></span><br></pre></td></tr></table></figure><h3 id="通过供应商编号获取产品编号"><a href="#通过供应商编号获取产品编号" class="headerlink" title="通过供应商编号获取产品编号"></a>通过供应商编号获取产品编号</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DEFINER</span>=`<span class="keyword">admin</span>`@`%` <span class="keyword">PROCEDURE</span> `select_productId_by_supplierId`(<span class="keyword">in</span> keyValue <span class="type">int</span>)</span><br><span class="line"><span class="keyword">BEGIN</span>   <span class="comment">-- 通过供应商编号进行查找 产品对应有供应商编号的产品编号</span></span><br><span class="line"><span class="keyword">DECLARE</span> n <span class="type">int</span>;</span><br><span class="line"><span class="keyword">DECLARE</span> i <span class="type">int</span>;</span><br><span class="line"><span class="keyword">DECLARE</span> t_supplier_id <span class="type">int</span>; <span class="comment">-- t_supplier表当中通过模糊查询出来的供应商编号</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">BEGIN</span> </span><br><span class="line"><span class="keyword">DECLARE</span> cur_1 <span class="keyword">CURSOR</span> <span class="keyword">FOR</span> <span class="keyword">select</span> t.id <span class="keyword">from</span> t_supplier t <span class="keyword">where</span> t.id = keyValue <span class="keyword">and</span> t.`status`=<span class="string">'0'</span>;</span><br><span class="line"><span class="keyword">SET</span> i=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">select</span> count(*) <span class="keyword">into</span> n <span class="keyword">from</span>  t_supplier t <span class="keyword">where</span> t.id = keyValue <span class="keyword">and</span> t.`status`=<span class="string">'0'</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">temporary</span> <span class="keyword">table</span> <span class="keyword">if</span> <span class="keyword">not</span> <span class="keyword">exists</span> tmp_sql3java(product <span class="type">int</span>);<span class="comment">-- 该表的作用在于，如果存在有这样的产品则进行新增到该表当中最后进行查询该表即可</span></span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> tmp_sql3java;</span><br><span class="line"></span><br><span class="line"><span class="keyword">open</span> cur_1;                               <span class="comment">-- 打开游标，开始第一轮的遍历循环，循环的内容是通过关键字模糊查询出来的所有供应商编号,过滤删除掉的</span></span><br><span class="line"><span class="keyword">WHILE</span> i&lt;=n <span class="keyword">DO</span></span><br><span class="line"><span class="keyword">FETCH</span> cur_1 <span class="keyword">INTO</span> t_supplier_id;  </span><br><span class="line"><span class="keyword">BEGIN</span> </span><br><span class="line"><span class="keyword">DECLARE</span> nn TINYINT(<span class="number">1</span>) <span class="keyword">DEFAULT</span> <span class="number">0</span>;                    <span class="comment">-- 变量，代表的是t_product当中supplier_id字段不为空值的总条数</span></span><br><span class="line"><span class="keyword">DECLARE</span> supplier_ids <span class="type">varchar</span>(<span class="number">255</span>); <span class="comment">-- 进行查询出来供应商字段取值不为空的未进行拆分的supplierId字符串</span></span><br><span class="line"><span class="keyword">DECLARE</span> supp_id_value <span class="type">varchar</span>(<span class="number">255</span>);        <span class="comment">-- 新增入tmp_sql4java表的属性字段supp_id</span></span><br><span class="line"><span class="keyword">DECLARE</span> flag <span class="type">int</span>;                <span class="comment">-- 是否可以将产品编号进行新增到tmp_sql4java表当中的依据，如果大于0则新增当前循环的产品编号</span></span><br><span class="line"><span class="keyword">DECLARE</span> nnn <span class="type">int</span>;                  <span class="comment">-- supplier_ids字符串拆分成数组后的总长度</span></span><br><span class="line"><span class="keyword">DECLARE</span> iii <span class="type">int</span>;                  <span class="comment">-- 遍历supplier_ids拆分后数组的变量iii</span></span><br><span class="line"><span class="keyword">DECLARE</span> id_value <span class="type">int</span>;             <span class="comment">-- 新增入tmp_sql4java表的属性字段id</span></span><br><span class="line"><span class="keyword">DECLARE</span> supplier_id <span class="type">int</span>;           <span class="comment">-- 进行了拆分之后的supplierId编号</span></span><br><span class="line"><span class="keyword">DECLARE</span> product_id <span class="type">int</span>;            <span class="comment">-- 进行查询出来供应商字段取值不为空的产品编号</span></span><br><span class="line"> <span class="keyword">DECLARE</span> cur_2 <span class="keyword">CURSOR</span> <span class="keyword">FOR</span> <span class="keyword">select</span> tt.id,tt.supplier_id <span class="keyword">from</span> t_product tt <span class="keyword">where</span> tt.supplier_id <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span> <span class="keyword">and</span> tt.`status`=<span class="string">'0'</span>;</span><br><span class="line"> <span class="keyword">DECLARE</span> <span class="keyword">CONTINUE</span> <span class="keyword">HANDLER</span> <span class="keyword">FOR</span> <span class="keyword">NOT</span> <span class="built_in">FOUND</span> <span class="keyword">SET</span> nn=<span class="number">1</span>;</span><br><span class="line"> <span class="keyword">open</span> cur_2;                               <span class="comment">-- 打开游标，开始第二轮的遍历循环,循环的内容是产品表当中所有supplier_id字段不为空的记录,过滤删除掉的</span></span><br><span class="line"> <span class="keyword">WHILE</span> nn&lt;&gt;<span class="number">1</span> <span class="keyword">DO</span></span><br><span class="line"> <span class="keyword">FETCH</span> cur_2 <span class="keyword">INTO</span> product_id,supplier_ids; <span class="comment">-- 获取数据产品编号以及供应商字段取值（未进行拆分的供应商编号字符串）</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">temporary</span> <span class="keyword">table</span> <span class="keyword">if</span> <span class="keyword">not</span> <span class="keyword">exists</span> tmp_sql4java(supp_id <span class="type">varchar</span>(<span class="number">255</span>));</span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> tmp_sql4java;<span class="comment">-- 每当循环产品表一条记录则刷新一遍tmp_sql4java表，当中存的值是每一条产品表记录当中的supplier_ids字符串进行拆分出来的数值</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">SET</span> flag=<span class="number">0</span>;   <span class="comment">-- 首先先定义值为0</span></span><br><span class="line"><span class="keyword">SET</span> iii=<span class="number">1</span>;    <span class="comment">-- 赋初始值，赋值为1的原因是我是从1开始的，所以约定好从第一个开始，也就是@i,其实不要也行</span></span><br><span class="line"><span class="keyword">call</span> fieldValue_split_by_comma(supplier_ids);<span class="comment">-- 拆分之后进表</span></span><br><span class="line"><span class="keyword">SELECT</span> count(*) <span class="keyword">into</span> nnn <span class="keyword">FROM</span> tmp_sql5java; <span class="comment">-- 为nnn进行赋值</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> iii &lt;= nnn <span class="keyword">DO</span> <span class="comment">-- 进行循环遍历拆分supplierIds的数组</span></span><br><span class="line"><span class="keyword">SELECT</span> s_id <span class="keyword">into</span> supp_id_value </span><br><span class="line"><span class="keyword">FROM</span>  </span><br><span class="line">tmp_sql5java </span><br><span class="line"><span class="keyword">WHERE</span> </span><br><span class="line">num=iii;</span><br><span class="line"> <span class="keyword">insert</span> <span class="keyword">into</span> tmp_sql4java <span class="keyword">values</span> (supp_id_value);</span><br><span class="line"><span class="keyword">SET</span> iii=iii+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">end</span> <span class="keyword">while</span>;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">select</span> count(*) <span class="keyword">into</span> flag <span class="keyword">from</span> tmp_sql4java  <span class="keyword">where</span> tmp_sql4java.supp_id=t_supplier_id;</span><br><span class="line"> <span class="keyword">IF</span>(flag&gt;<span class="number">0</span>) <span class="keyword">THEN</span> <span class="comment">-- 如果存在有拆分出来的供应商编号与模糊查找出来的供应商编号对应的上的话则</span></span><br><span class="line"> <span class="keyword">insert</span> <span class="keyword">into</span> tmp_sql3java <span class="keyword">values</span>(product_id);<span class="comment">-- 将当前循环到的该产品编号存入临时表当中，否则不作处理</span></span><br><span class="line"> <span class="keyword">END</span> <span class="keyword">IF</span>;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">end</span> <span class="keyword">while</span>; #结束循环</span><br><span class="line"> <span class="keyword">close</span> cur_2; #关闭游标<span class="number">2</span></span><br><span class="line"><span class="keyword">END</span>;</span><br><span class="line"><span class="keyword">SET</span> i=i+<span class="number">1</span>;</span><br><span class="line"> <span class="keyword">end</span> <span class="keyword">while</span>; #结束循环</span><br><span class="line"> <span class="keyword">close</span> cur_1; #关闭游标<span class="number">1</span></span><br><span class="line"> <span class="keyword">END</span>;</span><br><span class="line">    <span class="comment">-- select product from tmp_sql3java;</span></span><br><span class="line">  <span class="keyword">END</span></span><br></pre></td></tr></table></figure><h3 id="通过供应商编号获取得到产品"><a href="#通过供应商编号获取得到产品" class="headerlink" title="通过供应商编号获取得到产品"></a>通过供应商编号获取得到产品</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DEFINER</span>=`<span class="keyword">admin</span>`@`%` <span class="keyword">PROCEDURE</span> `select_products_by_supplierId`(<span class="keyword">in</span> supplier_id <span class="type">int</span>)</span><br><span class="line"><span class="keyword">BEGIN</span> <span class="comment">-- 原来的procedure - sql10java,现在改名称为 select_product_by_params</span></span><br><span class="line"><span class="keyword">DECLARE</span> n <span class="type">int</span> <span class="keyword">default</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">DECLARE</span> s <span class="type">int</span> <span class="keyword">default</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">DECLARE</span> i <span class="type">int</span>;</span><br><span class="line"><span class="keyword">DECLARE</span> productNo <span class="type">int</span>;</span><br><span class="line"><span class="keyword">DECLARE</span> str <span class="type">varchar</span>(<span class="number">256</span>);</span><br><span class="line"><span class="keyword">DECLARE</span> concatSQL <span class="type">varchar</span>(<span class="number">256</span>);</span><br><span class="line"><span class="keyword">DECLARE</span> sqls text(<span class="number">10000</span>);</span><br><span class="line"><span class="keyword">DECLARE</span> prepareSQL text(<span class="number">10000</span>);</span><br><span class="line">#将局部变量转换成会话变量</span><br><span class="line">#动态<span class="keyword">sql</span>语言只接受会话变量</span><br><span class="line"></span><br><span class="line"><span class="keyword">SET</span> i=<span class="number">1</span>;</span><br><span class="line"><span class="keyword">SET</span> str=<span class="string">''</span>;</span><br><span class="line"><span class="keyword">SET</span> concatSQL=<span class="string">''</span>;</span><br><span class="line"><span class="keyword">SET</span> sqls=<span class="string">''</span>;</span><br><span class="line"> <span class="keyword">call</span> select_productId_by_supplierId(supplier_id);</span><br><span class="line">  <span class="keyword">select</span> count(*) <span class="keyword">into</span> n <span class="keyword">from</span> tmp_sql3java;</span><br><span class="line"> <span class="keyword">if</span> n&gt;<span class="number">0</span> <span class="keyword">then</span> </span><br><span class="line"> <span class="keyword">BEGIN</span></span><br><span class="line"> <span class="keyword">DECLARE</span> cur_3 <span class="keyword">CURSOR</span> <span class="keyword">FOR</span> <span class="keyword">select</span> product <span class="keyword">from</span> tmp_sql3java;</span><br><span class="line"> <span class="keyword">open</span> cur_3;</span><br><span class="line"><span class="keyword">while</span> i&lt;=n <span class="keyword">do</span></span><br><span class="line"> <span class="keyword">fetch</span> cur_3 <span class="keyword">into</span> productNo;</span><br><span class="line"> <span class="keyword">SET</span> str=concat(str,productNo,",");</span><br><span class="line"><span class="keyword">SET</span> i=i+<span class="number">1</span>;</span><br><span class="line"> <span class="keyword">end</span> <span class="keyword">while</span>;</span><br><span class="line"><span class="keyword">SET</span> str= substring(str, <span class="number">1</span>, length(str)<span class="number">-1</span>);</span><br><span class="line"> <span class="keyword">close</span> cur_3;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">SET</span> concatSQL=concat(" and b.id in(",str,")");</span><br><span class="line"> <span class="keyword">END</span>;</span><br><span class="line"><span class="keyword">end</span> <span class="keyword">if</span>;</span><br><span class="line"><span class="keyword">SET</span> sqls = concat(</span><br><span class="line"><span class="string">'select       </span></span><br><span class="line"><span class="string">  a.id, a.product_id, a.image, a.`name`, a.zh_name, </span></span><br><span class="line"><span class="string"> a.customs_code, a.unit_price, a.sku, a.fn_sku_no, </span></span><br><span class="line"><span class="string"> a.fn_sku_code, a.packing_size_long, a.packing_size_wide, </span></span><br><span class="line"><span class="string"> a.packing_size_height, a.box_weight, a.packing_num, a.card_board_load_num, </span></span><br><span class="line"><span class="string"> a.product_long, a.product_width, a.product_height, a.product_weight, </span></span><br><span class="line"><span class="string"> a.cal_unit,purpose, a.brand_info, a.material, a.model, </span></span><br><span class="line"><span class="string"> a.remark, a.attr_name, a.attr_value, a.`status` </span></span><br><span class="line"><span class="string">from t_product_attr a,t_product b </span></span><br><span class="line"><span class="string">where</span></span><br><span class="line"><span class="string">a.product_id=b.id </span></span><br><span class="line"><span class="string">and a.`status`=0 '</span>,</span><br><span class="line">concatSQL</span><br><span class="line">);</span><br><span class="line">  <span class="comment">-- select sqls;</span></span><br><span class="line">   <span class="keyword">SET</span> @preparesql = sqls;</span><br><span class="line">   <span class="keyword">prepare</span> prepareSQL <span class="keyword">from</span> @preparesql; <span class="comment">-- 预处理需要执行的动态SQL，其中stmt是一个变量</span></span><br><span class="line">   <span class="keyword">EXECUTE</span> prepareSQL;           <span class="comment">-- 执行SQL语句</span></span><br><span class="line">   <span class="keyword">deallocate</span> <span class="keyword">prepare</span> prepareSQL;     <span class="comment">-- 释放掉预处理段</span></span><br><span class="line"><span class="keyword">END</span></span><br></pre></td></tr></table></figure><h3 id="渠道订单报表"><a href="#渠道订单报表" class="headerlink" title="渠道订单报表"></a>渠道订单报表</h3><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DEFINER</span>=`<span class="keyword">admin</span>`@`%` <span class="keyword">PROCEDURE</span> `view_channel_order_report`(<span class="keyword">in</span> channelOrderId <span class="type">int</span>(<span class="number">11</span>))</span><br><span class="line"><span class="keyword">BEGIN</span> </span><br><span class="line"><span class="keyword">DECLARE</span> step_id <span class="type">int</span>;</span><br><span class="line"><span class="keyword">DECLARE</span> n <span class="type">int</span>;</span><br><span class="line"><span class="keyword">DECLARE</span> i <span class="type">int</span>;</span><br><span class="line"><span class="keyword">DECLARE</span> step_finished_date <span class="type">int</span>;</span><br><span class="line"><span class="keyword">DECLARE</span> id2 <span class="type">int</span>;</span><br><span class="line"><span class="keyword">DECLARE</span> step_name2 <span class="type">VARCHAR</span>(<span class="number">255</span>);</span><br><span class="line"><span class="keyword">DECLARE</span> is_delay2 <span class="type">VARCHAR</span>(<span class="number">255</span>);</span><br><span class="line"><span class="keyword">DECLARE</span> standard_time2 <span class="type">int</span>;</span><br><span class="line"><span class="keyword">DECLARE</span> actual_delay2 <span class="type">VARCHAR</span>(<span class="number">64</span>);</span><br><span class="line"><span class="keyword">DECLARE</span> cur_step <span class="keyword">CURSOR</span> <span class="keyword">FOR</span> <span class="keyword">select</span> id <span class="keyword">from</span> t_channel_order_step <span class="keyword">where</span> channel_order_id=channelOrderId;</span><br><span class="line"><span class="keyword">select</span> count(*) <span class="keyword">into</span> n <span class="keyword">from</span> t_channel_order_step <span class="keyword">where</span> channel_order_id=channelOrderId;</span><br><span class="line"><span class="keyword">SET</span> i=<span class="number">0</span>;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">temporary</span> <span class="keyword">table</span> <span class="keyword">if</span> <span class="keyword">not</span> <span class="keyword">exists</span> tmp_channel_order_report(</span><br><span class="line">id <span class="type">int</span>(<span class="number">11</span>), step_name <span class="type">varchar</span>(<span class="number">255</span>), is_delay <span class="type">varchar</span>(<span class="number">255</span>), standard_time <span class="type">int</span>(<span class="number">11</span>), actual_delay <span class="type">varchar</span>(<span class="number">64</span>) );</span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> tmp_channel_order_report;</span><br><span class="line"><span class="keyword">open</span> cur_step;</span><br><span class="line"><span class="keyword">WHILE</span> i&lt;n <span class="keyword">DO</span></span><br><span class="line"><span class="keyword">fetch</span> cur_step <span class="keyword">into</span> step_id;</span><br><span class="line"><span class="keyword">call</span> last_step_finished_date(step_id,step_finished_date);<span class="comment">-- 当前步骤id的上一步骤完成时间</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span></span><br><span class="line">id,`<span class="type">name</span>`,standard_time,</span><br><span class="line"><span class="keyword">if</span>(finished_date <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span>, </span><br><span class="line"> ROUND((finished_date-step_finished_date)/<span class="number">3600</span>,<span class="number">1</span>),</span><br><span class="line"> <span class="keyword">if</span>(activity=<span class="number">1</span>, ROUND((unix_timestamp(now())-step_finished_date)/<span class="number">3600</span>,<span class="number">1</span>), <span class="string">'-'</span>)</span><br><span class="line">) <span class="keyword">as</span> actual_delay,</span><br><span class="line"><span class="keyword">if</span>(finished_date <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span>, </span><br><span class="line"> <span class="keyword">if</span>(ROUND((finished_date-step_finished_date)/<span class="number">3600</span>,<span class="number">1</span>)&gt;standard_time,<span class="string">'是'</span>,<span class="string">'否'</span>),</span><br><span class="line"> <span class="keyword">if</span>(activity=<span class="number">1</span>,  <span class="keyword">if</span>(ROUND((unix_timestamp(now())-step_finished_date)/<span class="number">3600</span>,<span class="number">1</span>)&gt;standard_time,<span class="string">'是'</span>,<span class="string">'否'</span>), <span class="string">'否'</span>)</span><br><span class="line">) <span class="keyword">as</span> is_delay</span><br><span class="line"></span><br><span class="line"><span class="keyword">into</span> id2,step_name2,standard_time2,actual_delay2,is_delay2  </span><br><span class="line"><span class="keyword">from</span> t_channel_order_step <span class="keyword">where</span> id=step_id;</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> tmp_channel_order_report <span class="keyword">values</span>(id2,step_name2,is_delay2,standard_time2,actual_delay2);</span><br><span class="line"><span class="keyword">SET</span> i=i+<span class="number">1</span>;</span><br><span class="line"><span class="keyword">END</span> <span class="keyword">WHILE</span>;</span><br><span class="line"><span class="keyword">close</span> cur_step;</span><br><span class="line"><span class="keyword">select</span> * <span class="keyword">from</span> tmp_channel_order_report;</span><br><span class="line"><span class="keyword">END</span></span><br></pre></td></tr></table></figure><h3 id="序列"><a href="#序列" class="headerlink" title="序列"></a>序列</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> DEFINER=<span class="string">`admin`</span>@<span class="string">`%`</span> <span class="keyword">FUNCTION</span> <span class="string">`currval`</span>(seq_name <span class="built_in">VARCHAR</span>(<span class="number">50</span>)) <span class="keyword">RETURNS</span> <span class="built_in">int</span>(<span class="number">11</span>)</span><br><span class="line">    <span class="keyword">DETERMINISTIC</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">     <span class="keyword">DECLARE</span> <span class="keyword">value</span> <span class="built_in">INTEGER</span>; </span><br><span class="line">     <span class="keyword">SET</span> <span class="keyword">value</span> = <span class="number">0</span>; </span><br><span class="line">     <span class="keyword">SELECT</span> current_value <span class="keyword">INTO</span> <span class="keyword">value</span> </span><br><span class="line">          <span class="keyword">FROM</span> <span class="keyword">sequence</span></span><br><span class="line">          <span class="keyword">WHERE</span> <span class="keyword">name</span> = seq_name; </span><br><span class="line">     RETURN value; </span><br><span class="line"><span class="keyword">END</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> DEFINER=<span class="string">`admin`</span>@<span class="string">`%`</span> <span class="keyword">FUNCTION</span> <span class="string">`nextval`</span>(seq_name <span class="built_in">VARCHAR</span>(<span class="number">50</span>)) <span class="keyword">RETURNS</span> <span class="built_in">int</span>(<span class="number">11</span>)</span><br><span class="line">    <span class="keyword">DETERMINISTIC</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">     <span class="keyword">UPDATE</span> <span class="keyword">sequence</span></span><br><span class="line">          <span class="keyword">SET</span> current_value = current_value + <span class="keyword">increment</span> </span><br><span class="line">          <span class="keyword">WHERE</span> <span class="keyword">name</span> = seq_name; </span><br><span class="line">     RETURN currval(seq_name); </span><br><span class="line"><span class="keyword">END</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">CREATE</span> DEFINER=<span class="string">`admin`</span>@<span class="string">`%`</span> <span class="keyword">FUNCTION</span> <span class="string">`setval`</span>(seq_name <span class="built_in">VARCHAR</span>(<span class="number">50</span>), <span class="keyword">value</span> <span class="built_in">INTEGER</span>) <span class="keyword">RETURNS</span> <span class="built_in">int</span>(<span class="number">11</span>)</span><br><span class="line">    <span class="keyword">DETERMINISTIC</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">     <span class="keyword">UPDATE</span> <span class="keyword">sequence</span></span><br><span class="line">          <span class="keyword">SET</span> current_value = <span class="keyword">value</span> </span><br><span class="line">          <span class="keyword">WHERE</span> <span class="keyword">name</span> = seq_name; </span><br><span class="line">     RETURN currval(seq_name); </span><br><span class="line"><span class="keyword">END</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;记录&quot;&gt;&lt;a href=&quot;#记录&quot; class=&quot;headerlink&quot; title=&quot;记录&quot;&gt;&lt;/a&gt;记录&lt;/h2&gt;&lt;p&gt;在领赫这个项目当中，方便敏捷式开发的存储过程pojo-model层以及mapper的编写。  &lt;/p&gt;
&lt;h3 id=&quot;david指导&quot;&gt;&lt;
      
    
    </summary>
    
    
      <category term="领赫" scheme="https://fengshana.github.io/categories/%E9%A2%86%E8%B5%AB/"/>
    
    
      <category term="领赫" scheme="https://fengshana.github.io/tags/%E9%A2%86%E8%B5%AB/"/>
    
      <category term="存储过程" scheme="https://fengshana.github.io/tags/%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B/"/>
    
      <category term="Sql" scheme="https://fengshana.github.io/tags/Sql/"/>
    
      <category term="MySql" scheme="https://fengshana.github.io/tags/MySql/"/>
    
  </entry>
  
  <entry>
    <title>基于SpringBoot-邮件服务</title>
    <link href="https://fengshana.github.io/2020/04/14/%E9%A2%86%E8%B5%AB/%E9%82%AE%E4%BB%B6%E6%9C%8D%E5%8A%A1/"/>
    <id>https://fengshana.github.io/2020/04/14/%E9%A2%86%E8%B5%AB/%E9%82%AE%E4%BB%B6%E6%9C%8D%E5%8A%A1/</id>
    <published>2020-04-14T15:40:28.839Z</published>
    <updated>2020-04-15T13:23:26.718Z</updated>
    
    <content type="html"><![CDATA[<h2 id="参考Blog"><a href="#参考Blog" class="headerlink" title="参考Blog"></a>参考Blog</h2><ul><li><a href="https://blog.csdn.net/weixin_44767463/article/details/100688643" target="_blank" rel="noopener">https://blog.csdn.net/weixin_44767463/article/details/100688643</a></li><li><a href="https://blog.csdn.net/daa20/article/details/88868807" target="_blank" rel="noopener">https://blog.csdn.net/daa20/article/details/88868807</a></li><li><a href="https://www.cnblogs.com/achengmu/p/10955765.html" target="_blank" rel="noopener">https://www.cnblogs.com/achengmu/p/10955765.html</a></li></ul><h2 id="API官方文档"><a href="#API官方文档" class="headerlink" title="API官方文档"></a>API官方文档</h2><ul><li><a href="https://sendgrid.api-docs.io/" target="_blank" rel="noopener">https://sendgrid.api-docs.io/</a></li><li><a href="https://sendgrid.com/docs/for-developers/sending-email/getting-started-smtp/" target="_blank" rel="noopener">https://sendgrid.com/docs/for-developers/sending-email/getting-started-smtp/</a></li></ul><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><ol><li>邮件样式html不兼容—已解决</li><li>邮件附件名称乱码—已解决</li><li>邮件发送到了垃圾箱—已解决</li><li>邮件使用多线程进行异步处理—已解决</li><li>邮件发送不成功如何处理—面试官提出的问题</li><li>邮件发送使用多线程，关于多线程相关的面试问题</li></ol><ul><li>邮件发送不成功如何处理  </li></ul><p>这个问题我记得我当时的回答是这样的：<br>因为在领赫这个项目当中发送邮件是通过多线程的方式进行发送的邮件，也就是异步处理发送邮件的这个业务。<br>然后面试官就问，如果通过这个多线程发送邮件，但是这个邮件并未发送成功该如何处理？<br>答：因为SendGrid发送邮件时如果发送成功会返回一个200的发送成功的响应码回来；也有的时候并不会发送200的响应码回来，也就是当渠道不稳定的时候，异常的时候，那么这个时候我们系统是没有对这种情况作出处理。因为领赫这个项目是初稿。还有很多需要完善的地方。当然了针对这个问题，我认为所需要作出的完善就是，可以建一张关于发送账单邮件的表，把每一次发送邮件的记录，发送邮件时间，发送人，发送内容，发送状态（未发送/成功/失败）等有必要记录下来的内容映射到表中的字段。而后台当中在每次发送邮件内容的操作旁，如果读取得到该相应操作的发送邮件未成功，可以点击重试发送邮件相关按钮进行重新操作。  </p><p>而且有个点很类似，就是获取paypal的支付链接的时候，因为是沙箱环境，paypal沙箱环境又在做更新处理，我遇到好几次情况就是paypal沙箱环境不稳定，然后返回的token无效，也就是说我通过这个token去获取paypal沙箱环境当中的支付链接的时候无法获取得到返回401响应码，也就是说在获取支付链接的这个业务操作的时候，如果遇到paypal，也就是渠道异常的时候该如何处理，david就建议说重试三次，如果三次内paypal未获取成功那么就判定为paypal渠道问题；否则在三次内进行获取paypal支付链接。不然一直循环获取支付链接的话，会给服务器带来不必要的麻烦，或者说压力。</p><ul><li>多线程</li></ul><p>这个也是面试官问我的一个问题，他问我Runnable和Thread 有什么区别？<br>因为我在项目当中是使用多线程完成的这个发送邮件的这个功能。<br>然后被问到有关多线程相关的问题也是人之常情。<br>但是我不会。<br>我就答了Thread是类，可继承；Runnable是接口多实现。<br>哦豁。其实领赫项目当中有关多线程的操作我都是直接百度来的代码。也怪自己对待面试不够认真。<br>代码：  </p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">package com.yourshares.configuration;</span><br><span class="line"></span><br><span class="line">import com.alibaba.fastjson.JSONObject;</span><br><span class="line">import com.sendgrid.*;</span><br><span class="line">import com.yourshares.common.tools.LogFileName;</span><br><span class="line">import com.yourshares.common.utils.LoggerUtils;</span><br><span class="line">import org.slf4j.Logger;</span><br><span class="line"></span><br><span class="line">import java.io.IOException;</span><br><span class="line"></span><br><span class="line">public <span class="keyword">class</span> MailThread extends Thread&#123;</span><br><span class="line">    Logger logger = LoggerUtils.<span class="constructor">Logger(LogFileName.API)</span>;</span><br><span class="line"></span><br><span class="line">    String contentHtml=<span class="string">""</span>;</span><br><span class="line">    String mainMail=<span class="string">""</span>;</span><br><span class="line">    String sendgridApiKey=<span class="string">""</span>;</span><br><span class="line">    public <span class="constructor">MailThread(JSONObject <span class="params">mail</span>)</span> &#123;</span><br><span class="line">        this.contentHtml = mail.get<span class="constructor">String(<span class="string">"contentHtml"</span>)</span>;</span><br><span class="line">        this.mainMail = mail.get<span class="constructor">String(<span class="string">"mainMail"</span>)</span>;</span><br><span class="line">        this.sendgridApiKey = mail.get<span class="constructor">String(<span class="string">"sendgridApiKey"</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//需要执行的部分</span></span><br><span class="line">    public void run<span class="literal">()</span></span><br><span class="line">    &#123;</span><br><span class="line">        logger.info(<span class="string">"=========================MailThread========================="</span>);</span><br><span class="line">        <span class="keyword">try</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//发送邮件给客户嘞</span></span><br><span class="line">            Email from = <span class="keyword">new</span> <span class="constructor">Email(<span class="string">"info@fbabee.com"</span>)</span>;<span class="comment">//发件方@outlook.com</span></span><br><span class="line">            String subject = <span class="string">"领赫 - 消息提醒(*^▽^*)"</span>;<span class="comment">//</span></span><br><span class="line">            Email <span class="keyword">to</span> = <span class="keyword">new</span> <span class="constructor">Email(<span class="params">mainMail</span>)</span>;<span class="comment">//客户的主邮箱 mainMail</span></span><br><span class="line">            Content content = <span class="keyword">new</span> <span class="constructor">Content(<span class="string">"text/html"</span>,<span class="params">contentHtml</span>)</span>;</span><br><span class="line">            Mail mail = <span class="keyword">new</span> <span class="constructor">Mail(<span class="params">from</span>, <span class="params">subject</span>, <span class="params">to</span>, <span class="params">content</span>)</span>;</span><br><span class="line">            String apiKey = sendgridApiKey;<span class="comment">//这个key来源参考4如何获取apiKey</span></span><br><span class="line">            SendGrid sg = <span class="keyword">new</span> <span class="constructor">SendGrid(<span class="params">apiKey</span>)</span>;</span><br><span class="line">            Request request = <span class="keyword">new</span> <span class="constructor">Request()</span>;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                request.set<span class="constructor">Method(Method.POST)</span>;</span><br><span class="line">                request.set<span class="constructor">Endpoint(<span class="string">"mail/send"</span>)</span>;</span><br><span class="line">                request.set<span class="constructor">Body(<span class="params">mail</span>.<span class="params">build</span>()</span>);</span><br><span class="line">                Response response = sg.api(request);</span><br><span class="line">                <span class="keyword">if</span>(response==null<span class="operator"> || </span><span class="module-access"><span class="module"><span class="identifier">JSONObject</span>.</span></span><span class="keyword">to</span><span class="constructor">JSONString(<span class="params">response</span>)</span>.length<span class="literal">()</span>&lt;<span class="number">6</span>)&#123;<span class="comment">//发送账单后的响应信息做发送是否成功检查</span></span><br><span class="line">                    logger.info(<span class="string">"发送消息异常，渠道无响应"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                logger.info(<span class="string">"sendMailResponse:[&#123;&#125;]"</span>,<span class="module-access"><span class="module"><span class="identifier">JSONObject</span>.</span></span><span class="keyword">to</span><span class="constructor">JSONString(<span class="params">response</span>)</span>);</span><br><span class="line">                <span class="keyword">if</span>(response!=null<span class="operator"> &amp;&amp; </span><span class="string">"202"</span>.equals(response.get<span class="constructor">StatusCode()</span>+<span class="string">""</span>))&#123;</span><br><span class="line">                    logger.info(<span class="string">"消息发送成功：[&#123;&#125;]"</span>,response.get<span class="constructor">StatusCode()</span>);</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    logger.info(<span class="string">"发送消息异常，消息未发送成功，请稍后重试"</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">//发送账单信息之后，进行更新相关信息，即是否发送成功、财务状态改为待支付etc</span></span><br><span class="line">            &#125; catch (IOException e) &#123;</span><br><span class="line">                logger.error(<span class="string">"请求异常捕获，MSG=[&#123;&#125;]"</span>,e.get<span class="constructor">Message()</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        catch (Exception e)</span><br><span class="line">        &#123;</span><br><span class="line">            e.print<span class="constructor">StackTrace()</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        logger.info(<span class="string">"=========================MailThread END========================="</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>每次调用的时候：</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//发送邮件给客户嘞</span></span><br><span class="line">                       String url=<span class="string">""</span>;</span><br><span class="line">                       String url0=noticeUrl.split(<span class="string">"\\?"</span>)<span class="literal">[<span class="number">0</span>]</span>;<span class="comment">//前缀 http://114.116.22.115:8888/index.html#/seek/detail</span></span><br><span class="line">                       String url1=(noticeUrl.split(<span class="string">"\\?"</span>)<span class="literal">[<span class="number">1</span>]</span>).split(<span class="string">"&amp;"</span>).length!=<span class="number">2</span>?<span class="string">""</span>:(noticeUrl.split(<span class="string">"\\?"</span>)<span class="literal">[<span class="number">1</span>]</span>).split(<span class="string">"&amp;"</span>)<span class="literal">[<span class="number">1</span>]</span>;<span class="comment">//后缀 tab=1</span></span><br><span class="line">                       url=url0+<span class="string">"?id="</span>+tDeliveryOrder.get<span class="constructor">Id()</span>+<span class="string">"&amp;"</span>+url1;</span><br><span class="line">                       TConsumer tConsumer=tConsumerService.find<span class="constructor">By(<span class="string">"id"</span>,<span class="params">tDeliveryOrder</span>.<span class="params">getConsumerId</span>()</span>);<span class="comment">//客户id</span></span><br><span class="line">                       TMiddleClientUser tMiddleClientUser=tMiddleClientUserService.find<span class="constructor">By(<span class="string">"id"</span>,<span class="params">tConsumer</span>.<span class="params">getAccountId</span>()</span>);</span><br><span class="line">                       String contentHtml=get<span class="constructor">MailContent(<span class="params">tMiddleClientUser</span>.<span class="params">getFirstName</span>()</span>+tMiddleClientUser.get<span class="constructor">LastName()</span>,tDeliveryOrder.get<span class="constructor">TakeDeliveryId()</span>,url);<span class="comment">//客户名称,询价单号,打开的页面地址</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">                       JSONObject mailJSON=<span class="keyword">new</span> <span class="constructor">JSONObject()</span>;</span><br><span class="line">                       mailJSON.put(<span class="string">"contentHtml"</span>,contentHtml);</span><br><span class="line">                       mailJSON.put(<span class="string">"mainMail"</span>,tConsumer.get<span class="constructor">MainMail()</span>);</span><br><span class="line">                       mailJSON.put(<span class="string">"sendgridApiKey"</span>,sendgridApiKey);</span><br><span class="line">                       MailThread thread=<span class="keyword">new</span> <span class="constructor">MailThread(<span class="params">mailJSON</span>)</span>;</span><br><span class="line">                       thread.start<span class="literal">()</span>;</span><br></pre></td></tr></table></figure><h2 id="邮件效果"><a href="#邮件效果" class="headerlink" title="邮件效果"></a>邮件效果</h2><p>先给晾出邮件的效果。  </p><blockquote><p>第一次尝试使用SendGrid发送邮件：  </p></blockquote><p><img src="http://r.photo.store.qq.com/psc?/V13IdniL0W0T32/TCfiP1YaPeRT4Jil9RANX4BFvHaAjGTO21ZnBL.8UU3b*ATRZ4XiOCUkgfb9eneWEQNte7w0GoX1kSJ0FH9dWBYr2bPZsVyvEzU4I5UZcvQ!/r" alt="image"></p><blockquote><p>后来发送的时候想发送html，结果发送的内容变成了html代码，而且附件的名称还乱码，真是神奇了。  </p></blockquote><p><img src="http://r.photo.store.qq.com/psc?/V13IdniL0W0T32/TCfiP1YaPeRT4Jil9RANX7toXqNpL60NEetxpe64wpKDyzAo*4fNUC1mz*aywJBexml.2A01S4fGOgzmYmL2WGgKM.q.l4QUgSqXEhbNih4!/r" alt="image"><br><img src="http://r.photo.store.qq.com/psc?/V13IdniL0W0T32/TCfiP1YaPeRT4Jil9RANXzSDjZfHnJ9mVms8QIiTTM5E82q7xnacy5AsQwUoZX78PFijAGBtOzjLr*kiZ3*he.v4GvE6R5kMe2G.gAGdBAw!/r" alt="image"></p><blockquote><p>再后来我想对这个img进行设置大小这些个，结果…  </p></blockquote><p><img src="http://r.photo.store.qq.com/psc?/V13IdniL0W0T32/TCfiP1YaPeRT4Jil9RANX2WVdozPixujwI5BIkbfJRQ6z4ZH7p4jZ3L.gKsw*WFUuwprQ7mvaJVOyu.Pk0NAU9BgnRH.WcXZi1YkK0fiujA!/r" alt="image"></p><blockquote><p>后来我就想啊，阿里云每次给我发的样式也还可以啊，于是骚操作，我就f12，把阿里云的样式代码复制了一份下来当成邮件内容进行发送，结果阿里云的没毛病。  </p></blockquote><p><img src="http://r.photo.store.qq.com/psc?/V13IdniL0W0T32/TCfiP1YaPeRT4Jil9RANX9l8TsJ01xt0XPvt76uekv8s0BNRW6rBUC1lUqyB05yltJEu.*u5B5PdmHmYvvhaOcziChD8auF5KgRi1uJoSU4!/r" alt="image"></p><p><img src="http://r.photo.store.qq.com/psc?/V13IdniL0W0T32/TCfiP1YaPeRT4Jil9RANX5pYjBiFD.HNLVin2rf4cc3*OODMx3u4*cCJXvNCi3o6qSDKVl1kV1zDX3ti3bMOX.JxP45zmntChdg*5GkQt0Y!/r" alt="image"></p><blockquote><p>解决一下附件名称乱码问题</p></blockquote><p><img src="http://r.photo.store.qq.com/psc?/V13IdniL0W0T32/TCfiP1YaPeRT4Jil9RANX9yT4s8vLJLJukFjyzCWLe6FKYZYMBrRfIrdvrJ.PI7sY8AD7eL15JpEIxbNc4kzQY*212Qna24KROrkbdB7Wi4!/r" alt="image"><br><img src="http://r.photo.store.qq.com/psc?/V13IdniL0W0T32/TCfiP1YaPeRT4Jil9RANX.igs8ZNrQGSq0f.L0h1vNVp883OoZjrpZLGlw*TO1U765OIhUdw7dzZnE4GhqzujJ9uDCVpBqd4vewcVeuB7e0!/r" alt="image"></p><blockquote><p>从下面开始就开始了我的账单样式兼容旅程</p></blockquote><p><img src="http://r.photo.store.qq.com/psc?/V13IdniL0W0T32/TCfiP1YaPeRT4Jil9RANX*YVFKePJU0NOSZxmxuU8vJOCtT536pXYkUeec1XBnnLojgmaqt7pVBtPTC72*8YOeC1BtJ30iOz2kH*mOr01ds!/r" alt="image"></p><p><img src="http://r.photo.store.qq.com/psc?/V13IdniL0W0T32/TCfiP1YaPeRT4Jil9RANX4o*UiwIyuBDv78s8bWgh8ovgCmSscpQ9GcHHHqS4uy7HrXQb0Kt4gSDH.c0u5m5sU01tkhUCD0g67rwp8kfkeg!/r" alt="image"></p><p><img src="http://r.photo.store.qq.com/psc?/V13IdniL0W0T32/TCfiP1YaPeRT4Jil9RANX1jVgZSussaLt.N1Nt8bdp0pUWqnjTI8WaLw23wLoMKImUEoXx0VKLkzKZjpQc5ApJyVpocGX0EWqV3znFS1WrY!/r" alt="image"></p><p><img src="http://r.photo.store.qq.com/psc?/V13IdniL0W0T32/TCfiP1YaPeRT4Jil9RANX*GenUxHQqrSVsK0vfB6eTKVVPqcw.7vxBpMlkX6RH*9biADj0DcHG0KiEp.5HS.pmONx2TT1VgHUvD2EnZwi4U!/r" alt="image"></p><blockquote><p>处理好的账单样式</p></blockquote><p><img src="http://r.photo.store.qq.com/psc?/V13IdniL0W0T32/TCfiP1YaPeRT4Jil9RANX8Rl*OZLw8E6ubzxv4R*d3VmFAvHE5PEHKFYhQD3775lpeHG8a3theqOuZoGVZdhf.AbkCILhDcu5nqttpi4*gE!/r" alt="image"></p><p><img src="http://r.photo.store.qq.com/psc?/V13IdniL0W0T32/TCfiP1YaPeRT4Jil9RANX6ThGnF7nbCkLiuC5NSFqzMuwoM0YuF3WM5cQE93CTtA9V9ajEh7qKsGiUCiAABSdcpL3jPkUHPm.RsD.MhG.pE!/r" alt="image"></p><p><img src="http://r.photo.store.qq.com/psc?/V13IdniL0W0T32/TCfiP1YaPeRT4Jil9RANXyx4SEiOmlqZfzszuKcknSsjLVQJkF**PiXP31WycOzfahyCTxLlPbOW73pgeapNqw4nI9tldk9XUK0BITSj5XU!/r" alt="image"></p><p><img src="http://r.photo.store.qq.com/psc?/V13IdniL0W0T32/TCfiP1YaPeRT4Jil9RANXzrzsI.fkttQUi7wb7EOmgdAxOPNsOH.vusV*31bHJxNEr9MRXpEWDagd6DlUymkid0VXPiRTPNWm1JFOSmYwKk!/r" alt="image"></p><h2 id="SendGrid"><a href="#SendGrid" class="headerlink" title="SendGrid"></a>SendGrid</h2><h3 id="SendGrid介绍"><a href="#SendGrid介绍" class="headerlink" title="SendGrid介绍"></a>SendGrid介绍</h3><p>首先介绍一下SendGrid邮件服务。  </p><blockquote><p>百度百科</p></blockquote><p>SendGrid 是一个电子邮件服务平台，可以帮助市场营销人员跟踪他们的电子邮件统计数据。<br>致力于帮助公司管理事务性邮件，包括航运通知、简报和注册确认等。</p><p>反正理解为就是一个用来发邮件的第三方就是的。<br>链接：<a href="https://app.sendgrid.com/" target="_blank" rel="noopener">https://app.sendgrid.com/</a><br>注册登录进去之后进行一系列操作，你将会获得你的账号、密码、api_key_id、api_key这些个东西就可以了。</p><h3 id="SendGrid-maven依赖"><a href="#SendGrid-maven依赖" class="headerlink" title="SendGrid maven依赖"></a>SendGrid maven依赖</h3><p>maven依赖jar包：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- https://mvnrepository.com/artifact/com.sendgrid/sendgrid-java --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.sendgrid<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>sendgrid-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>4.2.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="SendGrid-Demo"><a href="#SendGrid-Demo" class="headerlink" title="SendGrid Demo"></a>SendGrid Demo</h3><p>下面我就贴一下测试demo:  </p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">package com.yourshares.modelTest;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSONObject;</span><br><span class="line"><span class="keyword">import</span> com.paypal.base.codec.binary.Base64;</span><br><span class="line"><span class="keyword">import</span> com.sendgrid.*;</span><br><span class="line"><span class="keyword">import</span> com.yourshares.Tester;</span><br><span class="line"><span class="keyword">import</span> com.yourshares.common.tools.LogFileName;</span><br><span class="line"><span class="keyword">import</span> com.yourshares.common.utils.LoggerUtils;</span><br><span class="line"><span class="keyword">import</span> com.yourshares.entity.service.TOutRepoOrderExpenseService;</span><br><span class="line"><span class="keyword">import</span> org.junit.Test;</span><br><span class="line"><span class="keyword">import</span> org.slf4j.Logger;</span><br><span class="line"><span class="keyword">import</span> org.springframework.beans.factory.annotation.Autowired;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.ByteArrayOutputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.File;</span><br><span class="line"><span class="keyword">import</span> java.io.FileInputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Mail 模块测试</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MailTest</span> <span class="title">extends</span> <span class="title">Tester</span> </span>&#123;</span><br><span class="line">    <span class="type">Logger</span> logger = <span class="type">LoggerUtils</span>.<span class="type">Logger</span>(<span class="type">LogFileName</span>.<span class="type">API</span>);</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="type">String</span> sendgridApiKey=<span class="string">"此处填上您在SendGrid上的APIKEY"</span>;</span><br><span class="line"><span class="comment">//    private final static String DEST = "D:\\80afa41a3bfc474cbf1ac8b5bc1d.pdf";//生成pdf的路径</span></span><br><span class="line"><span class="comment">//    private final static String SRC = "D:\\3b33a68bbf52417aac48687937352464.html";//html文件路径</span></span><br><span class="line"><span class="comment">//    public static final String FONT = "F:\otosanscjksc_downcc\otoSansCJKSC\otoSansCJKsc-Thin.otf";//本地字体路径（百度下载）</span></span><br></pre></td></tr></table></figure><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">@Test</span><br><span class="line">  public void style<span class="constructor">Test()</span>&#123;</span><br><span class="line">      String url=<span class="string">""</span>;</span><br><span class="line">      String noticeUrl=<span class="string">"http://114.116.22.115:8888/index.html#/pickup/directlist/detail?id=直发提货单ID"</span>;</span><br><span class="line">      <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">"url0:  "</span>+noticeUrl.split(<span class="string">"\\?"</span>)<span class="literal">[<span class="number">0</span>]</span>);</span><br><span class="line">      <span class="module-access"><span class="module"><span class="identifier">System</span>.</span></span>out.println(<span class="string">"url1:  "</span>+noticeUrl.split(<span class="string">"\\?"</span>)<span class="literal">[<span class="number">1</span>]</span>);</span><br><span class="line">      String url0=noticeUrl.split(<span class="string">"\\?"</span>)<span class="literal">[<span class="number">0</span>]</span>;<span class="comment">//前缀 http://114.116.22.115:8888/index.html#/seek/detail</span></span><br><span class="line">      String url1=(noticeUrl.split(<span class="string">"\\?"</span>)<span class="literal">[<span class="number">1</span>]</span>).split(<span class="string">"&amp;"</span>).length!=<span class="number">2</span>?<span class="string">""</span>:(noticeUrl.split(<span class="string">"\\?"</span>)<span class="literal">[<span class="number">1</span>]</span>).split(<span class="string">"&amp;"</span>)<span class="literal">[<span class="number">1</span>]</span>;<span class="comment">//后缀 tab=1</span></span><br><span class="line">      url=url0+<span class="string">"?id="</span>+<span class="number">23</span>+<span class="string">"&amp;"</span>+url1;</span><br><span class="line">      String contentHtml=get<span class="constructor">MailContent(<span class="string">"冯莎娜"</span>,<span class="string">"TD202001010809435400000"</span>,<span class="params">url</span>)</span>;<span class="comment">//客户名称,询价单号,打开的页面地址</span></span><br><span class="line">      Email from = <span class="keyword">new</span> <span class="constructor">Email(<span class="string">"info@fbabee.com"</span>)</span>;<span class="comment">//发件方@outlook.com</span></span><br><span class="line">      String subject = <span class="string">"领赫 - 消息提醒(*^▽^*)"</span>;<span class="comment">//</span></span><br><span class="line">      Email <span class="keyword">to</span> = <span class="keyword">new</span> <span class="constructor">Email(<span class="string">"2915324940@qq.com"</span>)</span>;<span class="comment">//客户的主邮箱</span></span><br><span class="line">      Content content = <span class="keyword">new</span> <span class="constructor">Content(<span class="string">"text/html"</span>,<span class="params">contentHtml</span>)</span>;</span><br><span class="line">      Mail mail = <span class="keyword">new</span> <span class="constructor">Mail(<span class="params">from</span>, <span class="params">subject</span>, <span class="params">to</span>, <span class="params">content</span>)</span>;</span><br><span class="line">      String apiKey = sendgridApiKey;<span class="comment">//这个key来源参考4如何获取apiKey</span></span><br><span class="line">      SendGrid sg = <span class="keyword">new</span> <span class="constructor">SendGrid(<span class="params">apiKey</span>)</span>;</span><br><span class="line">      Request request = <span class="keyword">new</span> <span class="constructor">Request()</span>;</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">          request.set<span class="constructor">Method(Method.POST)</span>;</span><br><span class="line">          request.set<span class="constructor">Endpoint(<span class="string">"mail/send"</span>)</span>;</span><br><span class="line">          request.set<span class="constructor">Body(<span class="params">mail</span>.<span class="params">build</span>()</span>);</span><br><span class="line">          Response response = sg.api(request);</span><br><span class="line">          <span class="keyword">if</span>(response==null<span class="operator"> || </span><span class="module-access"><span class="module"><span class="identifier">JSONObject</span>.</span></span><span class="keyword">to</span><span class="constructor">JSONString(<span class="params">response</span>)</span>.length<span class="literal">()</span>&lt;<span class="number">6</span>)&#123;<span class="comment">//发送账单后的响应信息做发送是否成功检查</span></span><br><span class="line">              logger.info(<span class="string">"发送消息异常，渠道无响应"</span>);</span><br><span class="line">          &#125;</span><br><span class="line">          logger.info(<span class="string">"sendMailResponse:[&#123;&#125;]"</span>,<span class="module-access"><span class="module"><span class="identifier">JSONObject</span>.</span></span><span class="keyword">to</span><span class="constructor">JSONString(<span class="params">response</span>)</span>);</span><br><span class="line">          <span class="comment">//账单发送成功，后续处理更改发货单状态</span></span><br><span class="line">          <span class="keyword">if</span>(response!=null<span class="operator"> &amp;&amp; </span><span class="string">"202"</span>.equals(response.get<span class="constructor">StatusCode()</span>+<span class="string">""</span>))&#123;</span><br><span class="line">              logger.info(<span class="string">"消息发送成功：[&#123;&#125;]"</span>,response.get<span class="constructor">StatusCode()</span>);</span><br><span class="line">          &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">              logger.info(<span class="string">"发送消息异常，消息未发送成功，请稍后重试"</span>);</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="comment">//发送账单信息之后，进行更新相关信息，即是否发送成功、财务状态改为待支付etc</span></span><br><span class="line">      &#125; catch (IOException e) &#123;</span><br><span class="line">          logger.error(<span class="string">"请求异常捕获，MSG=[&#123;&#125;]"</span>,e.get<span class="constructor">Message()</span>);</span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>这个地方是做邮件样式处理的demo：  </p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @param middleClientUserName 客户名称</span></span><br><span class="line"><span class="comment"> * @param orderId 订单号</span></span><br><span class="line"><span class="comment"> * @return</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">public String getMailContent(String middleClientUserName,String orderId,String noticeUrl)&#123;</span><br><span class="line">    StringBuffer html=new StringBuffer(<span class="string">"&lt;!DOCTYPE html&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;html&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;head&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;meta charset=<span class="subst">\"</span>utf-8<span class="subst">\"</span> /&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;/head&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;body&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;table width=<span class="subst">\"</span>800<span class="subst">\"</span> border=<span class="subst">\"</span>0<span class="subst">\"</span> align=<span class="subst">\"</span>center<span class="subst">\"</span> cellpadding=<span class="subst">\"</span>0<span class="subst">\"</span> cellspacing=<span class="subst">\"</span>0<span class="subst">\"</span> bgcolor=<span class="subst">\"</span>#ffffff<span class="subst">\"</span> style=<span class="subst">\"</span>font-family:'Microsoft YaHei';<span class="subst">\"</span>&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;tbody&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;tr&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;td&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;table width=<span class="subst">\"</span>800<span class="subst">\"</span> border=<span class="subst">\"</span>0<span class="subst">\"</span> align=<span class="subst">\"</span>center<span class="subst">\"</span> cellpadding=<span class="subst">\"</span>0<span class="subst">\"</span> cellspacing=<span class="subst">\"</span>0<span class="subst">\"</span> height=<span class="subst">\"</span>40<span class="subst">\"</span>&gt;&lt;/table&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;/td&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;/tr&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;tr&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;td&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;table width=<span class="subst">\"</span>800<span class="subst">\"</span> border=<span class="subst">\"</span>0<span class="subst">\"</span> align=<span class="subst">\"</span>center<span class="subst">\"</span> cellpadding=<span class="subst">\"</span>0<span class="subst">\"</span> cellspacing=<span class="subst">\"</span>0<span class="subst">\"</span> bgcolor=<span class="subst">\"</span>#ffffff<span class="subst">\"</span> height=<span class="subst">\"</span>48<span class="subst">\"</span> style=<span class="subst">\"</span>font-family:'Microsoft YaHei';<span class="subst">\"</span>&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;tbody&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;tr&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;td height=<span class="subst">\"</span>48<span class="subst">\"</span> border=<span class="subst">\"</span>0<span class="subst">\"</span> align=<span class="subst">\"</span>center<span class="subst">\"</span> valign=<span class="subst">\"</span>middle<span class="subst">\"</span> style=<span class="subst">\"</span>padding-left:20px;<span class="subst">\"</span>&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;a href=<span class="subst">\"</span>javascript:void(0);<span class="subst">\"</span> target=<span class="subst">\"</span>_blank<span class="subst">\"</span> rel=<span class="subst">\"</span>noopener<span class="subst">\"</span>&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;img src=<span class="subst">\"</span>http://fba-srm.oss-cn-hongkong.aliyuncs.com/202002241734417550微信图片_20200224173432.png<span class="subst">\"</span> width=<span class="subst">\"</span>120px<span class="subst">\"</span> height=<span class="subst">\"</span>25px<span class="subst">\"</span> border=<span class="subst">\"</span>0<span class="subst">\"</span>&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;/a&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;/td&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;td width=<span class="subst">\"</span>703<span class="subst">\"</span> height=<span class="subst">\"</span>48<span class="subst">\"</span> colspan=<span class="subst">\"</span>2<span class="subst">\"</span> align=<span class="subst">\"</span>right<span class="subst">\"</span> valign=<span class="subst">\"</span>middle<span class="subst">\"</span> style=<span class="subst">\"</span>color:#ffffff; padding-right:20px;<span class="subst">\"</span>&gt;&lt;/td&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;/tr&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;/tbody&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;/table&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;/td&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;/tr&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;tr&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;td&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;table width=<span class="subst">\"</span>800<span class="subst">\"</span> border=<span class="subst">\"</span>0<span class="subst">\"</span> align=<span class="subst">\"</span>left<span class="subst">\"</span> cellpadding=<span class="subst">\"</span>0<span class="subst">\"</span> cellspacing=<span class="subst">\"</span>0<span class="subst">\"</span> style=<span class="subst">\"</span>border-top:none; border-bottom:none; padding:0 20px;font-size:14px;color:#333333;<span class="subst">\"</span>&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;tbody&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;tr&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;td width=<span class="subst">\"</span>760<span class="subst">\"</span> height=<span class="subst">\"</span>56<span class="subst">\"</span> border=<span class="subst">\"</span>0<span class="subst">\"</span> align=<span class="subst">\"</span>left<span class="subst">\"</span> colspan=<span class="subst">\"</span>2<span class="subst">\"</span> style=<span class="subst">\"</span> font-size:16px;vertical-align:bottom;<span class="subst">\"</span>&gt;尊敬的"</span> +</span><br><span class="line">            <span class="string">"&lt;a target=<span class="subst">\"</span>_blank<span class="subst">\"</span> href=<span class="subst">\"</span>javascript:void(0);<span class="subst">\"</span> style=<span class="subst">\"</span>font-size:16px; font-weight:bold;<span class="subst">\"</span> rel=<span class="subst">\"</span>noopener<span class="subst">\"</span>&gt;"</span>+middleClientUserName+<span class="string">"&lt;/a&gt;:&lt;/td&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;/tr&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;tr&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;td width=<span class="subst">\"</span>760<span class="subst">\"</span> height=<span class="subst">\"</span>30<span class="subst">\"</span> border=<span class="subst">\"</span>0<span class="subst">\"</span> align=<span class="subst">\"</span>left<span class="subst">\"</span> colspan=<span class="subst">\"</span>2<span class="subst">\"</span>&gt;&amp;nbsp;&lt;/td&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;/tr&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;tr&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;td width=<span class="subst">\"</span>40<span class="subst">\"</span> height=<span class="subst">\"</span>32<span class="subst">\"</span> border=<span class="subst">\"</span>0<span class="subst">\"</span> align=<span class="subst">\"</span>left<span class="subst">\"</span> valign=<span class="subst">\"</span>middle<span class="subst">\"</span> style=<span class="subst">\"</span> width:40px; text-align:left;vertical-align:middle; line-height:32px; float:left;<span class="subst">\"</span>&gt;&amp;nbsp;&lt;/td&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;td width=<span class="subst">\"</span>720<span class="subst">\"</span> height=<span class="subst">\"</span>32<span class="subst">\"</span> border=<span class="subst">\"</span>0<span class="subst">\"</span> align=<span class="subst">\"</span>left<span class="subst">\"</span> style=<span class="subst">\"</span> width:720px; text-align:left;vertical-align:middle;line-height:32px;<span class="subst">\"</span>&gt;您提交的询价单&lt;a href=<span class="subst">\"</span>javascript:void(0);<span class="subst">\"</span> target=<span class="subst">\"</span>_blank<span class="subst">\"</span> rel=<span class="subst">\"</span>noopener<span class="subst">\"</span>&gt;(ID:"</span>+orderId+<span class="string">")&lt;/a&gt;，已完成人工报价，请前往查看&lt;/td&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;/tr&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;tr&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;td width=<span class="subst">\"</span>720<span class="subst">\"</span> height=<span class="subst">\"</span>32<span class="subst">\"</span> colspan=<span class="subst">\"</span>2<span class="subst">\"</span> style=<span class="subst">\"</span>padding-left:40px;line-height:32px;<span class="subst">\"</span>&gt;&lt;a href=<span class="subst">\"</span>"</span>+noticeUrl+<span class="string">"<span class="subst">\"</span> target=<span class="subst">\"</span>_blank<span class="subst">\"</span> rel=<span class="subst">\"</span>noopener<span class="subst">\"</span>&gt;点此查看&lt;/a&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;/td&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;/tr&gt;"</span> +</span><br><span class="line">            <span class="string">""</span> +</span><br><span class="line">            <span class="string">"&lt;tr&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;td width=<span class="subst">\"</span>720<span class="subst">\"</span> height=<span class="subst">\"</span>32<span class="subst">\"</span> colspan=<span class="subst">\"</span>2<span class="subst">\"</span> style=<span class="subst">\"</span>padding-left:40px;<span class="subst">\"</span>&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;/td&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;/tr&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;tr&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;td width=<span class="subst">\"</span>720<span class="subst">\"</span> height=<span class="subst">\"</span>32<span class="subst">\"</span> colspan=<span class="subst">\"</span>2<span class="subst">\"</span> style=<span class="subst">\"</span>padding-left:40px;<span class="subst">\"</span>&gt;&lt;/td&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;/tr&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;tr&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;td width=<span class="subst">\"</span>720<span class="subst">\"</span> height=<span class="subst">\"</span>32<span class="subst">\"</span> colspan=<span class="subst">\"</span>2<span class="subst">\"</span> style=<span class="subst">\"</span>padding-left:40px;<span class="subst">\"</span>&gt;&amp;nbsp;&lt;/td&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;/tr&gt;"</span> +</span><br><span class="line">            <span class="string">""</span> +</span><br><span class="line">            <span class="string">"&lt;tr&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;td width=<span class="subst">\"</span>720<span class="subst">\"</span> height=<span class="subst">\"</span>14<span class="subst">\"</span> colspan=<span class="subst">\"</span>2<span class="subst">\"</span> style=<span class="subst">\"</span>padding-bottom:16px; border-bottom:1px dashed #e5e5e5;font-family:'Microsoft YaHei';<span class="subst">\"</span>&gt; &lt;/td&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;/tr&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;tr&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;td width=<span class="subst">\"</span>720<span class="subst">\"</span> height=<span class="subst">\"</span>14<span class="subst">\"</span> colspan=<span class="subst">\"</span>2<span class="subst">\"</span> style=<span class="subst">\"</span>padding:8px 0 28px;color:#999999; font-size:12px;font-family:'Microsoft YaHei';<span class="subst">\"</span>&gt;此为系统邮件请勿回复&lt;/td&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;/tr&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;/tbody&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;/table&gt;"</span> +</span><br><span class="line">            <span class="string">""</span> +</span><br><span class="line">            <span class="string">"&lt;/td&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;/tr&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;tr&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;td&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;table align=<span class="subst">\"</span>center<span class="subst">\"</span> border=<span class="subst">\"</span>0<span class="subst">\"</span> width=<span class="subst">\"</span>100%<span class="subst">\"</span> cellpadding=<span class="subst">\"</span>0<span class="subst">\"</span> cellspacing=<span class="subst">\"</span>0<span class="subst">\"</span> bgcolor=<span class="subst">\"</span>#fff<span class="subst">\"</span>&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;tbody&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;tr&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;td&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;p style=<span class="subst">\"</span>line-height: 22px; font-family: 'Microsoft YaHei'; font-size: 12px; color: #999; text-align: center;<span class="subst">\"</span>&gt;&lt;/p&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;/td&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;/tr&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;/tbody&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;/table&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;/td&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;/tr&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;/tbody&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;/table&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;/body&gt;"</span> +</span><br><span class="line">            <span class="string">"&lt;/html&gt;"</span>);</span><br><span class="line">    logger.info(<span class="string">"账单内容："</span>+html);</span><br><span class="line">    return html.toString();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个地方是我写好的一个html样式，然后测试发送这个邮件内容到我自己的邮箱里面去：  </p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 发送样式 的邮件   https://www.sandbox.paypal.com/invoice/p/#83NQMXZRG6KPAZ4Y</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * @throws IOException</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">@Test</span><br><span class="line">public void test4() throws  IOException&#123;</span><br><span class="line">    Email from = new Email(<span class="string">"info@fbabee.com"</span>);<span class="comment">//发件方@outlook.com</span></span><br><span class="line">    String subject = <span class="string">"领赫 - 账单提醒(*^▽^*)"</span>;<span class="comment">//Sending with Twilio SendGrid is Fun</span></span><br><span class="line">    Email to = new Email(<span class="string">"2915324940@qq.com"</span>);<span class="comment">//收件方@gmail.com</span></span><br><span class="line">    <span class="comment">//"&lt;div style='width:800px;height:600px;background-color:black'&gt; &lt;img  width='200px' height='300px'  src='http://m.qpic.cn/psc?/V11rBmNJ1xB9lV/hsnfJ.a5yg7.BhItQyNwPS2w5W77Ya6n7UEvCBQEhtvp5TN5vlqR7nIjceIjHX.H5V6eg9RYIZp65ofTS1zkiEpKFmlRFGi7*beRV26DJLI!/b&amp;bo=VQhABgAKgAcRCag!&amp;rf=viewer_4'&gt;&lt;/img&gt;&lt;/div&gt;"</span></span><br><span class="line">    Content content = new Content(<span class="string">"text/html"</span>,<span class="string">"&lt;!DOCTYPE html&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"&lt;html&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span>&lt;head&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span>&lt;meta charset=<span class="subst">\"</span>utf-8<span class="subst">\"</span> /&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span>&lt;title&gt;&lt;/title&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span>&lt;style&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>.right&#123;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>text-align: right;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>font-size: 10px;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&#125;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>.indent&#123;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>text-indent: 180px;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>font-size: 10px;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&#125;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>.widd&#123;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>width: 230px;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>font-size: 10px;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&#125;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>.centt&#123;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>text-align: center;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>font-size: 10px;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&#125;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>.bolder&#123;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>font-size: 10px;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>font-weight: bolder;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&#125;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>.ant-btn-red &#123;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>    color: #FFF;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>    background-color: #FF5A44;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>    border-color: #FF5A44;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>    text-shadow: 0 -1px 0 rgba(0,0,0,0.12);<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>    -webkit-box-shadow: 0 2px 0 rgba(0,0,0,0.045);<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>    box-shadow: 0 2px 0 rgba(0,0,0,0.045);<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&#125;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">".ant-btn &#123;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>    line-height: 2.2;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>    position: relative;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>    display: inline-block;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>    font-weight: 400;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>    white-space: nowrap;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>    text-align: center;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>    background-image: none;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>    border: 1px solid transparent;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>    -webkit-box-shadow: 0 2px 0 rgba(0,0,0,0.015);<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>    box-shadow: 0 2px 0 rgba(0,0,0,0.015);<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>    cursor: pointer;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>    -webkit-transition: all .3s cubic-bezier(.645, .045, .355, 1);<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>    transition: all .3s cubic-bezier(.645, .045, .355, 1);<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>    -webkit-user-select: none;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>    -moz-user-select: none;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>    -ms-user-select: none;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>    user-select: none;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>    -ms-touch-action: manipulation;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>    touch-action: manipulation;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>    height: 32px;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>    padding: 0 15px;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>    font-size: 14px;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>    border-radius: 4px;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>    color: rgba(0,0,0,0.65);<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>    background-color: #fff;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>    border-color: #d9d9d9;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&#125;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>.font&#123;font-size: 10px;&#125;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span>&lt;/style&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span>&lt;/head&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span>&lt;body&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span>&lt;table width=<span class="subst">\"</span>650px<span class="subst">\"</span> height=<span class="subst">\"</span>100%<span class="subst">\"</span> style=<span class="subst">\"</span>background-color: white;margin: auto; font-family:'Microsoft YaHei';<span class="subst">\"</span>&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;tr style=<span class="subst">\"</span>height: 25px;<span class="subst">\"</span>&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;td colspan=<span class="subst">\"</span>4<span class="subst">\"</span>&gt;&lt;/td&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;td style=<span class="subst">\"</span>width: 50px;<span class="subst">\"</span>&gt;&lt;/td&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;/tr&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;tr &gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;td colspan=<span class="subst">\"</span>3<span class="subst">\"</span> class=<span class="subst">\"</span>bolder<span class="subst">\"</span>&gt;&lt;img width=<span class="subst">\"</span>120px<span class="subst">\"</span> height=<span class="subst">\"</span>25px<span class="subst">\"</span> src=<span class="subst">\"</span>http://fba-srm.oss-cn-hongkong.aliyuncs.com/202002241734417550微信图片_20200224173432.png<span class="subst">\"</span>/&gt;&lt;/td&gt;&lt;!--FBABEE--&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;td colspan=<span class="subst">\"</span>2<span class="subst">\"</span> style=<span class="subst">\"</span>text-align: right;font-size: 25px;font-weight: bold;<span class="subst">\"</span> &gt;INVOICE&lt;/td&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;/tr&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;tr style=<span class="subst">\"</span>height: 2px;<span class="subst">\"</span>&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;td colspan=<span class="subst">\"</span>5<span class="subst">\"</span>&gt;&lt;/td&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;/tr&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;tr&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;td colspan=<span class="subst">\"</span>3<span class="subst">\"</span> class=<span class="subst">\"</span>font<span class="subst">\"</span>&gt;Shenzhen Linkhub Supply-Chain Management Co.LTD&lt;/td&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;td style=<span class="subst">\"</span>font-size: 10px;text-align: right;font-weight: bolder;<span class="subst">\"</span>&gt;Invoince ID&lt;/td&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;td style=<span class="subst">\"</span>font-size: 10px;text-align: right;<span class="subst">\"</span>&gt;1904193751&lt;/td&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;/tr&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;tr&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;td colspan=<span class="subst">\"</span>3<span class="subst">\"</span> class=<span class="subst">\"</span>font<span class="subst">\"</span>&gt;Add:302,Building D,New Retail Tech Industrial Zoon&lt;/td&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;td style=<span class="subst">\"</span>font-size: 10px;text-align: right;font-weight: bolder;<span class="subst">\"</span>&gt;FBA ID&lt;/td&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;td style=<span class="subst">\"</span>font-size: 10px;text-align: right;<span class="subst">\"</span>&gt;XXXXXXX&lt;/td&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;/tr&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;tr&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;td colspan=<span class="subst">\"</span>3<span class="subst">\"</span> class=<span class="subst">\"</span>font<span class="subst">\"</span>&gt;GUshu,Xixiang Street,Bao'An,518000&lt;/td&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;td style=<span class="subst">\"</span>font-size: 10px;text-align: right;font-weight: bolder;<span class="subst">\"</span>&gt;Date Issued&lt;/td&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;td style=<span class="subst">\"</span>font-size: 10px;text-align: right;<span class="subst">\"</span>&gt;2019/05/02&lt;/td&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;/tr&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;tr&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;td colspan=<span class="subst">\"</span>3<span class="subst">\"</span> class=<span class="subst">\"</span>font<span class="subst">\"</span>&gt;Guangdong Province,China&lt;/td&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;td style=<span class="subst">\"</span>font-size: 10px;text-align: right;font-weight: bolder;<span class="subst">\"</span>&gt;Due Date&lt;/td&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;td style=<span class="subst">\"</span>font-size: 10px;text-align: right;<span class="subst">\"</span>&gt;2019/05/02&lt;/td&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;/tr&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;tr style=<span class="subst">\"</span>height: 30px;<span class="subst">\"</span>&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;td colspan=<span class="subst">\"</span>5<span class="subst">\"</span>&gt;&lt;/td&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;/tr&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;tr&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;td colspan=<span class="subst">\"</span>2<span class="subst">\"</span> class=<span class="subst">\"</span>bolder<span class="subst">\"</span>&gt;Bill to&lt;/td&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;td colspan=<span class="subst">\"</span>3<span class="subst">\"</span> class=<span class="subst">\"</span>bolder<span class="subst">\"</span>&gt;Ship to&lt;/td&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;/tr&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;tr style=<span class="subst">\"</span>height: 2px;<span class="subst">\"</span>&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;td colspan=<span class="subst">\"</span>5<span class="subst">\"</span>&gt;&lt;/td&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;/tr&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;tr&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;td colspan=<span class="subst">\"</span>2<span class="subst">\"</span> class=<span class="subst">\"</span>font<span class="subst">\"</span>&gt;公司名称&lt;/td&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;td colspan=<span class="subst">\"</span>3<span class="subst">\"</span> class=<span class="subst">\"</span>font<span class="subst">\"</span>&gt;24300 Nandina Ave,Moreno Valley,CA,&lt;/td&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;/tr&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;tr&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;td colspan=<span class="subst">\"</span>2<span class="subst">\"</span> class=<span class="subst">\"</span>font<span class="subst">\"</span>&gt;公司地址&lt;/td&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;td colspan=<span class="subst">\"</span>3<span class="subst">\"</span> class=<span class="subst">\"</span>font<span class="subst">\"</span>&gt;92551,United States&lt;/td&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;/tr&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;tr style=<span class="subst">\"</span>height: 30px;<span class="subst">\"</span>&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;td colspan=<span class="subst">\"</span>5<span class="subst">\"</span>&gt;&lt;/td&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;/tr&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;tr&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;td class=<span class="subst">\"</span>bolder<span class="subst">\"</span>&gt;Items Description&lt;/td&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;td colspan=<span class="subst">\"</span>4<span class="subst">\"</span>&gt;&lt;/td&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;/tr&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;tr style=<span class="subst">\"</span>height: 2px;<span class="subst">\"</span>&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;td colspan=<span class="subst">\"</span>5<span class="subst">\"</span>&gt;&lt;/td&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;/tr&gt;&lt;tr&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;td class=<span class="subst">\"</span>bolder<span class="subst">\"</span>&gt;费用集合一&lt;/td&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;td class=<span class="subst">\"</span>bolder indent<span class="subst">\"</span> colspan=<span class="subst">\"</span>2<span class="subst">\"</span>&gt;Rate&lt;/td&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;td class=<span class="subst">\"</span>centt bolder<span class="subst">\"</span>&gt;Quantity&lt;/td&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;td class=<span class="subst">\"</span>right bolder<span class="subst">\"</span>&gt;Amount&lt;/td&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;/tr&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;tr style=<span class="subst">\"</span>height: 2px;<span class="subst">\"</span>&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;td colspan=<span class="subst">\"</span>5<span class="subst">\"</span>&gt;&lt;/td&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;/tr&gt;&lt;tr&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;td class=<span class="subst">\"</span>font<span class="subst">\"</span>&gt;固定费用&lt;/td&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;td class=<span class="subst">\"</span>indent<span class="subst">\"</span> colspan=<span class="subst">\"</span>2<span class="subst">\"</span>&gt;1&lt;/td&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;td class=<span class="subst">\"</span>centt<span class="subst">\"</span>&gt;x 10 &lt;/td&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;td class=<span class="subst">\"</span>right<span class="subst">\"</span>&gt;$ 10.00&lt;/td&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;/tr&gt;&lt;tr&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;td class=<span class="subst">\"</span>font<span class="subst">\"</span>&gt;快递取件费用&lt;/td&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;td class=<span class="subst">\"</span>indent<span class="subst">\"</span> colspan=<span class="subst">\"</span>2<span class="subst">\"</span>&gt;0/kg&lt;/td&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;td class=<span class="subst">\"</span>centt<span class="subst">\"</span>&gt;x 121kg&lt;/td&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;td class=<span class="subst">\"</span>right<span class="subst">\"</span>&gt;$ 0.00&lt;/td&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;/tr&gt;&lt;tr&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;td class=<span class="subst">\"</span>font<span class="subst">\"</span>&gt;关税&lt;/td&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;td class=<span class="subst">\"</span>indent<span class="subst">\"</span> colspan=<span class="subst">\"</span>2<span class="subst">\"</span>&gt;0&lt;/td&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;td class=<span class="subst">\"</span>centt<span class="subst">\"</span>&gt;x 1331 &lt;/td&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;td class=<span class="subst">\"</span>right<span class="subst">\"</span>&gt;$ 0.00&lt;/td&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;/tr&gt;&lt;tr&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;td class=<span class="subst">\"</span>font<span class="subst">\"</span>&gt;重量变动费用&lt;/td&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;td class=<span class="subst">\"</span>indent<span class="subst">\"</span> colspan=<span class="subst">\"</span>2<span class="subst">\"</span>&gt;8/kg&lt;/td&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;td class=<span class="subst">\"</span>centt<span class="subst">\"</span>&gt;x 121kg&lt;/td&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;td class=<span class="subst">\"</span>right<span class="subst">\"</span>&gt;$ 968.00&lt;/td&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;/tr&gt;&lt;tr style=<span class="subst">\"</span>height: 2px;<span class="subst">\"</span>&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;td colspan=<span class="subst">\"</span>5<span class="subst">\"</span>&gt;&lt;/td&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;/tr&gt;&lt;tr&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;td colspan=<span class="subst">\"</span>1<span class="subst">\"</span> class=<span class="subst">\"</span>bolder<span class="subst">\"</span>&gt;偏远地区配送附加费&lt;/td&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;td colspan=<span class="subst">\"</span>4<span class="subst">\"</span>&gt;&lt;/td&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;/tr&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;/tr&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;tr style=<span class="subst">\"</span>height: 2px;<span class="subst">\"</span>&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;td colspan=<span class="subst">\"</span>5<span class="subst">\"</span>&gt;&lt;/td&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;/tr&gt;&lt;tr&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;td class=<span class="subst">\"</span>font<span class="subst">\"</span>&gt;偏远地区配送附加费&lt;/td&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;td class=<span class="subst">\"</span>indent<span class="subst">\"</span> colspan=<span class="subst">\"</span>2<span class="subst">\"</span>&gt;90/kg&lt;/td&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;td class=<span class="subst">\"</span>centt<span class="subst">\"</span>&gt;x 121kg&lt;/td&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;td class=<span class="subst">\"</span>right<span class="subst">\"</span>&gt;$ 10890.00&lt;/td&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;/tr&gt;&lt;tr style=<span class="subst">\"</span>height: 2px;<span class="subst">\"</span>&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;td colspan=<span class="subst">\"</span>5<span class="subst">\"</span>&gt;&lt;/td&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;/tr&gt;&lt;tr&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;td class=<span class="subst">\"</span>bolder<span class="subst">\"</span>&gt;Total&lt;/td&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;td colspan=<span class="subst">\"</span>3<span class="subst">\"</span>&gt;&lt;/td&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;td class=<span class="subst">\"</span>right bolder<span class="subst">\"</span>&gt;$ 11868.00&lt;/td&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;/tr&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;tr style=<span class="subst">\"</span>height: 30px;<span class="subst">\"</span>&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;td colspan=<span class="subst">\"</span>5<span class="subst">\"</span>&gt;&lt;/td&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;/tr&gt;&lt;tr&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;td class=<span class="subst">\"</span>bolder<span class="subst">\"</span>&gt;Bank Infomation&lt;/td&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;td colspan=<span class="subst">\"</span>4<span class="subst">\"</span>&gt;&lt;/td&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;/tr&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;tr style=<span class="subst">\"</span>height: 2px;<span class="subst">\"</span>&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;td colspan=<span class="subst">\"</span>5<span class="subst">\"</span>&gt;&lt;/td&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;/tr&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;tr&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;td style=<span class="subst">\"</span>width: 100px;<span class="subst">\"</span> class=<span class="subst">\"</span>bolder<span class="subst">\"</span>&gt;Paypal Account&lt;/td&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;td class=<span class="subst">\"</span>widd<span class="subst">\"</span>&gt;Palpal@fbabee.com&lt;/td&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;td colspan=<span class="subst">\"</span>3<span class="subst">\"</span>&gt;&lt;/td&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;/tr&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;tr&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;td class=<span class="subst">\"</span>bolder<span class="subst">\"</span>&gt;Payoneer Account&lt;/td&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;td class=<span class="subst">\"</span>widd<span class="subst">\"</span>&gt;fsn2915324940@163.com&lt;/td&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;td colspan=<span class="subst">\"</span>3<span class="subst">\"</span>&gt;&lt;/td&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;/tr&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;tr&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;td class=<span class="subst">\"</span>bolder<span class="subst">\"</span>&gt;T/T&lt;/td&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;td class=<span class="subst">\"</span>widd<span class="subst">\"</span>&gt;银行账号信息，暂时明确不了&lt;/td&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;td colspan=<span class="subst">\"</span>3<span class="subst">\"</span>&gt;&lt;/td&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;/tr&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;tr style=<span class="subst">\"</span>height: 80px;<span class="subst">\"</span>&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;td colspan=<span class="subst">\"</span>5<span class="subst">\"</span>&gt;&lt;/td&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;/tr&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;/tr&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;tr style=<span class="subst">\"</span>height: 30px;<span class="subst">\"</span>&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;td colspan=<span class="subst">\"</span>5<span class="subst">\"</span>&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;div style=<span class="subst">\"</span>margin:0 auto;width:200px;<span class="subst">\"</span>&gt; <span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;a href=<span class="subst">\"</span>https://www.baidu.com<span class="subst">\"</span> class=<span class="subst">\"</span>ant-btn-red ant-btn<span class="subst">\"</span> style=<span class="subst">\"</span> text-decoration: none;<span class="subst">\"</span>&gt;PayPal确认支付&lt;/a&gt; <span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;/div&gt; <span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;/td&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span><span class="subst">\t</span>&lt;/tr&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span><span class="subst">\t</span>&lt;/table&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"<span class="subst">\t</span>&lt;/body&gt;<span class="subst">\n</span>"</span> +</span><br><span class="line">            <span class="string">"&lt;/html&gt;"</span> );</span><br><span class="line">    Mail mail = new Mail(from, subject, to, content);</span><br><span class="line">    String apiKey = sendgridApiKey;<span class="comment">//这个key来源参考4如何获取apiKey</span></span><br><span class="line">    SendGrid sg = new SendGrid(apiKey);</span><br><span class="line">    Request request = new Request();</span><br><span class="line">    try &#123;</span><br><span class="line">        request.setMethod(Method.POST);</span><br><span class="line">        request.setEndpoint(<span class="string">"mail/send"</span>);</span><br><span class="line">        request.setBody(mail.build());</span><br><span class="line">        Response response = sg.api(request);</span><br><span class="line">        System.out.println(response.getStatusCode());</span><br><span class="line">        System.out.println(response.getBody());</span><br><span class="line">        System.out.println(response.getHeaders());</span><br><span class="line">    &#125; catch (IOException ex) &#123;</span><br><span class="line">        throw ex;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">@Test</span><br><span class="line">public void t()&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个地方是我之前参考的别人的博客，进行发送账单邮件这些的，但是我后来发现，写的样式并不那啥，就是我明明在hbuilder上面html写的还可以整体，但是发送到了qq邮箱里面去的时候，哦豁，不兼容，搞死我了。然而我也不是个前端小哥哥，所以兼容这方面还是费了我点心力的，总之就是心力交瘁。  </p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * https://www.sandbox.paypal.com/invoice/p/#W4NWHW2FA2XXGFZQ  账单的分享链接</span></span><br><span class="line"><span class="comment">     * 样式+附件一起发送</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"><span class="comment">//    @org.junit.Test</span></span><br><span class="line"><span class="comment">//    public void test()&#123;</span></span><br><span class="line"><span class="comment">//        EmailOptions emailOptions = new EmailOptions();</span></span><br><span class="line"><span class="comment">//        emailOptions.setToMailList(Arrays.asList("2915324940@qq.com"));//"198866436@qq.com" "fsn2915324940@163.com",</span></span><br><span class="line"><span class="comment">//        emailOptions.setSubject("领赫 - 账单提醒~~~~(*^▽^*)");//附件测试</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//        emailOptions.setContent("来了来了来了&lt;div style='width:800px;height:600px;background-color:black'&gt; &lt;img  width='200px' height='300px'  src='http://m.qpic.cn/psc?/V11rBmNJ1xB9lV/hsnfJ.a5yg7.BhItQyNwPS2w5W77Ya6n7UEvCBQEhtvp5TN5vlqR7nIjceIjHX.H5V6eg9RYIZp65ofTS1zkiEpKFmlRFGi7*beRV26DJLI!/b&amp;bo=VQhABgAKgAcRCag!&amp;rf=viewer_4'&gt;&lt;/img&gt;&lt;/div&gt;");//&lt;h1&gt;终于等到你，来付款吧&lt;/h1&gt;&lt;hr/&gt;&lt;a href='https://www.sandbox.paypal.com/invoice/p/#W4NWHW2FA2XXGFZQ'&gt;GO&lt;/a&gt;</span></span><br><span class="line"><span class="comment">//        //辛苦了。 详细情况请确认附件。  就这些。请多关照。</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//        // 添付ファイル  邮件附件。</span></span><br><span class="line"><span class="comment">//        List&lt;Attachments&gt; attachments = new ArrayList&lt;&gt;();</span></span><br><span class="line"><span class="comment">//        Attachments attachment = new Attachments();</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//        byte[] fileData = null;</span></span><br><span class="line"><span class="comment">//        fileData = fileConvertToByteArray(new File("C:\\Users\\ASUS\\Desktop\\账单TEST.pdf"));//附件  C:\Users\ASUS\Desktop\古风素材\psb (1).jpg</span></span><br><span class="line"><span class="comment">//        attachment.setContentId("账单邮件~~~~(*^▽^*)");</span></span><br><span class="line"><span class="comment">//        Base64 x = new Base64();</span></span><br><span class="line"><span class="comment">//        attachment.setContent(x.encodeAsString(fileData));</span></span><br><span class="line"><span class="comment">//        try &#123;</span></span><br><span class="line"><span class="comment">//            attachment.setFilename(MimeUtility.encodeText("领赫账单.pdf"));//image.jpg  此处发送过去的中文乱码</span></span><br><span class="line"><span class="comment">//        &#125;catch (UnsupportedEncodingException e)&#123;</span></span><br><span class="line"><span class="comment">//            logger.info("转码抛出异常=========");</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"><span class="comment">//        attachment.setType("plain/text");</span></span><br><span class="line"><span class="comment">//        attachments.add(attachment);</span></span><br><span class="line"><span class="comment">//        emailOptions.setAttachments(attachments);</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//        logger.info("emailOptions:[&#123;&#125;]", JSONObject.toJSONString(emailOptions));</span></span><br><span class="line"><span class="comment">//        // メール送信 发送邮件</span></span><br><span class="line"><span class="comment">//        sendMail(emailOptions);</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * メールの送信 发送邮件</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * @param emailOptions メールオプション  邮件选项</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line"><span class="comment">//    public void sendMail(EmailOptions emailOptions) &#123;</span></span><br><span class="line"><span class="comment">//        Mail mail = new Mail();</span></span><br><span class="line"><span class="comment">//        // 差出人 (sendFrom:注册时的邮箱)</span></span><br><span class="line"><span class="comment">//        Email from = new Email("info@fbabee.com");</span></span><br><span class="line"><span class="comment">//        mail.setFrom(from);</span></span><br><span class="line"><span class="comment">//        // 宛先</span></span><br><span class="line"><span class="comment">//        if (emailOptions.getToMailList() != null) &#123;</span></span><br><span class="line"><span class="comment">//            emailOptions.getToMailList().forEach(to -&gt; &#123;</span></span><br><span class="line"><span class="comment">//                logger.info("========&gt;to:[&#123;&#125;]",JSONObject.toJSONString(to));</span></span><br><span class="line"><span class="comment">//                Personalization personalization = new Personalization();</span></span><br><span class="line"><span class="comment">//                personalization.addTo(new Email(to.toString()));</span></span><br><span class="line"><span class="comment">//                mail.addPersonalization(personalization);</span></span><br><span class="line"><span class="comment">//            &#125;);</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"><span class="comment">//        // 件名</span></span><br><span class="line"><span class="comment">//        String subject = emailOptions.getSubject();</span></span><br><span class="line"><span class="comment">//        mail.setSubject(subject);</span></span><br><span class="line"><span class="comment">//        // メール内容 邮件内容</span></span><br><span class="line"><span class="comment">////        Content content = new Content("text/plain", emailOptions.getContent());</span></span><br><span class="line"><span class="comment">//        Content content = new Content("text/html", emailOptions.getContent());</span></span><br><span class="line"><span class="comment">//        mail.addContent(content);</span></span><br><span class="line"><span class="comment">//        // 添付ファイル 邮件附件。</span></span><br><span class="line"><span class="comment">//        if (emailOptions.getAttachments() != null) &#123;</span></span><br><span class="line"><span class="comment">//            emailOptions.getAttachments().forEach(attachments -&gt; &#123; mail.addAttachments(attachments); &#125;);</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">//        logger.info("mail:[&#123;&#125;]",JSONObject.toJSONString(mail));</span></span><br><span class="line"><span class="comment">//        // (sendgridApiKey:经过变换的API key)</span></span><br><span class="line"><span class="comment">//        SendGrid sg = new SendGrid(sendgridApiKey);</span></span><br><span class="line"><span class="comment">//        Request request = new Request();</span></span><br><span class="line"><span class="comment">//        try &#123;</span></span><br><span class="line"><span class="comment">//            request.setMethod(Method.POST);</span></span><br><span class="line"><span class="comment">//            request.setEndpoint("mail/send");</span></span><br><span class="line"><span class="comment">//            request.setBody(mail.build());</span></span><br><span class="line"><span class="comment">//            Response response = sg.api(request);</span></span><br><span class="line"><span class="comment">//            // 202:成功</span></span><br><span class="line"><span class="comment">//            logger.info("response:[&#123;&#125;]",JSONObject.toJSONString(response));</span></span><br><span class="line"><span class="comment">//            logger.info("StatusCode: [&#123;&#125;]", response.getStatusCode());</span></span><br><span class="line"><span class="comment">//        &#125; catch (IOException ex) &#123;</span></span><br><span class="line"><span class="comment">//            logger.error("", ex);</span></span><br><span class="line"><span class="comment">//        &#125;</span></span><br><span class="line"><span class="comment">//    &#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 把一个文件转化为byte字节数组。</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * @return</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">byte</span>[] fileConvertToByteArray(<span class="built_in">File</span> file) &#123;</span><br><span class="line">        <span class="keyword">byte</span>[] data = null;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            FileInputStream fis = <span class="keyword">new</span> FileInputStream(file);</span><br><span class="line">            ByteArrayOutputStream baos = <span class="keyword">new</span> ByteArrayOutputStream();</span><br><span class="line"></span><br><span class="line">            <span class="keyword">int</span> len;</span><br><span class="line">            <span class="keyword">byte</span>[] <span class="built_in">buffer</span> = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1024</span>];</span><br><span class="line">            <span class="keyword">while</span> ((len = fis.<span class="built_in">read</span>(<span class="built_in">buffer</span>)) != <span class="number">-1</span>) &#123;</span><br><span class="line">                baos.<span class="built_in">write</span>(<span class="built_in">buffer</span>, <span class="number">0</span>, len);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            data = baos.toByteArray();</span><br><span class="line"></span><br><span class="line">            fis.<span class="built_in">close</span>();</span><br><span class="line">            baos.<span class="built_in">close</span>();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> data;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//base64字符串转byte[]</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">byte</span>[] base64String2ByteFun(<span class="keyword">String</span> base64Str)&#123;</span><br><span class="line">        <span class="keyword">return</span> Base64.decodeBase64(base64Str);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//byte[]转base64</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">String</span> <span class="title">byte2Base64StringFun</span><span class="params">(<span class="keyword">byte</span>[] b)</span></span>&#123;</span><br><span class="line">        <span class="keyword">return</span> Base64.encodeBase64String(b);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>这个forEache 简直了，我想说，反正应该是jdk1.8的新式写法吧，还可以感觉，给我的感觉有点额，就是有点像js里面哦哦不是jquery里面一样的那种forEach。  </p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br></pre></td><td class="code"><pre><span class="line">    @org.junit.Test</span><br><span class="line">    <span class="built_in">public</span> <span class="type">void</span> test2()&#123;</span><br><span class="line">        <span class="comment">/**</span></span><br><span class="line"><span class="comment">         * 测试forEach 用法</span></span><br><span class="line"><span class="comment">         */</span></span><br><span class="line">        List&lt;Map&lt;String,<span class="type">Integer</span>&gt;&gt; list=<span class="built_in">new</span> ArrayList&lt;Map&lt;String,<span class="type">Integer</span>&gt;&gt;();</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)&#123;</span><br><span class="line">            Map map=<span class="built_in">new</span> HashMap();</span><br><span class="line">            map.put("测试名称"+i,i);</span><br><span class="line">            list.<span class="keyword">add</span>(map);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (list != <span class="keyword">null</span>) &#123;</span><br><span class="line">            list.<span class="keyword">forEach</span>(<span class="keyword">to</span> -&gt; &#123;</span><br><span class="line">                Map&lt;String,<span class="type">Integer</span>&gt; map=JSONObject.parseObject(JSONObject.toJSONString(<span class="keyword">to</span>),Map.<span class="keyword">class</span>);</span><br><span class="line">               logger.<span class="keyword">info</span>("=====&gt;打印to:[&#123;&#125;]",JSONObject.toJSONString(map));</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    @Autowired</span><br><span class="line">    TOutRepoOrderExpenseService tOutRepoOrderExpenseService;</span><br><span class="line"></span><br><span class="line">@Test</span><br><span class="line">    <span class="built_in">public</span> <span class="type">void</span> bytessss() throws <span class="keyword">Exception</span> &#123;</span><br><span class="line">//        String str="hello World  你好世界";</span><br><span class="line">//        try &#123;</span><br><span class="line">//            String aaa = <span class="built_in">new</span> String(str.getBytes("UTF-8"), "iso-8859-1");</span><br><span class="line">//            <span class="keyword">System</span>.<span class="keyword">out</span>.println("=======&gt;aaa print: " + aaa);</span><br><span class="line">//        &#125;catch (UnsupportedEncodingException e)&#123;</span><br><span class="line">//            <span class="keyword">System</span>.<span class="keyword">out</span>.println("====&gt;转码抛出异常");</span><br><span class="line">//        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    //查询账单信息，并循环样式</span><br><span class="line">//    Condition expenseCondition=<span class="built_in">new</span> Condition(TOutRepoOrderExpense.<span class="keyword">class</span>);</span><br><span class="line">//    expenseCondition.createCriteria().andEqualTo("outOrderNo",<span class="number">41</span>);</span><br><span class="line">//    List&lt;TOutRepoOrderExpense&gt; tOutRepoOrderExpenses=tOutRepoOrderExpenseService.findByCondition(expenseCondition);</span><br><span class="line">//    List&lt;List&lt;TOutRepoOrderExpense&gt;&gt; typeList=<span class="built_in">new</span> ArrayList&lt;List&lt;TOutRepoOrderExpense&gt;&gt;();</span><br><span class="line">//    BigDecimal totalSum=BigDecimal.ZERO;</span><br><span class="line">//    <span class="keyword">for</span> (TOutRepoOrderExpense tOutRepoOrderExpense:tOutRepoOrderExpenses)&#123;</span><br><span class="line">//        totalSum=totalSum.<span class="keyword">add</span>(tOutRepoOrderExpense.getTotal());</span><br><span class="line">//        <span class="keyword">if</span>(typeList.size()==<span class="number">0</span>)&#123;</span><br><span class="line">//            List&lt;TOutRepoOrderExpense&gt; list=<span class="built_in">new</span> ArrayList&lt;TOutRepoOrderExpense&gt;();</span><br><span class="line">//            list.<span class="keyword">add</span>(tOutRepoOrderExpense);</span><br><span class="line">//            typeList.<span class="keyword">add</span>(list);</span><br><span class="line">//        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">//         //需要进行比较collectionName是否一致，如果存在一致就放入该集合，如果遍历到底发现无一致的集合则创建新集合</span><br><span class="line">//            <span class="keyword">for</span> (<span class="type">int</span> i=<span class="number">0</span>;i&lt;typeList.size();i++)&#123;</span><br><span class="line">//                List&lt;TOutRepoOrderExpense&gt; list=typeList.<span class="keyword">get</span>(i);</span><br><span class="line">//                <span class="type">boolean</span> addFlag=<span class="keyword">false</span>;</span><br><span class="line">//                <span class="keyword">for</span>(TOutRepoOrderExpense t:list)&#123;</span><br><span class="line">//                    <span class="keyword">if</span>(t.getCollectionName().equals(tOutRepoOrderExpense.getCollectionName()))&#123;</span><br><span class="line">//                        list.<span class="keyword">add</span>(tOutRepoOrderExpense);</span><br><span class="line">//                        break;</span><br><span class="line">//                    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">//                        addFlag=<span class="keyword">true</span>;</span><br><span class="line">//                    &#125;</span><br><span class="line">//                &#125;</span><br><span class="line">//                <span class="keyword">if</span>(addFlag) &#123;</span><br><span class="line">//                    List&lt;TOutRepoOrderExpense&gt; list2=<span class="built_in">new</span> ArrayList&lt;TOutRepoOrderExpense&gt;();</span><br><span class="line">//                    list2.<span class="keyword">add</span>(tOutRepoOrderExpense);</span><br><span class="line">//                    typeList.<span class="keyword">add</span>(list2);</span><br><span class="line">//                    break;</span><br><span class="line">//                &#125;</span><br><span class="line">//            &#125;</span><br><span class="line">//        &#125;</span><br><span class="line">//    &#125;</span><br><span class="line"></span><br><span class="line">    StringBuffer html=<span class="built_in">new</span> StringBuffer("&lt;!DOCTYPE html&gt;" +</span><br><span class="line">            "&lt;html&gt;" +</span><br><span class="line">            "&lt;head&gt;" +</span><br><span class="line">            "&lt;meta charset=\"utf<span class="number">-8</span>\" /&gt;" +</span><br><span class="line">            "&lt;title&gt;&lt;/title&gt;" +</span><br><span class="line">            "&lt;style&gt;" +</span><br><span class="line">            ".right&#123;" +</span><br><span class="line">            "text-align: right;" +</span><br><span class="line">            "&#125;" +</span><br><span class="line">            ".widd&#123;" +</span><br><span class="line">            "width: 230px;" +</span><br><span class="line">            "&#125;" +</span><br><span class="line">            ".centt&#123;" +</span><br><span class="line">            "text-align: center;" +</span><br><span class="line">            "&#125;" +</span><br><span class="line">            ".bolder&#123;" +</span><br><span class="line">//            "font-weight: bolder;" +</span><br><span class="line">            "&#125;" +</span><br><span class="line">            ".ant-btn-red &#123;" +</span><br><span class="line">            "    color: #FFF;" +</span><br><span class="line">            "    background-color: #FF5A44;" +</span><br><span class="line">            "    border-color: #FF5A44;" +</span><br><span class="line">            "    text-shadow: 0 -1px 0 rgba(0,0,0,0.12);" +</span><br><span class="line">            "    -webkit-box-shadow: 0 2px 0 rgba(0,0,0,0.045);" +</span><br><span class="line">            "    box-shadow: 0 2px 0 rgba(0,0,0,0.045);" +</span><br><span class="line">            "&#125;" +</span><br><span class="line">            "" +</span><br><span class="line">            ".ant-btn &#123;" +</span><br><span class="line">            "    line-height: 2.2;" +</span><br><span class="line">            "    position: relative;" +</span><br><span class="line">            "    display: inline-block;" +</span><br><span class="line">            "    font-weight: 400;" +</span><br><span class="line">            "    white-space: nowrap;" +</span><br><span class="line">            "    text-align: center;" +</span><br><span class="line">            "    background-image: none;" +</span><br><span class="line">            "    border: 1px solid transparent;" +</span><br><span class="line">            "    -webkit-box-shadow: 0 2px 0 rgba(0,0,0,0.015);" +</span><br><span class="line">            "    box-shadow: 0 2px 0 rgba(0,0,0,0.015);" +</span><br><span class="line">            "    cursor: pointer;" +</span><br><span class="line">            "    -webkit-transition: all .3s cubic-bezier(.645, .045, .355, 1);" +</span><br><span class="line">            "    transition: all .3s cubic-bezier(.645, .045, .355, 1);" +</span><br><span class="line">            "    -webkit-user-select: none;" +</span><br><span class="line">            "    -moz-user-select: none;" +</span><br><span class="line">            "    -ms-user-select: none;" +</span><br><span class="line">            "    user-select: none;" +</span><br><span class="line">            "    -ms-touch-action: manipulation;" +</span><br><span class="line">            "    touch-action: manipulation;" +</span><br><span class="line">            "    height: 32px;" +</span><br><span class="line">            "    padding: 0 15px;" +</span><br><span class="line">            "    font-size: 14px;" +</span><br><span class="line">            "    border-radius: 4px;" +</span><br><span class="line">            "    color: rgba(0,0,0,0.65);" +</span><br><span class="line">            "    background-color: #fff;" +</span><br><span class="line">            "    border-color: #d9d9d9;" +</span><br><span class="line">            "&#125;" +</span><br><span class="line">            "a:link &#123; text-decoration: none;&#125;" +</span><br><span class="line">            "　　 a:active &#123; text-decoration:none&#125;" +</span><br><span class="line">            "　　 a:hover &#123; text-decoration:none;&#125; " +</span><br><span class="line">            "　　 a:visited &#123; text-decoration: none;&#125;"+</span><br><span class="line">            "&lt;/style&gt;" +</span><br><span class="line">            "&lt;/head&gt;" +</span><br><span class="line">            "&lt;body&gt;" +</span><br><span class="line">            "&lt;table width=\"<span class="number">650</span>px\" height=\"<span class="number">100</span>%\" style=\"background-color: white;margin: auto; font-<span class="keyword">family</span>:<span class="string">'Microsoft YaHei'</span>; font-size: <span class="number">10</span>px;\"&gt;" +</span><br><span class="line">            "&lt;tr style=\"height: <span class="number">25</span>px;\"&gt;" +</span><br><span class="line">            "&lt;td colspan=\"<span class="number">4</span>\"&gt;&lt;/td&gt;&lt;td style=\"width: <span class="number">50</span>px;\"&gt;&lt;/td&gt;" +</span><br><span class="line">            "&lt;/tr&gt;" +</span><br><span class="line">            "&lt;tr &gt;" +</span><br><span class="line">            "&lt;td colspan=\"<span class="number">3</span>\" class=\"bolder\"&gt;FBABEE&lt;/td&gt;" +</span><br><span class="line">            "&lt;td colspan=\"<span class="number">2</span>\" class=\"right bolder\"&gt;INVOICE&lt;/td&gt;" +</span><br><span class="line">            "&lt;/tr&gt;" +</span><br><span class="line">            "&lt;tr style=\"height: <span class="number">2</span>px;\"&gt;" +</span><br><span class="line">            "&lt;td colspan=\"<span class="number">5</span>\"&gt;&lt;/td&gt;" +</span><br><span class="line">            "&lt;/tr&gt;" +</span><br><span class="line">            "" +</span><br><span class="line">            "&lt;tr&gt;" +</span><br><span class="line">            "&lt;td colspan=\"<span class="number">3</span>\"&gt;Shenzhen Linkhub Supply-Chain Management Co.LTD&lt;/td&gt;" +</span><br><span class="line">            "&lt;td class=\"right bolder\"&gt;Invoince ID&lt;/td&gt;" +</span><br><span class="line">            "&lt;td class=\"right\"&gt;1904193751&lt;/td&gt;" +</span><br><span class="line">            "&lt;/tr&gt;" +</span><br><span class="line">            "&lt;tr&gt;" +</span><br><span class="line">            "&lt;td colspan=\"<span class="number">3</span>\"&gt;Add:302,Building D,New Retail Tech Industrial Zoon&lt;/td&gt;" +</span><br><span class="line">            "&lt;td class=\"right bolder\"&gt;FBA ID&lt;/td&gt;" +</span><br><span class="line">            "&lt;td class=\"right\"&gt;XXXXXXX&lt;/td&gt;" +</span><br><span class="line">            "&lt;/tr&gt;" +</span><br><span class="line">            "&lt;tr&gt;" +</span><br><span class="line">            "&lt;td colspan=\"<span class="number">3</span>\"&gt;GUshu,Xixiang Street,Bao'An,518000&lt;/td&gt;" +</span><br><span class="line">            "&lt;td class=\"right bolder\"&gt;Date Issued&lt;/td&gt;" +</span><br><span class="line">            "&lt;td class=\"right\"&gt;2019/05/02&lt;/td&gt;" +</span><br><span class="line">            "&lt;/tr&gt;" +</span><br><span class="line">            "&lt;tr&gt;" +</span><br><span class="line">            "&lt;td colspan=\"<span class="number">3</span>\"&gt;Guangdong Province,China&lt;/td&gt;" +</span><br><span class="line">            "&lt;td class=\"right bolder\"&gt;Due Date&lt;/td&gt;" +</span><br><span class="line">            "&lt;td class=\"right\"&gt;2019/05/02&lt;/td&gt;" +</span><br><span class="line">            "&lt;/tr&gt;" +</span><br><span class="line">            "&lt;tr style=\"height: <span class="number">30</span>px;\"&gt;" +</span><br><span class="line">            "&lt;td colspan=\"<span class="number">5</span>\"&gt;&lt;/td&gt;" +</span><br><span class="line">            "&lt;/tr&gt;" +</span><br><span class="line">            "&lt;tr&gt;" +</span><br><span class="line">            "&lt;td colspan=\"<span class="number">2</span>\" class=\"bolder\"&gt;Bill to&lt;/td&gt;" +</span><br><span class="line">            "&lt;td colspan=\"<span class="number">3</span>\" class=\"bolder\"&gt;Ship to&lt;/td&gt;" +</span><br><span class="line">            "&lt;/tr&gt;" +</span><br><span class="line">            "&lt;tr style=\"height: <span class="number">2</span>px;\"&gt;" +</span><br><span class="line">            "&lt;td colspan=\"<span class="number">5</span>\"&gt;&lt;/td&gt;" +</span><br><span class="line">            "&lt;/tr&gt;" +</span><br><span class="line">            "&lt;tr&gt;" +</span><br><span class="line">            "&lt;td colspan=\"<span class="number">2</span>\"&gt;公司名称&lt;/td&gt;" +</span><br><span class="line">            "&lt;td colspan=\"<span class="number">3</span>\"&gt;24300 Nandina Ave,Moreno Valley,CA,&lt;/td&gt;" +</span><br><span class="line">            "&lt;/tr&gt;" +</span><br><span class="line">            "&lt;tr&gt;" +</span><br><span class="line">            "&lt;td colspan=\"<span class="number">2</span>\"&gt;公司地址&lt;/td&gt;" +</span><br><span class="line">            "&lt;td colspan=\"<span class="number">3</span>\"&gt;92551,United States&lt;/td&gt;" +</span><br><span class="line">            "&lt;/tr&gt;" +</span><br><span class="line">            "&lt;tr style=\"height: <span class="number">30</span>px;\"&gt;" +</span><br><span class="line">            "&lt;td colspan=\"<span class="number">5</span>\"&gt;&lt;/td&gt;" +</span><br><span class="line">            "&lt;/tr&gt;" +</span><br><span class="line">            "&lt;tr&gt;" +</span><br><span class="line">            "&lt;td class=\"bolder\"&gt;Items Description&lt;/td&gt;" +</span><br><span class="line">            "&lt;td colspan=\"<span class="number">4</span>\"&gt;&lt;/td&gt;" +</span><br><span class="line">            "&lt;/tr&gt;" +</span><br><span class="line">            "&lt;tr style=\"height: <span class="number">2</span>px;\"&gt;" +</span><br><span class="line">            "&lt;td colspan=\"<span class="number">5</span>\"&gt;&lt;/td&gt;" +</span><br><span class="line">            "&lt;/tr&gt;");</span><br><span class="line">    //此时将集合分了个类，分类之后的集合需要做的即遍历样式 稍等复制一下</span><br><span class="line"></span><br><span class="line">//    <span class="keyword">System</span>.<span class="keyword">out</span>.println("typeList.size:  "+typeList.size());</span><br><span class="line">//    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;typeList.size();i++)&#123;</span><br><span class="line">//        <span class="keyword">if</span>(i==<span class="number">0</span>)&#123; //第一个集合</span><br><span class="line">//            List&lt;TOutRepoOrderExpense&gt; tOutRepoOrderExpensesList=typeList.<span class="keyword">get</span>(i);</span><br><span class="line">//                <span class="keyword">for</span> (<span class="type">int</span> x=<span class="number">0</span>;x&lt;tOutRepoOrderExpensesList.size();x++)&#123;</span><br><span class="line">//                    TOutRepoOrderExpense tOutRepoOrderExpense=tOutRepoOrderExpensesList.<span class="keyword">get</span>(x);</span><br><span class="line">//                    JSONArray jsonArray=JSONArray.parseArray(tOutRepoOrderExpense.getRuleDetail());</span><br><span class="line">//                    JSONObject ruleDetail=jsonArray.getJSONObject(<span class="number">0</span>);</span><br><span class="line">//</span><br><span class="line">//                    String collectionName=tOutRepoOrderExpense.getCollectionName();</span><br><span class="line">//                    String collectionItemName=tOutRepoOrderExpense.getCollectionItemName();</span><br><span class="line">//                    String rate=""+ruleDetail.getBigDecimal("rate");</span><br><span class="line">//                    String unit=ruleDetail.getString("unit")==<span class="keyword">null</span>?"":"/"+ruleDetail.getString("unit");</span><br><span class="line">//                    String unit2=ruleDetail.getString("unit")==<span class="keyword">null</span>?" ":ruleDetail.getString("unit");</span><br><span class="line">//                    String quantity=""+ruleDetail.getBigDecimal("quantity");</span><br><span class="line">//                    String total=""+tOutRepoOrderExpense.getTotal();</span><br><span class="line">//                    <span class="keyword">if</span>(x==<span class="number">0</span>)&#123; //第一个集合当中的第一个对象 //此处需要进行循环表头，以及第一行数据</span><br><span class="line">//                        html=html.append("&lt;tr&gt;" +</span><br><span class="line">//                                "&lt;td class=\"bolder\"&gt;"+collectionName+"&lt;/td&gt;" +</span><br><span class="line">//                                "&lt;td class=\"right bolder\" colspan=\"<span class="number">2</span>\"&gt;Rate&lt;/td&gt;" +</span><br><span class="line">//                                "&lt;td class=\"centt bolder\"&gt;Quantity&lt;/td&gt;" +</span><br><span class="line">//                                "&lt;td class=\"right bolder\"&gt;Amount&lt;/td&gt;" +</span><br><span class="line">//                                "&lt;/tr&gt;" +</span><br><span class="line">//                                "&lt;tr style=\"height: <span class="number">2</span>px;\"&gt;" +</span><br><span class="line">//                                "&lt;td colspan=\"<span class="number">5</span>\"&gt;&lt;/td&gt;" +</span><br><span class="line">//                                "&lt;/tr&gt;" +</span><br><span class="line">//                                "&lt;tr&gt;" +</span><br><span class="line">//                                "&lt;td&gt;"+collectionItemName+"&lt;/td&gt;" +</span><br><span class="line">//                                "&lt;td class=\"right\" colspan=\"<span class="number">2</span>\"&gt;"+rate+unit+"&lt;/td&gt;" +</span><br><span class="line">//                                "&lt;td class=\"centt\"&gt;x "+quantity+unit2+"&lt;/td&gt;" +</span><br><span class="line">//                                "&lt;td class=\"right\"&gt;$ "+total+"&lt;/td&gt;" +</span><br><span class="line">//                                "&lt;/tr&gt;");</span><br><span class="line">//</span><br><span class="line">//                    &#125;<span class="keyword">else</span>&#123;//第一个集合当中的其余对象</span><br><span class="line">//                        html= html.append("&lt;tr&gt;" +</span><br><span class="line">//                                "&lt;td&gt;"+collectionItemName+"&lt;/td&gt;" +</span><br><span class="line">//                                "&lt;td class=\"right\" colspan=\"<span class="number">2</span>\"&gt;"+rate+unit+"&lt;/td&gt;" +</span><br><span class="line">//                                "&lt;td class=\"centt\"&gt;x "+quantity+unit2+"&lt;/td&gt;" +</span><br><span class="line">//                                "&lt;td class=\"right\"&gt;$ "+tOutRepoOrderExpense.getTotal()+"&lt;/td&gt;" +</span><br><span class="line">//                                "&lt;/tr&gt;");</span><br><span class="line">//                    &#125;</span><br><span class="line">//                &#125;</span><br><span class="line">//                //第一个集合循环后结尾 需要进行空格处理</span><br><span class="line">//            html= html.append("&lt;tr style=\"height: <span class="number">2</span>px;\"&gt;" +</span><br><span class="line">//                    "&lt;td colspan=\"<span class="number">5</span>\"&gt;&lt;/td&gt;" +</span><br><span class="line">//                    "&lt;/tr&gt;");</span><br><span class="line">//</span><br><span class="line">//</span><br><span class="line">//        &#125;</span><br><span class="line">//        <span class="keyword">else</span>&#123;//第二个第三个第四个集合</span><br><span class="line">//            List&lt;TOutRepoOrderExpense&gt; tOutRepoOrderExpensesList=typeList.<span class="keyword">get</span>(i);</span><br><span class="line">//            <span class="keyword">for</span> (<span class="type">int</span> x=<span class="number">0</span>;x&lt;tOutRepoOrderExpensesList.size();x++)&#123;</span><br><span class="line">//</span><br><span class="line">//                TOutRepoOrderExpense tOutRepoOrderExpense=tOutRepoOrderExpensesList.<span class="keyword">get</span>(x);</span><br><span class="line">//                JSONArray jsonArray=JSONArray.parseArray(tOutRepoOrderExpense.getRuleDetail());</span><br><span class="line">//                JSONObject ruleDetail=jsonArray.getJSONObject(<span class="number">0</span>);</span><br><span class="line">//                String collectionName=tOutRepoOrderExpense.getCollectionName();</span><br><span class="line">//                String collectionItemName=tOutRepoOrderExpense.getCollectionItemName();</span><br><span class="line">//                String rate=""+ruleDetail.getBigDecimal("rate");</span><br><span class="line">//                String unit=ruleDetail.getString("unit")==<span class="keyword">null</span>?"":"/"+ruleDetail.getString("unit");</span><br><span class="line">//                String unit2=ruleDetail.getString("unit")==<span class="keyword">null</span>?" ":ruleDetail.getString("unit");</span><br><span class="line">//                String quantity=""+ruleDetail.getBigDecimal("quantity");</span><br><span class="line">//                String total=""+tOutRepoOrderExpense.getTotal();</span><br><span class="line">//</span><br><span class="line">//                <span class="keyword">if</span>(x==<span class="number">0</span>)&#123; //第一个集合当中的第一个对象</span><br><span class="line">//                    //此处需要进行循环表头，以及第一行数据</span><br><span class="line">//                    html=html.append("&lt;tr&gt;" +</span><br><span class="line">//                            "&lt;td colspan=\"<span class="number">1</span>\" class=\"bolder\"&gt;"+collectionName+"&lt;/td&gt;" +</span><br><span class="line">//                            "&lt;td colspan=\"<span class="number">4</span>\"&gt;&lt;/td&gt;" +</span><br><span class="line">//                            "&lt;/tr&gt;" +</span><br><span class="line">//                            "&lt;/tr&gt;" +</span><br><span class="line">//                            "&lt;tr style=\"height: <span class="number">2</span>px;\"&gt;" +</span><br><span class="line">//                            "&lt;td colspan=\"<span class="number">5</span>\"&gt;&lt;/td&gt;" +</span><br><span class="line">//                            "&lt;/tr&gt;" +</span><br><span class="line">//                            "&lt;tr&gt;" +</span><br><span class="line">//                            "&lt;td&gt;"+collectionItemName+"&lt;/td&gt;" +</span><br><span class="line">//                            "&lt;td class=\"right\" colspan=\"<span class="number">2</span>\"&gt;"+rate+unit+"&lt;/td&gt;" +</span><br><span class="line">//                            "&lt;td class=\"centt\"&gt;x "+quantity+unit2+"&lt;/td&gt;" +</span><br><span class="line">//                            "&lt;td class=\"right\"&gt;$ "+total+"&lt;/td&gt;" +</span><br><span class="line">//                            "&lt;/tr&gt;");</span><br><span class="line">//                &#125;</span><br><span class="line">//                <span class="keyword">else</span>&#123;//第一个集合当中的其余对象</span><br><span class="line">//                    html=html.append("&lt;tr&gt;" +</span><br><span class="line">//                            "&lt;td&gt;"+collectionItemName+"&lt;/td&gt;" +</span><br><span class="line">//                            "&lt;td class=\"right\" colspan=\"<span class="number">2</span>\"&gt;"+rate +rate+"&lt;/td&gt;" +</span><br><span class="line">//                            "&lt;td class=\"centt\"&gt;x "+quantity+unit2+"&lt;/td&gt;" +</span><br><span class="line">//                            "&lt;td class=\"right\"&gt;$ "+tOutRepoOrderExpense.getTotal()+"&lt;/td&gt;" +</span><br><span class="line">//                            "&lt;/tr&gt;");</span><br><span class="line">//                &#125;</span><br><span class="line">//            &#125;</span><br><span class="line">//</span><br><span class="line">//            //第n个集合循环后结尾 需要进行空格处理</span><br><span class="line">//            html=  html.append("&lt;tr style=\"height: <span class="number">2</span>px;\"&gt;" +</span><br><span class="line">//                    "&lt;td colspan=\"<span class="number">5</span>\"&gt;&lt;/td&gt;" +</span><br><span class="line">//                    "&lt;/tr&gt;");</span><br><span class="line">//        &#125;</span><br><span class="line">//    &#125;</span><br><span class="line">    String payoneer="fsn2915324940@163.com";//<span class="keyword">info</span>@fbabee.com</span><br><span class="line">    //当集合遍历结束，即加上total样式</span><br><span class="line">    html= html.append("&lt;tr&gt;" +</span><br><span class="line">            "&lt;td class=\"bolder\"&gt;Total&lt;/td&gt;" +</span><br><span class="line">            "&lt;td colspan=\"<span class="number">2</span>\"&gt;&lt;/td&gt;" +</span><br><span class="line">//            "&lt;td class=\"bolder\"&gt;$ 4761.52&lt;/td&gt;" +</span><br><span class="line">//            "&lt;td class=\"right bolder\"&gt;$ "+totalSum+"&lt;/td&gt;&lt;td&gt;&lt;/td&gt;" +</span><br><span class="line">            "&lt;/tr&gt;" +</span><br><span class="line">            "&lt;tr style=\"height: <span class="number">30</span>px;\"&gt;" +</span><br><span class="line">            "&lt;td colspan=\"<span class="number">5</span>\"&gt;&lt;/td&gt;" +</span><br><span class="line">            "&lt;/tr&gt;" +</span><br><span class="line">            "&lt;tr&gt;" +</span><br><span class="line">            "&lt;td class=\"bolder\"&gt;Bank Infomation&lt;/td&gt;" +</span><br><span class="line">            "&lt;td colspan=\"<span class="number">4</span>\"&gt;&lt;/td&gt;" +</span><br><span class="line">            "&lt;/tr&gt;" +</span><br><span class="line">            "&lt;tr style=\"height: <span class="number">2</span>px;\"&gt;" +</span><br><span class="line">            "&lt;td colspan=\"<span class="number">5</span>\"&gt;&lt;/td&gt;" +</span><br><span class="line">            "&lt;/tr&gt;" +</span><br><span class="line">            "&lt;tr&gt;" +</span><br><span class="line">            "&lt;td style=\"width: <span class="number">100</span>px;\" class=\"bolder\"&gt;Paypal Account&lt;/td&gt;" +</span><br><span class="line">            "&lt;td class=\"widd\"&gt;Palpal@fbabee.com&lt;/td&gt;" +</span><br><span class="line">            "&lt;td colspan=\"<span class="number">3</span>\"&gt;&lt;/td&gt;" +</span><br><span class="line">            "&lt;/tr&gt;" +</span><br><span class="line">            "&lt;tr&gt;" +</span><br><span class="line">            "&lt;td class=\"bolder\"&gt;Payoneer Account&lt;/td&gt;" +</span><br><span class="line">            "&lt;td class=\"widd\"&gt;"+payoneer+"&lt;/td&gt;" +</span><br><span class="line">            "&lt;td colspan=\"<span class="number">3</span>\"&gt;&lt;/td&gt;" +</span><br><span class="line">            "&lt;/tr&gt;" +</span><br><span class="line">            "&lt;tr&gt;" +</span><br><span class="line">            "&lt;td class=\"bolder\"&gt;T/T&lt;/td&gt;" +</span><br><span class="line">            "&lt;td class=\"widd\"&gt;银行账号信息，暂时明确不了&lt;/td&gt;" +</span><br><span class="line">            "&lt;td colspan=\"<span class="number">3</span>\"&gt;&lt;/td&gt;" +</span><br><span class="line">            "&lt;/tr&gt;" +</span><br><span class="line">            "&lt;tr style=\"height: <span class="number">80</span>px;\"&gt;" +</span><br><span class="line">            "&lt;td colspan=\"<span class="number">5</span>\"&gt;&lt;/td&gt;" +</span><br><span class="line">            "&lt;/tr&gt;" +</span><br><span class="line">            "&lt;/tr&gt;" +</span><br><span class="line">            "&lt;tr style=\"height: <span class="number">30</span>px;\"&gt;" +</span><br><span class="line">            "&lt;td colspan=\"<span class="number">5</span>\"&gt;" +</span><br><span class="line">            "&lt;div style=\"margin:<span class="number">0</span> auto;width:<span class="number">200</span>px;\"&gt; " +</span><br><span class="line">            "&lt;a href=\"https://www.baidu.com\" class=\"ant-btn-red ant-btn\"&gt;PayPal确认支付&lt;/a&gt; " +</span><br><span class="line">            "&lt;/div&gt; " +</span><br><span class="line">            "&lt;/td&gt;" +</span><br><span class="line">            "&lt;/tr&gt;" +</span><br><span class="line">            "&lt;/table&gt;" +</span><br><span class="line">            "&lt;/body&gt;" +</span><br><span class="line">            "&lt;/html&gt;");</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">System</span>.<span class="keyword">out</span>.println("=======html:   "+html);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    Email <span class="keyword">from</span> = <span class="built_in">new</span> Email("info@fbabee.com");//发件方@outlook.com</span><br><span class="line">    String subject = "领赫 - 账单提醒(*^▽^*)";//Sending <span class="keyword">with</span> Twilio SendGrid <span class="keyword">is</span> Fun</span><br><span class="line">    Email <span class="keyword">to</span> = <span class="built_in">new</span> Email("2915324940@qq.com");//收件方@gmail.com</span><br><span class="line">    //"&lt;div style='width:800px;height:600px;background-color:black'&gt; &lt;img  width='200px' height='300px'  src='http://m.qpic.cn/psc?/V11rBmNJ1xB9lV/hsnfJ.a5yg7.BhItQyNwPS2w5W77Ya6n7UEvCBQEhtvp5TN5vlqR7nIjceIjHX.H5V6eg9RYIZp65ofTS1zkiEpKFmlRFGi7*beRV26DJLI!/b&amp;bo=VQhABgAKgAcRCag!&amp;rf=viewer_4'&gt;&lt;/img&gt;&lt;/div&gt;"</span><br><span class="line">    Content content = <span class="built_in">new</span> Content("text/html",html.toString());</span><br><span class="line">    Mail mail = <span class="built_in">new</span> Mail(<span class="keyword">from</span>, subject, <span class="keyword">to</span>, content);</span><br><span class="line">    String apiKey = sendgridApiKey;//这个key来源参考<span class="number">4</span>如何获取apiKey</span><br><span class="line">    SendGrid sg = <span class="built_in">new</span> SendGrid(apiKey);</span><br><span class="line">    Request request = <span class="built_in">new</span> Request();</span><br><span class="line">    try &#123;</span><br><span class="line">        request.setMethod(<span class="keyword">Method</span>.POST);</span><br><span class="line">        request.setEndpoint("mail/send");</span><br><span class="line">        request.setBody(mail.build());</span><br><span class="line">        Response response = sg.api(request);</span><br><span class="line">        <span class="keyword">System</span>.<span class="keyword">out</span>.println("=================&gt; response:"+JSONObject.toJSONString(response));</span><br><span class="line">        <span class="keyword">System</span>.<span class="keyword">out</span>.println("=================&gt; statusCode:"+response.getStatusCode());</span><br><span class="line">        <span class="keyword">System</span>.<span class="keyword">out</span>.println("=================&gt; body:"+response.getBody());</span><br><span class="line">        <span class="keyword">System</span>.<span class="keyword">out</span>.println("=================&gt; headers:"+response.getHeaders());</span><br><span class="line">    &#125; catch (IOException ex) &#123;</span><br><span class="line">        throw ex;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>因为之前做出来的html样式一直不兼容，然后david就建议说换成pdf这种文档，直接发个附件过去，额，我试了一下，就是觉得吧，其实弄成pdf会更难看，我是这么觉得的。<br>因为搞出来的确是很难看。所以后面还是去弄了一下html格式。<br>后来发现就是，得每个element标签都给他设置一下style，这样就OK。<br>其实我觉得阿里云的那个账单样式挺好看的，但是账单的样式要求这么做，然后就只能按照客户的需求来。<br>后来的其他邮件内容样式自己发挥我就直接用了阿里云邮件的样式，嘿嘿。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">    /**</span><br><span class="line">     * HTML转换成pdf</span><br><span class="line">     * @param html html文件路径</span><br><span class="line">     * @param DEST 生成pdf的路径</span><br><span class="line">     * @throws Exception</span><br><span class="line">     */</span><br><span class="line">    public static void tomPdf(String html, String DEST) throws Exception &#123;</span><br><span class="line">//        ConverterProperties props = new ConverterProperties();</span><br><span class="line">//        DefaultFontProvider defaultFontProvider = new DefaultFontProvider(false, false, false);</span><br><span class="line">////        defaultFontProvider.addFont("F:\otosanscjksc_downcc\otoSansCJKSC\otoSansCJKsc-Thin.otf");</span><br><span class="line">//        props.setFontProvider(defaultFontProvider);</span><br><span class="line">//        PdfWriter writer = new PdfWriter(DEST);</span><br><span class="line">//        PdfDocument pdf = new PdfDocument(writer);</span><br><span class="line">//        pdf.setDefaultPageSize(new PageSize(595.0F, 842.0F));</span><br><span class="line">//        Document document = HtmlConverter.convertToDocument(new FileInputStream(html), pdf, props);</span><br><span class="line">//        document.close();</span><br><span class="line">//        pdf.close();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    @Test</span><br><span class="line">    public void testtt()&#123;</span><br><span class="line">        try &#123;</span><br><span class="line">//            tomPdf("F:\\phpStudy\\PhpStudy20180211\\PHPTutorial\\WWW\\领赫\est.html", "F:\\80afa41a3bfc474cbf1ac8b5bc1d.pdf");</span><br><span class="line">        &#125; catch (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println("完======================");</span><br><span class="line">    &#125;</span><br><span class="line">/*</span><br><span class="line">=================&gt; response:</span><br><span class="line">&#123;"body":"",</span><br><span class="line">"headers":&#123;</span><br><span class="line">"Server":"nginx",</span><br><span class="line">"Access-Control-Allow-Origin":"https://sendgrid.api-docs.io",</span><br><span class="line">"Access-Control-Allow-Methods":"POST",</span><br><span class="line">"Connection":"keep-alive",</span><br><span class="line">"X-Message-Id":"4iVRN4HdSlCxByZsJd3qxA",</span><br><span class="line">"X-No-CORS-Reason":"https://sendgrid.com/docs/Classroom/Basics/API/cors.html",</span><br><span class="line">"Content-Length":"0",</span><br><span class="line">"Access-Control-Max-Age":"600",</span><br><span class="line">"Date":"Fri, 14 Feb 2020 07:43:16 GMT",</span><br><span class="line">"Access-Control-Allow-Headers":"Authorization,Content-Type, On-behalf-of, x-sg-elas-acl"</span><br><span class="line">&#125;,</span><br><span class="line">"statusCode":202&#125;</span><br><span class="line"> */</span><br></pre></td></tr></table></figure><blockquote><p>测试JSONObject</p></blockquote><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">@Test</span><br><span class="line"><span class="built_in">public</span> <span class="type">void</span> tesetJSON()&#123;</span><br><span class="line"></span><br><span class="line">//    JSONArray jsonObject=JSONArray.parseArray("[&#123;\"price\":10,\"quantity\":10,\"rate\":1&#125;]");</span><br><span class="line">////    <span class="keyword">System</span>.<span class="keyword">out</span>.println(jsonObject);</span><br><span class="line"></span><br><span class="line">    JSONObject jsonObject=<span class="built_in">new</span> JSONObject();</span><br><span class="line">    jsonObject.put("name","张三");</span><br><span class="line">    StringBuffer stringBuffer=<span class="built_in">new</span> StringBuffer("");</span><br><span class="line">    stringBuffer.append("姓名："+jsonObject.getString("name")+"~~~");</span><br><span class="line">    <span class="keyword">System</span>.<span class="keyword">out</span>.println("打印;"+stringBuffer);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;参考Blog&quot;&gt;&lt;a href=&quot;#参考Blog&quot; class=&quot;headerlink&quot; title=&quot;参考Blog&quot;&gt;&lt;/a&gt;参考Blog&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.csdn.net/weixin_44767463/a
      
    
    </summary>
    
    
      <category term="领赫" scheme="https://fengshana.github.io/categories/%E9%A2%86%E8%B5%AB/"/>
    
    
      <category term="领赫" scheme="https://fengshana.github.io/tags/%E9%A2%86%E8%B5%AB/"/>
    
      <category term="SendGrid" scheme="https://fengshana.github.io/tags/SendGrid/"/>
    
      <category term="邮件服务" scheme="https://fengshana.github.io/tags/%E9%82%AE%E4%BB%B6%E6%9C%8D%E5%8A%A1/"/>
    
  </entry>
  
  <entry>
    <title>Spring-Bean生命周期</title>
    <link href="https://fengshana.github.io/2020/04/14/Spring/Bean%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/"/>
    <id>https://fengshana.github.io/2020/04/14/Spring/Bean%E7%94%9F%E5%91%BD%E5%91%A8%E6%9C%9F/</id>
    <published>2020-04-14T12:01:56.000Z</published>
    <updated>2020-04-14T17:00:56.968Z</updated>
    
    <content type="html"><![CDATA[<h2 id="学习笔记"><a href="#学习笔记" class="headerlink" title="学习笔记"></a>学习笔记</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;学习笔记&quot;&gt;&lt;a href=&quot;#学习笔记&quot; class=&quot;headerlink&quot; title=&quot;学习笔记&quot;&gt;&lt;/a&gt;学习笔记&lt;/h2&gt;
      
    
    </summary>
    
    
      <category term="Spring" scheme="https://fengshana.github.io/categories/Spring/"/>
    
    
      <category term="Spring" scheme="https://fengshana.github.io/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>Spring-AOP</title>
    <link href="https://fengshana.github.io/2020/04/12/Spring/AOP1/"/>
    <id>https://fengshana.github.io/2020/04/12/Spring/AOP1/</id>
    <published>2020-04-12T12:01:56.000Z</published>
    <updated>2020-04-12T10:54:39.075Z</updated>
    
    <content type="html"><![CDATA[<h2 id="学习笔记"><a href="#学习笔记" class="headerlink" title="学习笔记"></a>学习笔记</h2><h3 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h3><h4 id="面向切面的一些基本知识"><a href="#面向切面的一些基本知识" class="headerlink" title="面向切面的一些基本知识"></a>面向切面的一些基本知识</h4><h4 id="SpringAOP概览"><a href="#SpringAOP概览" class="headerlink" title="SpringAOP概览"></a>SpringAOP概览</h4><ol><li>走进面向切面编程</li></ol><h5 id="编程范式概览"><a href="#编程范式概览" class="headerlink" title="编程范式概览"></a>编程范式概览</h5><p>首先面向切面编程它是一个编程范式，<br>除了面向切面编程，还有哪几种编程范式？</p><ul><li>面向过程编程，C语言、Basic…</li><li>面向对象编程，Java、c++…</li><li>面向函数编程/函数式编程</li><li>事件驱动编程，JUI开发中常见</li><li>面向切面编程</li></ul><h5 id="AOP是什么"><a href="#AOP是什么" class="headerlink" title="AOP是什么"></a>AOP是什么</h5><ul><li>是一种编程范式，不是编程语言；AOP跟语言不是一个层次当中的；</li><li>解决特定问题，不能解决所有问题；（跟面向对象编程不是竞争关系，而是互补关系）</li><li>是OOP的补充，不是替代；</li></ul><h5 id="AOP的初衷"><a href="#AOP的初衷" class="headerlink" title="AOP的初衷"></a>AOP的初衷</h5><p>面向切面编程为什么会被提出来？<br>AOP跟面向对象编程互补，互补在哪里？<br>这就要讲到面向切面编程的一个初衷，也就是说AOP想要解决的一个问题是什么。  </p><ol><li>DRY：Don’t Repeat Yourself（代码层问题）</li><li>SoC：Separation of  Concerns（关注点分离）</li></ol><p>关注点分离：  </p><ul><li>水平分离：展示层-&gt;服务层-&gt;持久层</li><li>垂直分离：模块划分（订单、库存等，业务模块）</li><li>切面分离：分离功能性需求与非功能性需求</li></ul><p>非功能性需求从功能性需求当中剥离出来集中管理，从而实现Don’t Repeat Yourself这个功能。  </p><h5 id="使用AOP的好处"><a href="#使用AOP的好处" class="headerlink" title="使用AOP的好处"></a>使用AOP的好处</h5><ul><li>集中处理某一关注点/横切逻辑</li><li>可以很方便地添加/删除关注点</li><li>侵入性少，增强代码可读性及可维护性</li></ul><h5 id="AOP的应用场景"><a href="#AOP的应用场景" class="headerlink" title="AOP的应用场景"></a>AOP的应用场景</h5><p>在功能上属于非功能性需求<br>非常适合在AOP的应用场景  </p><ul><li>权限控制</li><li>缓存控制</li><li>事务控制，相对于数据库的事务控制</li><li>审计日志</li><li>性能监控</li><li>分布式追踪</li><li>异常处理</li></ul><h5 id="支持AOP的编程语言"><a href="#支持AOP的编程语言" class="headerlink" title="支持AOP的编程语言"></a>支持AOP的编程语言</h5><p>中间既包括了面向对象也包括了脚本语言，面向过程语言…  </p><ul><li>Java</li><li>.NET</li><li>c/c++</li><li>Ruby</li><li>Python</li><li>PHP</li><li>…</li></ul><ol start="2"><li>Spring中的AOP</li><li>小结</li></ol><h3 id="AOP使用"><a href="#AOP使用" class="headerlink" title="AOP使用"></a>AOP使用</h3><p>怎么在Spring中使用AOP</p><h3 id="AOP原理"><a href="#AOP原理" class="headerlink" title="AOP原理"></a>AOP原理</h3><p>讲述Spring  AOP的原理</p><h3 id="AOP开源运用"><a href="#AOP开源运用" class="headerlink" title="AOP开源运用"></a>AOP开源运用</h3><p>Spring AOP在一些开源项目当中的运用情况</p><h3 id="课程实战"><a href="#课程实战" class="headerlink" title="课程实战"></a>课程实战</h3><h3 id="课程总结"><a href="#课程总结" class="headerlink" title="课程总结"></a>课程总结</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;学习笔记&quot;&gt;&lt;a href=&quot;#学习笔记&quot; class=&quot;headerlink&quot; title=&quot;学习笔记&quot;&gt;&lt;/a&gt;学习笔记&lt;/h2&gt;&lt;h3 id=&quot;概念&quot;&gt;&lt;a href=&quot;#概念&quot; class=&quot;headerlink&quot; title=&quot;概念&quot;&gt;&lt;/a&gt;概念&lt;/h
      
    
    </summary>
    
    
      <category term="Spring" scheme="https://fengshana.github.io/categories/Spring/"/>
    
    
      <category term="Spring" scheme="https://fengshana.github.io/tags/Spring/"/>
    
  </entry>
  
  <entry>
    <title>前端页面双色球2</title>
    <link href="https://fengshana.github.io/2020/04/09/%E9%9D%A2%E8%AF%95%E9%A2%98/%E5%89%8D%E7%AB%AF%E9%A1%B5%E9%9D%A2%E6%94%B9%E8%BF%9B2/"/>
    <id>https://fengshana.github.io/2020/04/09/%E9%9D%A2%E8%AF%95%E9%A2%98/%E5%89%8D%E7%AB%AF%E9%A1%B5%E9%9D%A2%E6%94%B9%E8%BF%9B2/</id>
    <published>2020-04-08T19:47:56.000Z</published>
    <updated>2020-04-14T18:20:55.224Z</updated>
    
    <content type="html"><![CDATA[<h2 id="需求内容"><a href="#需求内容" class="headerlink" title="需求内容"></a>需求内容</h2><p><a href="https://github.com/fengshana/Mamai" target="_blank" rel="noopener">https://github.com/fengshana/Mamai</a>  </p><p>周聪这个孽畜，自己搞不清白需求，这个需求变来变去，你以为是变色龙，这么好变。<br>不要脑子啊。  </p><p>其实想了想，好像的确不怎么要脑子,挺简单的（说白了，我也想当一回这么瞎改需求的人，整天啥事不做，哔哔哔改需求）。<br>最近看了大话数据结构，我觉得这个写的有点那个运用到数据结构的味道，不知道是不是我想的有点多的缘故？<br>我想了下，我还想看剑指offer。<br>就这样决定了，我再看看剑指offer。等结束掉大话数据结构后。<br>刷算法面试题，emm，我的脑子可能不太好使啊。<br>david推荐的刷算法的地方我看了下，竞赛啊，啥啥啥的，因为里面论坛有人推荐说是，就是面试题先推荐剑指offer。<br>「David：<a href="https://leetcode-cn.com" target="_blank" rel="noopener">https://leetcode-cn.com</a> 这个上面好的算法题，可以练练，难度比较大一点。」</p><hr><p>我到时候先过一遍剑指offer吧，经典的先刷一波。  </p><p>好了不多说了，我的树还晾着呢。<br>代码变动不大，核心代码变动了主要是。<br><img src="http://r.photo.store.qq.com/psc?/V13IdniL4CDhqM/TCfiP1YaPeRT4Jil9RANXxuU4iMOynMQpgZWghe8iC*Hv9DIU54D9XwpBqPukpAap6RBv2zFOp*WfB.xOqeyEH4rbg9vByiV1MU7oLq7poY!/r" alt="image"></p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">这个是一段一段的</span><br><span class="line"></span><br><span class="line">第一个<span class="number">10</span>到第二个<span class="number">10</span> 没有</span><br><span class="line"></span><br><span class="line">那就是从第二个<span class="number">10</span>开始计算的</span><br><span class="line"></span><br><span class="line">是一段一段的</span><br><span class="line"></span><br><span class="line">不是说从第一个开始到结束的最后一个</span><br><span class="line"></span><br><span class="line">会分成很多段</span><br></pre></td></tr></table></figure><p>也就是说单排当中，即第一列当中如果第一个存在，第三个存在，第九个存在与查询的元素相同的元素的话，那么单排最大遗漏数是  </p><ol><li>第三个减去第一个得到一个，也就是第二个；</li><li>第九个减去第三个得到五个，也就是第四个、第五个、第六个、第七个、第八个；</li></ol><p>第二列、三列、…..、七列单排都这样。  </p><p>分段是指的是第一列当中的第一个到第三个是一段，第三个到第九个是一段；而第一个与第九个之间不会组成段。也就是相邻的相同元素之间组成的段。当前元素与下一相同元素之间组成的段。  </p><p><img src="http://r.photo.store.qq.com/psc?/V13IdniL4CDhqM/TCfiP1YaPeRT4Jil9RANX7uuHUVbVPuACfzTyR9eJsRiBmxtqPAUyvZo4RqJDM5tRKOUIoVDnT2XkRpSkRFQ5lXoVRpn0ahUJOp48IFGL.Y!/r" alt="image"></p><p>好，总排最大遗漏数就是，如果第一列当中的第一个存在，第二个存在，第六个存在；第二列当中第三个存在，第八个存在；第三列当中第三个存在，第八个存在；第四列当中第四个存在，第七个存在；那么总的遗漏数就是：</p><ol><li>总共有四列，八行。（x轴，y轴）</li><li>第一行当中，只有第一列当中的第一个存在（1，1），不进行比较；</li><li>第二行当中，只有第一列当中的第二个存在（1，2），进行与第一行当中的第一列当中的第一个（1，1）比较；得出这两个元素之间的遗漏数为0，中间没有隔元素，说白了，就是没有隔没有相同元素的行。</li><li>第三行当中，第二列（2，3）与第三列（3，3）当中存在，则与第二行的进行比较，行与行之间没有隔没有相同元素的行，所以遗漏数也是0。</li><li>第四行当中，第四列（4，4）存在相同元素，所以第三行在与第四行进行比较的时候，也是遗漏数为0。</li><li>重点来了，第五行当中不存在有相同元素。所以无法进行算端点与端点得出段的这个算这个遗漏数。</li><li>终于到了第六行，第六行当中，存在有（1，6）位置上的元素，所以此时，第六行与第四行的进行比较，不这样说吧，就是第四行的去与第六行的去进行比较，由于第五行不存在有相同元素，所以第五行是空着的，这样第六行与第四行之间就存在有遗漏数了。</li><li>说白了，也就是行与行之间的这个算了。存在有隔着的行就是有遗漏数了。跟单排一样的道理。我这个脑子没想明白。</li></ol><p>好了不说了，这个树晾了几天了。</p><blockquote><p>主要代码[ fillDataToTable ]：</p></blockquote><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 给detailData表格填充数据</span></span><br><span class="line"><span class="comment">     * @param sumArrays 所有数据</span></span><br><span class="line"><span class="comment"> * @param arrays 前端页面展示的数据</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> function fillDataToTable(<span class="built_in">arrays</span>,sumArrays)&#123;</span><br><span class="line"> //清空表格数据</span><br><span class="line"><span class="built_in">var</span> detailData=document.getElementById(<span class="string">"detailData"</span>);</span><br><span class="line">detailData.innerHTML=<span class="string">""</span>;</span><br><span class="line"></span><br><span class="line">//表格插入表头数据</span><br><span class="line"><span class="built_in">var</span> <span class="built_in">row</span>=detailData.insertRow(<span class="number">0</span>);</span><br><span class="line"><span class="built_in">row</span>.<span class="built_in">style</span>.fontWeight=<span class="string">"bolder"</span>;</span><br><span class="line"><span class="built_in">var</span> cell0=<span class="built_in">row</span>.insertCell(<span class="number">0</span>);</span><br><span class="line">cell0.innerHTML=<span class="string">"期数"</span>;</span><br><span class="line"><span class="built_in">var</span> cell1=<span class="built_in">row</span>.insertCell(<span class="number">1</span>);</span><br><span class="line">cell1.innerHTML=<span class="string">"开奖日期"</span>;</span><br><span class="line"><span class="built_in">var</span> cell2=<span class="built_in">row</span>.insertCell(<span class="number">2</span>);</span><br><span class="line"> cell2.innerHTML=<span class="string">"第一位数"</span>;</span><br><span class="line"><span class="built_in">var</span> cell3=<span class="built_in">row</span>.insertCell(<span class="number">3</span>);</span><br><span class="line"> cell3.innerHTML=<span class="string">"第二位数"</span>;</span><br><span class="line"><span class="built_in">var</span> cell4=<span class="built_in">row</span>.insertCell(<span class="number">4</span>);</span><br><span class="line">cell4.innerHTML=<span class="string">"第三位数"</span>;</span><br><span class="line"><span class="built_in">var</span> cell5=<span class="built_in">row</span>.insertCell(<span class="number">5</span>);</span><br><span class="line">cell5.innerHTML=<span class="string">"第四位数"</span>;</span><br><span class="line"><span class="built_in">var</span> cell6=<span class="built_in">row</span>.insertCell(<span class="number">6</span>);</span><br><span class="line">cell6.innerHTML=<span class="string">"第五位数"</span>;</span><br><span class="line"><span class="built_in">var</span> cell7=<span class="built_in">row</span>.insertCell(<span class="number">7</span>);</span><br><span class="line">cell7.innerHTML=<span class="string">"第六位数"</span>;</span><br><span class="line"><span class="built_in">var</span> cell8=<span class="built_in">row</span>.insertCell(<span class="number">8</span>);</span><br><span class="line">cell8.innerHTML=<span class="string">"第七位数"</span>;</span><br><span class="line"><span class="built_in">var</span> cell9=<span class="built_in">row</span>.insertCell(<span class="number">9</span>);</span><br><span class="line"> cell9.innerHTML=<span class="string">"操作"</span>;</span><br><span class="line"></span><br><span class="line">//表格分页数据插入</span><br><span class="line"><span class="keyword">for</span>(<span class="built_in">var</span> i=<span class="number">0</span>;i&lt;<span class="built_in">arrays</span>.<span class="built_in">length</span>;i++)&#123;</span><br><span class="line"><span class="built_in">var</span> json=<span class="built_in">arrays</span>[i];</span><br><span class="line"><span class="built_in">var</span> row2=detailData.insertRow(i+<span class="number">1</span>);</span><br><span class="line"><span class="built_in">var</span> cell0=row2.insertCell(<span class="number">0</span>);</span><br><span class="line">cell0.innerHTML=json.number;</span><br><span class="line"><span class="built_in">var</span> cell1=row2.insertCell(<span class="number">1</span>);</span><br><span class="line">cell1.innerHTML=json.createTime;</span><br><span class="line"><span class="built_in">var</span> cell2=row2.insertCell(<span class="number">2</span>);</span><br><span class="line">cell2.innerHTML=json.oneColumn;</span><br><span class="line"><span class="built_in">var</span> cell3=row2.insertCell(<span class="number">3</span>);</span><br><span class="line">cell3.innerHTML=json.twoColumn;</span><br><span class="line"><span class="built_in">var</span> cell4=row2.insertCell(<span class="number">4</span>);</span><br><span class="line">cell4.innerHTML=json.threeColumn;</span><br><span class="line"><span class="built_in">var</span> cell5=row2.insertCell(<span class="number">5</span>);</span><br><span class="line">cell5.innerHTML=json.fourColumn;</span><br><span class="line"><span class="built_in">var</span> cell6=row2.insertCell(<span class="number">6</span>);</span><br><span class="line">cell6.innerHTML=json.fiveColumn;</span><br><span class="line"><span class="built_in">var</span> cell7=row2.insertCell(<span class="number">7</span>);</span><br><span class="line">cell7.innerHTML=json.sixColumn;</span><br><span class="line"><span class="built_in">var</span> cell8=row2.insertCell(<span class="number">8</span>);</span><br><span class="line">cell8.innerHTML=json.sevenColumn;</span><br><span class="line"><span class="built_in">var</span> cell9=row2.insertCell(<span class="number">9</span>);</span><br><span class="line">cell9.innerHTML=<span class="string">"&lt;button onclick=\"show(this,"</span>+json.id+<span class="string">")\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#myModal\" &gt;编辑&lt;/button&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//单排遗漏数计算  总排遗漏数的计算应该简单，即每一排当中的最小值index，与每一排的最大值index取出来放入集合最后遍历出最小index与最大indeax进行相减即可</span><br><span class="line">//将总数据中sumArrays每一列数组分组出来形成sumArray=[oneArray[oneColumn,...],twoArray[twoColumn,...],...,sevenArray[sevenColumn,...]]</span><br><span class="line"> <span class="built_in">var</span> oneArray=[], twoArray=[], threeArray=[], fourArray=[],  fiveArray=[],  sixArray=[],  sevenArray=[], sumArray=[];</span><br><span class="line"> <span class="keyword">for</span>(<span class="built_in">var</span> i=<span class="number">0</span>;i&lt;sumArrays.<span class="built_in">length</span>;i++)&#123;</span><br><span class="line"> <span class="built_in">var</span> json=sumArrays[i];</span><br><span class="line"> oneArray.<span class="built_in">push</span>(json.oneColumn);</span><br><span class="line"> twoArray.<span class="built_in">push</span>(json.twoColumn);</span><br><span class="line"> threeArray.<span class="built_in">push</span>(json.threeColumn);</span><br><span class="line"> fourArray.<span class="built_in">push</span>(json.fourColumn);</span><br><span class="line"> fiveArray.<span class="built_in">push</span>(json.fiveColumn);</span><br><span class="line"> sixArray.<span class="built_in">push</span>(json.sixColumn);</span><br><span class="line"> sevenArray.<span class="built_in">push</span>(json.sevenColumn);</span><br><span class="line"> &#125;</span><br><span class="line"> //插入<span class="number">7</span>列数组数据</span><br><span class="line"> sumArray.<span class="built_in">push</span>(oneArray);</span><br><span class="line"> sumArray.<span class="built_in">push</span>(twoArray);</span><br><span class="line"> sumArray.<span class="built_in">push</span>(threeArray);</span><br><span class="line"> sumArray.<span class="built_in">push</span>(fourArray);</span><br><span class="line"> sumArray.<span class="built_in">push</span>(fiveArray);</span><br><span class="line"> sumArray.<span class="built_in">push</span>(sixArray);</span><br><span class="line"> sumArray.<span class="built_in">push</span>(sevenArray);</span><br><span class="line"></span><br><span class="line"> //底部表头插入</span><br><span class="line"> <span class="built_in">var</span> tr0=detailData.insertRow(<span class="built_in">arrays</span>.<span class="built_in">length</span>+<span class="number">1</span>);</span><br><span class="line"> <span class="built_in">var</span> td0=tr0.insertCell(<span class="number">0</span>);</span><br><span class="line"> td0.colSpan=<span class="number">2</span>;</span><br><span class="line"> td0.innerHTML=<span class="string">"遗漏信息"</span>;</span><br><span class="line"> td0.<span class="built_in">style</span>.fontWeight=<span class="string">"bolder"</span>;</span><br><span class="line"> <span class="built_in">var</span> td00=tr0.insertCell(<span class="number">1</span>);</span><br><span class="line"> td00.colSpan=<span class="number">8</span>;</span><br><span class="line"></span><br><span class="line"> <span class="built_in">var</span> <span class="built_in">tr</span>=detailData.insertRow(<span class="built_in">arrays</span>.<span class="built_in">length</span>+<span class="number">2</span>);</span><br><span class="line"> <span class="built_in">var</span> td=<span class="built_in">tr</span>.insertCell(<span class="number">0</span>);</span><br><span class="line"> td.<span class="built_in">style</span>.fontWeight=<span class="string">"bolder"</span>;</span><br><span class="line"> td.innerHTML=<span class="string">"数字 | 单排最大遗漏数 | 总排最大遗漏数"</span>;</span><br><span class="line"> td.colSpan=<span class="number">2</span>;</span><br><span class="line"></span><br><span class="line"> //根据所查询的number分隔逗号，计算并得到其遗漏信息(数字、单排最大遗漏数、总排最大遗漏数)</span><br><span class="line"> <span class="built_in">var</span> numbers=document.getElementById(<span class="string">"number"</span>).value.trim();</span><br><span class="line"> console.<span class="built_in">log</span>(<span class="string">"nums: "</span>+numbers.<span class="built_in">split</span>(<span class="string">","</span>));</span><br><span class="line"></span><br><span class="line">//需要查询的number为空；则不进行显示其遗漏信息</span><br><span class="line"> <span class="keyword">if</span>(numbers==null || numbers=='' || numbers==undefined)&#123;</span><br><span class="line"> <span class="built_in">var</span> td11=<span class="built_in">tr</span>.insertCell(<span class="number">1</span>);</span><br><span class="line"> td11.colSpan=<span class="number">8</span>;</span><br><span class="line"> &#125;</span><br><span class="line"> //需要查询的number不为空；则进行显示其遗漏信息</span><br><span class="line"> <span class="keyword">else</span>&#123;</span><br><span class="line"> <span class="built_in">var</span> nums=numbers.<span class="built_in">split</span>(<span class="string">","</span>); //则遗漏信息、数字、单排最大遗漏数进行显示 循环查询每个数值的单排 总排</span><br><span class="line"></span><br><span class="line"> //需要查询的number遗漏信息数组的长度进行循环得到</span><br><span class="line"> <span class="keyword">for</span>(<span class="built_in">var</span> h=<span class="number">0</span>;h&lt;nums.<span class="built_in">length</span>;h++)&#123;</span><br><span class="line">  <span class="built_in">var</span> number=nums[h];//查询的数值</span><br><span class="line"> <span class="built_in">var</span> singleMap=<span class="built_in">new</span> Map();//关于该数值的单排最大遗漏数</span><br><span class="line"> <span class="built_in">var</span> sumList=[];</span><br><span class="line"> // <span class="built_in">var</span> minIndexMap=<span class="built_in">new</span> Map();//每一列， 每一个单排当中的最小index</span><br><span class="line"> // <span class="built_in">var</span> maxIndexMap=<span class="built_in">new</span> Map();//每一列， 每一个单排当中的最大index</span><br><span class="line"></span><br><span class="line"> <span class="keyword">for</span>(<span class="built_in">var</span> t=<span class="number">0</span>;t&lt;sumArray.<span class="built_in">length</span>;t++)&#123; //当前<span class="number">7</span>个数组当中都存有对应的关于该需要进行查询遗漏信息的数值number,循环<span class="number">7</span>次,在七列当中进行查找以及得到它们所在的index</span><br><span class="line"> <span class="built_in">var</span> arrays2=sumArray[t];//总共有<span class="number">7</span>列，当前第t，单个数组</span><br><span class="line"> <span class="built_in">var</span> <span class="built_in">map</span>=<span class="built_in">new</span> Map();</span><br><span class="line"></span><br><span class="line"> <span class="keyword">for</span>(<span class="built_in">var</span> i=<span class="number">0</span>;i&lt;arrays2.<span class="built_in">length</span>;i++) &#123; //每一列数组元素的循环</span><br><span class="line"> <span class="built_in">var</span> element = arrays2[i]; //当前七列中第t列数组当中具体的元素</span><br><span class="line"> <span class="keyword">if</span> (number == element) &#123;</span><br><span class="line"> <span class="keyword">if</span>(<span class="built_in">map</span>.<span class="built_in">get</span>(element)==null || <span class="built_in">map</span>.<span class="built_in">get</span>(element)==undefined)&#123;</span><br><span class="line"><span class="built_in">map</span>.<span class="built_in">put</span>(element, &#123;prior: null, curr: null, size: null&#125;); //<span class="built_in">map</span>.<span class="built_in">put</span>(element,<span class="number">0</span>);//放入了该列当中所有不重复元素以及其实时变化的位移index+<span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="keyword">for</span>(<span class="built_in">var</span> n=<span class="number">0</span>;n&lt;arrays2.<span class="built_in">length</span>;n++)&#123;</span><br><span class="line"> <span class="built_in">var</span> <span class="built_in">key</span>=arrays2[n]; //当前七列中第t列数组当中具体的元素</span><br><span class="line"> <span class="keyword">if</span>(<span class="built_in">key</span>!=null &amp;&amp; <span class="built_in">key</span>==element &amp;&amp; number == <span class="built_in">key</span>)&#123; //如果存在有当前循环的数组当中的取值与<span class="built_in">map</span>当中的键相同的则重新赋值，重新赋值后进行<span class="built_in">break</span>;//<span class="built_in">var</span> y=i-n;</span><br><span class="line"> sumList.<span class="built_in">push</span>(n);</span><br><span class="line"></span><br><span class="line"> //存储每一个元素他的前一位相同元素的下标；y为当前元素的下标</span><br><span class="line"> <span class="keyword">if</span>((<span class="built_in">map</span>.<span class="built_in">get</span>(element)!=null &amp;&amp; <span class="built_in">map</span>.<span class="built_in">get</span>(element)!=undefined)</span><br><span class="line"> &amp;&amp; <span class="built_in">map</span>.<span class="built_in">get</span>(element).prior==null &amp;&amp; <span class="built_in">map</span>.<span class="built_in">get</span>(element).curr==null &amp;&amp; <span class="built_in">map</span>.<span class="built_in">get</span>(element).size==null)&#123;</span><br><span class="line"> <span class="built_in">map</span>.<span class="built_in">put</span>(element,&#123;prior: n, curr: n, size: <span class="number">0</span>&#125;); //第一次遇到元素相同的时候</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">if</span>((<span class="built_in">map</span>.<span class="built_in">get</span>(element)!=null &amp;&amp; <span class="built_in">map</span>.<span class="built_in">get</span>(element)!=undefined)</span><br><span class="line"> &amp;&amp; (<span class="built_in">map</span>.<span class="built_in">get</span>(element).prior!=null &amp;&amp; <span class="built_in">map</span>.<span class="built_in">get</span>(element).curr!=null &amp;&amp; <span class="built_in">map</span>.<span class="built_in">get</span>(element).size!=null)</span><br><span class="line">  &amp;&amp; <span class="built_in">map</span>.<span class="built_in">get</span>(element).prior==<span class="built_in">map</span>.<span class="built_in">get</span>(element).curr)&#123;</span><br><span class="line"> <span class="built_in">map</span>.<span class="built_in">put</span>(element,&#123;prior: <span class="built_in">map</span>.<span class="built_in">get</span>(element).prior, curr: n, size: n-<span class="built_in">map</span>.<span class="built_in">get</span>(element).prior&#125;); //第二次遇到元素相同的时候</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="keyword">if</span>((<span class="built_in">map</span>.<span class="built_in">get</span>(element)!=null &amp;&amp; <span class="built_in">map</span>.<span class="built_in">get</span>(element)!=undefined)</span><br><span class="line"> &amp;&amp; (<span class="built_in">map</span>.<span class="built_in">get</span>(element).prior!=null &amp;&amp; <span class="built_in">map</span>.<span class="built_in">get</span>(element).curr!=null  &amp;&amp; <span class="built_in">map</span>.<span class="built_in">get</span>(element).size!=null)</span><br><span class="line"> &amp;&amp; <span class="built_in">map</span>.<span class="built_in">get</span>(element).prior!=<span class="built_in">map</span>.<span class="built_in">get</span>(element).curr) &#123;</span><br><span class="line">  // 此时 <span class="built_in">map</span> 中的 curr 即当前 <span class="built_in">key</span> 的相同元素的上一位置 prior 的 index ;取出 prior;</span><br><span class="line"> // 得到当前 <span class="built_in">key</span> index 与当前 <span class="built_in">key</span> index 的 prior 的 size；</span><br><span class="line"> // 如果当前 size较之此时<span class="built_in">map</span>当中element元素的size要大，则进行替换</span><br><span class="line"> <span class="built_in">var</span> currPrior=<span class="built_in">map</span>.<span class="built_in">get</span>(element).curr; //当前的上一位</span><br><span class="line"> <span class="built_in">var</span> currSize=n-currPrior; //当前的大小</span><br><span class="line"> <span class="built_in">var</span> priorSize=<span class="built_in">map</span>.<span class="built_in">get</span>(element).size; //上一位的大小</span><br><span class="line"> <span class="keyword">if</span>(currSize&gt;priorSize)&#123;</span><br><span class="line"> <span class="built_in">map</span>.<span class="built_in">put</span>(element,&#123;prior:currPrior, curr:n, size:currSize&#125;);</span><br><span class="line"> &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> &#125;<span class="keyword">else</span>&#123;</span><br><span class="line"> continue;//跳出对于第i列数组中element元素对于当前n数组的当次循环，进入当前n数组迭代下一元素<span class="built_in">key</span>的循环</span><br><span class="line"> &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> console.<span class="built_in">log</span>(<span class="string">"第"</span>+t+<span class="string">"列当中，每一个元素的单排最大遗漏数："</span>+JSON.stringify(<span class="built_in">map</span>));</span><br><span class="line"> <span class="keyword">if</span>(<span class="built_in">map</span>.<span class="built_in">get</span>(number)!=null || <span class="built_in">map</span>.<span class="built_in">get</span>(number)!=undefined)&#123;</span><br><span class="line"> //取值则为当前该<span class="built_in">map</span>.<span class="built_in">get</span>(number)即当前列当中的单排最大遗漏数</span><br><span class="line"> singleMap.<span class="built_in">put</span>(t,<span class="built_in">map</span>.<span class="built_in">get</span>(number).size-<span class="number">1</span>);//singleMap.<span class="built_in">put</span>(t,<span class="built_in">map</span>.<span class="built_in">get</span>(number)-<span class="number">1</span>);//<span class="built_in">key</span> t：哪一列， value 当前该数值在当前排t的最大遗漏数  <span class="built_in">map</span>.<span class="built_in">get</span>(number)需要减去<span class="number">1</span></span><br><span class="line"> &#125;<span class="keyword">else</span>&#123;</span><br><span class="line"> //当前列取出number如果为空则说明当前列当中不存在有该数值，则替换为<span class="number">0</span></span><br><span class="line"> singleMap.<span class="built_in">put</span>(t,'当前列不存在'+number);</span><br><span class="line"> &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> //遍历完<span class="number">7</span>个数组后得到当前查询的该数值的所有index</span><br><span class="line"> //得到当前查询的该数值的在<span class="number">7</span>列中的所有index，并进行index排序<span class="built_in">sort</span>,每一个index都与index.next进行比较得到size</span><br><span class="line"> //定义maxSize变量，并进行赋值</span><br><span class="line"> sumList.<span class="built_in">sort</span>(sortNumber);</span><br><span class="line"> <span class="built_in">var</span> sumMaxNumber=null;</span><br><span class="line"> <span class="keyword">if</span>(sumList.<span class="built_in">length</span>==<span class="number">0</span>)&#123;</span><br><span class="line"> sumMaxNumber='不存在';</span><br><span class="line"> &#125;<span class="keyword">else</span>&#123;</span><br><span class="line"> <span class="keyword">for</span>(<span class="built_in">var</span> g=<span class="number">0</span>;g&lt;sumList.<span class="built_in">length</span>;g++)&#123;</span><br><span class="line"> <span class="keyword">if</span>(sumMaxNumber==null)&#123;</span><br><span class="line"> sumMaxNumber=sumList[g+<span class="number">1</span>]-sumList[g];</span><br><span class="line"> &#125;<span class="keyword">else</span>&#123;</span><br><span class="line"> <span class="built_in">var</span> nextSize=sumList[g+<span class="number">1</span>]-sumList[g];</span><br><span class="line"> <span class="keyword">if</span>(nextSize&gt;sumMaxNumber)&#123;</span><br><span class="line">sumMaxNumber=nextSize;</span><br><span class="line">&#125;</span><br><span class="line"> &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="built_in">var</span> mapArrays=singleMap.entrys();//循环之后获取得到singleMap,即单排数</span><br><span class="line"> <span class="keyword">if</span> (h == <span class="number">0</span>) &#123; //即第一个数值的时候填入行<span class="built_in">tr</span>:<span class="built_in">arrays</span>.<span class="built_in">length</span>+<span class="number">2</span></span><br><span class="line"> td.innerHTML=<span class="string">"数字: "</span>+number+<span class="string">" | 单排最大遗漏数 | 总排最大遗漏数: "</span>+sumMaxNumber;</span><br><span class="line"> <span class="keyword">for</span>(<span class="built_in">var</span> r=<span class="number">0</span>;r&lt;mapArrays.<span class="built_in">length</span>;r++) &#123;</span><br><span class="line"> <span class="built_in">var</span> td22 = <span class="built_in">tr</span>.insertCell(r+<span class="number">1</span>);//当前行处于第一行</span><br><span class="line"> td22.innerHTML = singleMap.<span class="built_in">get</span>(r);</span><br><span class="line"> &#125;</span><br><span class="line"> <span class="built_in">tr</span>.insertCell(mapArrays.<span class="built_in">length</span>+<span class="number">1</span>);</span><br><span class="line"> &#125; <span class="keyword">else</span> &#123;</span><br><span class="line"> //新增行并插入</span><br><span class="line"> <span class="built_in">var</span> newTr=detailData.insertRow(<span class="built_in">arrays</span>.<span class="built_in">length</span>+<span class="number">2</span>+h);</span><br><span class="line"> <span class="built_in">var</span> newTd=newTr.insertCell(<span class="number">0</span>);</span><br><span class="line"> newTd.innerHTML=<span class="string">"数字: "</span>+number+<span class="string">" | 单排最大遗漏数 | 总排最大遗漏数: "</span>+sumMaxNumber;</span><br><span class="line"> newTd.<span class="built_in">style</span>.fontWeight=<span class="string">"bolder"</span>;</span><br><span class="line"> newTd.colSpan=<span class="number">2</span>;</span><br><span class="line"> <span class="keyword">for</span>(<span class="built_in">var</span> r=<span class="number">0</span>;r&lt;mapArrays.<span class="built_in">length</span>;r++) &#123;</span><br><span class="line"> <span class="built_in">var</span> td22 = newTr.insertCell(r+<span class="number">1</span>);//从第二行开始进行新增列</span><br><span class="line"> td22.innerHTML = singleMap.<span class="built_in">get</span>(r);</span><br><span class="line"> &#125;</span><br><span class="line"> newTr.insertCell(mapArrays.<span class="built_in">length</span>+<span class="number">1</span>);</span><br><span class="line"> &#125;</span><br><span class="line"> console.<span class="built_in">log</span>(<span class="string">"================== 查询数值："</span>+number+<span class="string">" END =================="</span>);</span><br><span class="line"> &#125;</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>下面小哥我就贴一下全部的代码哟：</p></blockquote><figure class="highlight erb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br><span class="line">878</span><br><span class="line">879</span><br><span class="line">880</span><br><span class="line">881</span><br><span class="line">882</span><br><span class="line">883</span><br><span class="line">884</span><br><span class="line">885</span><br><span class="line">886</span><br><span class="line">887</span><br><span class="line">888</span><br><span class="line">889</span><br><span class="line">890</span><br><span class="line">891</span><br><span class="line">892</span><br><span class="line">893</span><br><span class="line">894</span><br><span class="line">895</span><br><span class="line">896</span><br><span class="line">897</span><br><span class="line">898</span><br><span class="line">899</span><br><span class="line">900</span><br><span class="line">901</span><br><span class="line">902</span><br><span class="line">903</span><br><span class="line">904</span><br><span class="line">905</span><br><span class="line">906</span><br><span class="line">907</span><br><span class="line">908</span><br><span class="line">909</span><br><span class="line">910</span><br><span class="line">911</span><br><span class="line">912</span><br><span class="line">913</span><br><span class="line">914</span><br><span class="line">915</span><br><span class="line">916</span><br><span class="line">917</span><br><span class="line">918</span><br><span class="line">919</span><br><span class="line">920</span><br><span class="line">921</span><br><span class="line">922</span><br><span class="line">923</span><br><span class="line">924</span><br><span class="line">925</span><br><span class="line">926</span><br><span class="line">927</span><br><span class="line">928</span><br><span class="line">929</span><br><span class="line">930</span><br><span class="line">931</span><br><span class="line">932</span><br><span class="line">933</span><br><span class="line">934</span><br><span class="line">935</span><br><span class="line">936</span><br><span class="line">937</span><br><span class="line">938</span><br><span class="line">939</span><br><span class="line">940</span><br><span class="line">941</span><br><span class="line">942</span><br><span class="line">943</span><br><span class="line">944</span><br><span class="line">945</span><br><span class="line">946</span><br><span class="line">947</span><br><span class="line">948</span><br><span class="line">949</span><br><span class="line">950</span><br><span class="line">951</span><br><span class="line">952</span><br><span class="line">953</span><br><span class="line">954</span><br><span class="line">955</span><br><span class="line">956</span><br><span class="line">957</span><br><span class="line">958</span><br><span class="line">959</span><br><span class="line">960</span><br><span class="line">961</span><br><span class="line">962</span><br><span class="line">963</span><br><span class="line">964</span><br><span class="line">965</span><br><span class="line">966</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%</span></span></span><span class="ruby">@ page import=<span class="string">"com.alibaba.fastjson.JSONObject"</span> </span><span class="xml"><span class="tag">%&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%</span></span></span><span class="ruby">@ page import=<span class="string">"java.util.ArrayList"</span> </span><span class="xml"><span class="tag">%&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%</span></span></span><span class="ruby">@ page import=<span class="string">"java.util.HashMap"</span> </span><span class="xml"><span class="tag">%&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%</span></span></span><span class="ruby">@ page import=<span class="string">"java.util.List"</span> </span><span class="xml"><span class="tag">%&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%</span></span></span><span class="ruby">@ page import=<span class="string">"java.util.Map"</span> </span><span class="xml"><span class="tag">%&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%</span></span></span><span class="ruby">@ page import=<span class="string">"com.maima.entity.MaiMa"</span> </span><span class="xml"><span class="tag">%&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%</span></span></span><span class="ruby">@ page import=<span class="string">"com.maima.entity.TUserInfo"</span> </span><span class="xml"><span class="tag">%&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%</span></span></span><span class="ruby">@ page language=<span class="string">"java"</span> contentType=<span class="string">"text/html; charset=UTF-8"</span></span></span><br><span class="line"><span class="ruby"> pageEncoding=<span class="string">"UTF-8"</span></span><span class="xml">%&gt;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%</span></span></span><span class="ruby">@ page trimDirectiveWhitespaces=<span class="string">"true"</span></span><span class="xml"><span class="tag">%&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%</span></span></span><span class="ruby">@ taglib prefix=<span class="string">"c"</span> uri=<span class="string">"http://java.sun.com/jsp/jstl/core"</span></span><span class="xml"><span class="tag">%&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%</span></span></span><span class="ruby">@ taglib prefix=<span class="string">"itcast"</span> uri=<span class="string">"http://itcast.cn/common/"</span></span><span class="xml"><span class="tag">%&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%</span></span></span></span><br><span class="line"><span class="ruby">TUserInfo tUserInfo=(TUserInfo) request.getSession().getAttribute(<span class="string">"tUserInfo"</span>);</span></span><br><span class="line"><span class="ruby"><span class="keyword">if</span>(tUserInfo==null)&#123;</span></span><br><span class="line"><span class="ruby">String path = request.getContextPath();</span></span><br><span class="line"><span class="ruby">String basePath = request.getScheme() + <span class="string">"://"</span> + request.getServerName() + <span class="string">":"</span> + request.getServerPort()</span></span><br><span class="line"><span class="ruby">+ path + <span class="string">"/"</span>;</span></span><br><span class="line"><span class="ruby">response.sendRedirect(basePath+<span class="string">"maima/index"</span>);</span></span><br><span class="line"><span class="ruby">&#125;</span></span><br><span class="line"><span class="xml">%&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span> <span class="meta-keyword">PUBLIC</span> <span class="meta-string">"-//W3C//DTD XHTML 1.0 Transitional//EN"</span> <span class="meta-string">"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span> <span class="attr">xmlns</span>=<span class="string">"http://www.w3.org/1999/xhtml"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"X-UA-Compatible"</span> <span class="attr">content</span>=<span class="string">"IE=edge"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"description"</span> <span class="attr">content</span>=<span class="string">""</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"author"</span> <span class="attr">content</span>=</span></span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- Bootstrap Core CSS --&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"/static/css/bootstrap.min.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"/static/css/metisMenu.min.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"/static/css/dataTables.bootstrap.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"/static/css/sb-admin-2.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"/static/css/font-awesome.min.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span></span></span></span><br><span class="line"><span class="xml">  type="text/css"&gt;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"/static/css/boot-crm.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span></span></span></span><br><span class="line"><span class="xml">  type="text/css"&gt;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"https://cdn.bootcss.com/bootstrap-datetimepicker/4.17.47/css/bootstrap-datetimepicker.min.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">![endif]--</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span></span><br><span class="line"><span class="xml">.inputText&#123;</span></span><br><span class="line"><span class="xml">width:200px;</span></span><br><span class="line"><span class="xml">&#125;</span></span><br><span class="line"><span class="xml">.alert &#123;</span></span><br><span class="line"><span class="xml">display: none;</span></span><br><span class="line"><span class="xml">position: fixed;</span></span><br><span class="line"><span class="xml">top: 50%;</span></span><br><span class="line"><span class="xml">left: 50%;</span></span><br><span class="line"><span class="xml">min-width: 300px;</span></span><br><span class="line"><span class="xml">max-width: 600px;</span></span><br><span class="line"><span class="xml">transform: translate(-50%,-50%);</span></span><br><span class="line"><span class="xml">z-index: 99999;</span></span><br><span class="line"><span class="xml">text-align: center;</span></span><br><span class="line"><span class="xml">padding: 15px;</span></span><br><span class="line"><span class="xml">border-radius: 3px;</span></span><br><span class="line"><span class="xml">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">.alert-success &#123;</span></span><br><span class="line"><span class="xml">color: #3c763d;</span></span><br><span class="line"><span class="xml">background-color: #dff0d8;</span></span><br><span class="line"><span class="xml">border-color: #d6e9c6;</span></span><br><span class="line"><span class="xml">&#125;</span></span><br><span class="line"><span class="xml">.alert-info &#123;</span></span><br><span class="line"><span class="xml">color: #31708f;</span></span><br><span class="line"><span class="xml">background-color: #d9edf7;</span></span><br><span class="line"><span class="xml">border-color: #bce8f1;</span></span><br><span class="line"><span class="xml">&#125;</span></span><br><span class="line"><span class="xml">.alert-warning &#123;</span></span><br><span class="line"><span class="xml">color: #8a6d3b;</span></span><br><span class="line"><span class="xml">background-color: #fcf8e3;</span></span><br><span class="line"><span class="xml">border-color: #faebcc;</span></span><br><span class="line"><span class="xml">&#125;</span></span><br><span class="line"><span class="xml">.alert-danger &#123;</span></span><br><span class="line"><span class="xml">color: #a94442;</span></span><br><span class="line"><span class="xml">background-color: #f2dede;</span></span><br><span class="line"><span class="xml">border-color: #ebccd1;</span></span><br><span class="line"><span class="xml">&#125;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- 模态框（Modal） --&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal fade"</span> <span class="attr">id</span>=<span class="string">"myModal"</span> <span class="attr">tabindex</span>=<span class="string">"-1"</span> <span class="attr">role</span>=<span class="string">"dialog"</span> <span class="attr">aria-labelledby</span>=<span class="string">"myModalLabel"</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-dialog"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-content"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-header"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"close"</span> <span class="attr">data-dismiss</span>=<span class="string">"modal"</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span><span class="symbol">&amp;times;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">h4</span> <span class="attr">class</span>=<span class="string">"modal-title"</span> <span class="attr">id</span>=<span class="string">"myModalLabel"</span>&gt;</span>编辑<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-body"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel-body"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"number"</span>&gt;</span>编号 <span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span>  <span class="attr">class</span>=<span class="string">"form-control inputText"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"id"</span> <span class="attr">readonly</span>=<span class="string">"readonly"</span> /&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"number"</span>&gt;</span>期数 <span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span>  <span class="attr">class</span>=<span class="string">"form-control inputText"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"numberId"</span> /&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"number"</span>&gt;</span>开奖日期 <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">'input-group date'</span>  <span class="attr">style</span>=<span class="string">"width: 200px;"</span>  <span class="attr">id</span>=<span class="string">'datetimepicker3'</span> &gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">'text'</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">id</span>=<span class="string">'createTime'</span>/&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"input-group-addon"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-calendar"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"number"</span>&gt;</span>第一位数 <span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"form-control inputText"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"oneColumn"</span> /&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"number"</span>&gt;</span>第二位数 <span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"form-control inputText"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"twoColumn"</span> /&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"number"</span>&gt;</span>第三位数 <span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"form-control inputText"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"threeColumn"</span> /&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"number"</span>&gt;</span>第四位数 <span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"form-control inputText"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"fourColumn"</span> /&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"number"</span>&gt;</span>第五位数 <span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"form-control inputText"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"fiveColumn"</span> /&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"number"</span>&gt;</span>第六位数 <span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"form-control inputText"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"sixColumn"</span> /&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"number"</span>&gt;</span>第七位数 <span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"form-control inputText"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"sevenColumn"</span> /&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-footer"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span> <span class="attr">data-dismiss</span>=<span class="string">"modal"</span>&gt;</span>关闭<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span> <span class="attr">onclick</span>=<span class="string">"edit()"</span>&gt;</span>提交更改<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- 模态框（Modal） --&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal fade"</span> <span class="attr">id</span>=<span class="string">"myModal2"</span> <span class="attr">tabindex</span>=<span class="string">"-1"</span> <span class="attr">role</span>=<span class="string">"dialog"</span> <span class="attr">aria-labelledby</span>=<span class="string">"myModalLabel"</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-dialog"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-content"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-header"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"close"</span> <span class="attr">data-dismiss</span>=<span class="string">"modal2"</span> <span class="attr">aria-hidden</span>=<span class="string">"true"</span>&gt;</span><span class="symbol">&amp;times;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">h4</span> <span class="attr">class</span>=<span class="string">"modal-title"</span> <span class="attr">id</span>=<span class="string">"myModalLabel2"</span>&gt;</span>新增<span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-body"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel-body"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"number"</span>&gt;</span>期数 <span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"form-control inputText"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"numberId2"</span> /&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"number"</span>&gt;</span>开奖日期 <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">'input-group date'</span>  <span class="attr">style</span>=<span class="string">"width: 200px;"</span>  <span class="attr">id</span>=<span class="string">'datetimepicker4'</span> &gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">'text'</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">id</span>=<span class="string">'createTime2'</span> /&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"input-group-addon"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-calendar"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"number"</span>&gt;</span>第一位数 <span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"form-control inputText"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"oneColumn2"</span> /&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"number"</span>&gt;</span>第二位数 <span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"form-control inputText"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"twoColumn2"</span> /&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"number"</span>&gt;</span>第三位数 <span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"form-control inputText"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"threeColumn2"</span> /&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"number"</span>&gt;</span>第四位数 <span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"form-control inputText"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"fourColumn2"</span> /&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"number"</span>&gt;</span>第五位数 <span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"form-control inputText"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"fiveColumn2"</span> /&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"number"</span>&gt;</span>第六位数 <span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"form-control inputText"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"sixColumn2"</span> /&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"number"</span>&gt;</span>第七位数 <span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"form-control inputText"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">id</span>=<span class="string">"sevenColumn2"</span> /&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"modal-footer"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-default"</span> <span class="attr">data-dismiss</span>=<span class="string">"modal"</span>&gt;</span>关闭<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span> <span class="attr">onclick</span>=<span class="string">"add()"</span>&gt;</span>提交更改<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"alert"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"wrapper"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"page-wrapper"</span> <span class="attr">style</span>=<span class="string">"height: 100%"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel panel-default"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel-body"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"number"</span>&gt;</span>数字搜索 <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">id</span>=<span class="string">"number"</span> <span class="attr">value</span>=<span class="string">"$&#123;number&#125;"</span> <span class="attr">name</span>=<span class="string">"number"</span> <span class="attr">style</span>=<span class="string">"width: 200px;"</span>/&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"page"</span> <span class="attr">value</span>=<span class="string">"$&#123;page&#125;"</span> <span class="attr">name</span>=<span class="string">"page"</span> <span class="attr">style</span>=<span class="string">"display: none;"</span> /&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"pageSize"</span> <span class="attr">value</span>=<span class="string">"$&#123;pageSize&#125;"</span> <span class="attr">name</span>=<span class="string">"pageSize"</span>  <span class="attr">style</span>=<span class="string">"display: none;"</span> /&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">label</span>&gt;</span>开始日期 <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">'input-group date'</span> <span class="attr">id</span>=<span class="string">'datetimepicker1'</span> <span class="attr">style</span>=<span class="string">"width: 200px;"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">'text'</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">id</span>=<span class="string">"createTime3"</span>/&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"input-group-addon"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-calendar"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">label</span>&gt;</span>结束日期 <span class="tag">&lt;/<span class="name">label</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">'input-group date'</span> <span class="attr">id</span>=<span class="string">'datetimepicker2'</span> <span class="attr">style</span>=<span class="string">"width: 200px;"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">'text'</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">id</span>=<span class="string">"createTime4"</span> /&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"input-group-addon"</span>&gt;</span></span></span><br><span class="line"><span class="xml">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-calendar"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml">                <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">"go()"</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span>&gt;</span>查询<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">button</span> <span class="attr">style</span>=<span class="string">"margin-left:10px"</span> <span class="attr">onclick</span>=<span class="string">"reset()"</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span>&gt;</span>清空<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">button</span> <span class="attr">style</span>=<span class="string">"margin-left:10px"</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span> <span class="attr">data-toggle</span>=<span class="string">"modal"</span> <span class="attr">data-target</span>=<span class="string">"#myModal2"</span>&gt;</span>新增<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-lg-12"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel panel-default"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">"table table-bordered table-striped"</span> <span class="attr">id</span>=<span class="string">"detailData"</span> <span class="attr">style</span>=<span class="string">"text-align: center;"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-lg-12"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel panel-default"</span> <span class="attr">style</span>=<span class="string">"text-align: right"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span> <span class="attr">onclick</span>=<span class="string">"up()"</span>&gt;</span>上一页<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">"btn btn-primary"</span> <span class="attr">onclick</span>=<span class="string">"down()"</span>&gt;</span>下一页<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"/static/js/jquery.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"/static/js/jquery-ui.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"/static/js/bootstrap.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"/static/js/metisMenu.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"/static/js/jquery.dataTables.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"/static/js/dataTables.bootstrap.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"/static/js/sb-admin-2.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">'/static/js/stopExecutionOnTimeout.js?t=1'</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"/static/layui/layui.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"/static/js/Particleground.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"/static/js/Treatment.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"/static/js/jquery.mockjax.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/moment.js/2.24.0/moment-with-locales.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"https://cdn.bootcss.com/bootstrap-datetimepicker/4.17.47/js/bootstrap-datetimepicker.min.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span></span></span><br><span class="line"><span class="xml">/**</span></span><br><span class="line"><span class="xml"> * 初始化日期组件1、2、3、4</span></span><br><span class="line"><span class="xml"> */</span></span><br><span class="line"><span class="xml">$(function () &#123;</span></span><br><span class="line"><span class="xml">for(var i=1;i<span class="tag">&lt;<span class="name">5;i++)&#123;</span></span></span></span><br><span class="line"><span class="xml">$('#datetimepicker'+i).datetimepicker(&#123;</span></span><br><span class="line"><span class="xml">format: 'YYYY-MM-DD',</span></span><br><span class="line"><span class="xml">locale: moment.locale('zh-cn')</span></span><br><span class="line"><span class="xml">&#125;);</span></span><br><span class="line"><span class="xml">&#125;</span></span><br><span class="line"><span class="xml">&#125;);</span></span><br><span class="line"></span><br><span class="line"><span class="xml">/**</span></span><br><span class="line"><span class="xml"> * 弹出式提示框，默认1.2秒自动消失</span></span><br><span class="line"><span class="xml"> * @param message 提示信息</span></span><br><span class="line"><span class="xml"> * @param style 提示样式，有alert-success、alert-danger、alert-warning、alert-info</span></span><br><span class="line"><span class="xml"> * @param time 消失时间</span></span><br><span class="line"><span class="xml"> */</span></span><br><span class="line"><span class="xml">var prompt = function (message, style, time)</span></span><br><span class="line"><span class="xml">&#123;</span></span><br><span class="line"><span class="xml">style = (style === undefined) ? 'alert-success' : style;</span></span><br><span class="line"><span class="xml">time = (time === undefined) ? 1200 : time;</span></span><br><span class="line"><span class="xml">$('<span class="tag">&lt;<span class="name">div</span>&gt;</span>')</span></span><br><span class="line"><span class="xml">.appendTo('body')</span></span><br><span class="line"><span class="xml">.addClass('alert ' + style)</span></span><br><span class="line"><span class="xml">.html(message)</span></span><br><span class="line"><span class="xml">.show()</span></span><br><span class="line"><span class="xml">.delay(time)</span></span><br><span class="line"><span class="xml">.fadeOut();</span></span><br><span class="line"><span class="xml">&#125;;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">/**</span></span><br><span class="line"><span class="xml"> *  成功提示 - alert-success</span></span><br><span class="line"><span class="xml"> *  失败提示 - alert-danger</span></span><br><span class="line"><span class="xml"> *  提醒 - alert-warning</span></span><br><span class="line"><span class="xml"> *  信息提示 - alert-info</span></span><br><span class="line"><span class="xml"> */</span></span><br><span class="line"><span class="xml">var success_prompt = function(message, time)</span></span><br><span class="line"><span class="xml">&#123;</span></span><br><span class="line"><span class="xml">prompt(message, 'alert-success', time);</span></span><br><span class="line"><span class="xml">&#125;;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">/**</span></span><br><span class="line"><span class="xml"> *  添加双色球</span></span><br><span class="line"><span class="xml"> */</span></span><br><span class="line"><span class="xml">function add()&#123;</span></span><br><span class="line"><span class="xml">console.log("==============add===============");</span></span><br><span class="line"><span class="xml">var numberId2=document.getElementById("numberId2").value;</span></span><br><span class="line"><span class="xml">var createTime2=document.getElementById("createTime2").value;</span></span><br><span class="line"><span class="xml">var oneColumn2=document.getElementById("oneColumn2").value;</span></span><br><span class="line"><span class="xml">var twoColumn2=document.getElementById("twoColumn2").value;</span></span><br><span class="line"><span class="xml">var threeColumn2=document.getElementById("threeColumn2").value;</span></span><br><span class="line"><span class="xml">var fourColumn2=document.getElementById("fourColumn2").value;</span></span><br><span class="line"><span class="xml">var fiveColumn2=document.getElementById("fiveColumn2").value;</span></span><br><span class="line"><span class="xml">var sixColumn2=document.getElementById("sixColumn2").value;</span></span><br><span class="line"><span class="xml">var sevenColumn2=document.getElementById("sevenColumn2").value;</span></span><br><span class="line"><span class="xml">if((numberId2==null || numberId2=='' || numberId2==undefined) ||</span></span><br><span class="line"><span class="xml">(createTime2==null || createTime2=='' || createTime2==undefined) ||</span></span><br><span class="line"><span class="xml">(oneColumn2==null || oneColumn2=='' || oneColumn2==undefined) ||</span></span><br><span class="line"><span class="xml">(twoColumn2==null || twoColumn2=='' || twoColumn2==undefined) ||</span></span><br><span class="line"><span class="xml">(threeColumn2==null || threeColumn2=='' || threeColumn2==undefined) ||</span></span><br><span class="line"><span class="xml">(fourColumn2==null || fourColumn2=='' || fourColumn2==undefined) ||</span></span><br><span class="line"><span class="xml">(fiveColumn2==null || fiveColumn2=='' || fiveColumn2==undefined) ||</span></span><br><span class="line"><span class="xml">(sixColumn2==null || sixColumn2=='' || sixColumn2==undefined) ||</span></span><br><span class="line"><span class="xml">(sevenColumn2==null || sevenColumn2=='' || sevenColumn2==undefined)</span></span><br><span class="line"><span class="xml">)&#123;</span></span><br><span class="line"><span class="xml">console.log("数据不完整,请检查参数并重新填写");</span></span><br><span class="line"><span class="xml">&#125;else&#123;</span></span><br><span class="line"><span class="xml">//发送请求进行新增</span></span><br><span class="line"><span class="xml">var requestDataBean = &#123;</span></span><br><span class="line"><span class="xml">numberId:numberId2,</span></span><br><span class="line"><span class="xml">createTime:createTime2,</span></span><br><span class="line"><span class="xml">oneColumn:oneColumn2,</span></span><br><span class="line"><span class="xml">twoColumn:twoColumn2,</span></span><br><span class="line"><span class="xml">threeColumn:threeColumn2,</span></span><br><span class="line"><span class="xml">fourColumn:fourColumn2,</span></span><br><span class="line"><span class="xml">fiveColumn:fiveColumn2,</span></span><br><span class="line"><span class="xml">sixColumn:sixColumn2,</span></span><br><span class="line"><span class="xml">sevenColumn:sevenColumn2</span></span><br><span class="line"><span class="xml">&#125;;</span></span><br><span class="line"><span class="xml">console.log("add - requestDataBean: "+JSON.stringify(requestDataBean));</span></span><br><span class="line"><span class="xml">var url="/maima/addMaiMa";</span></span><br><span class="line"><span class="xml">AjaxPost(url, requestDataBean,</span></span><br><span class="line"><span class="xml">function () &#123;</span></span><br><span class="line"><span class="xml">//ajax加载中</span></span><br><span class="line"><span class="xml">&#125;,</span></span><br><span class="line"><span class="xml">function (data) &#123;</span></span><br><span class="line"><span class="xml">console.log("========数据获取成功======");</span></span><br><span class="line"><span class="xml">if(data!=null &amp;&amp; data.Code!=null &amp;&amp; data.Code==200 &amp;&amp; data.Status!=null &amp;&amp; data.Status=="ok")&#123;</span></span><br><span class="line"><span class="xml">success_prompt(data.Msg,2000);</span></span><br><span class="line"><span class="xml">console.log("========FLUSH======");</span></span><br><span class="line"><span class="xml">go();//flush</span></span><br><span class="line"><span class="xml">&#125;else &#123;</span></span><br><span class="line"><span class="xml">fail_prompt(data.Msg,2000);</span></span><br><span class="line"><span class="xml">AjaxErro(data);</span></span><br><span class="line"><span class="xml">&#125;</span></span><br><span class="line"><span class="xml">&#125;)</span></span><br><span class="line"><span class="xml">&#125;</span></span><br><span class="line"><span class="xml">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">/**</span></span><br><span class="line"><span class="xml"> *  编辑双色球</span></span><br><span class="line"><span class="xml"> */</span></span><br><span class="line"><span class="xml">function edit()&#123;</span></span><br><span class="line"><span class="xml">console.log("==============edit===============");</span></span><br><span class="line"><span class="xml">var id=document.getElementById("id").value;</span></span><br><span class="line"><span class="xml">var numberId2=document.getElementById("numberId").value;</span></span><br><span class="line"><span class="xml">var createTime2=document.getElementById("createTime").value;</span></span><br><span class="line"><span class="xml">var oneColumn2=document.getElementById("oneColumn").value;</span></span><br><span class="line"><span class="xml">var twoColumn2=document.getElementById("twoColumn").value;</span></span><br><span class="line"><span class="xml">var threeColumn2=document.getElementById("threeColumn").value;</span></span><br><span class="line"><span class="xml">var fourColumn2=document.getElementById("fourColumn").value;</span></span><br><span class="line"><span class="xml">var fiveColumn2=document.getElementById("fiveColumn").value;</span></span><br><span class="line"><span class="xml">var sixColumn2=document.getElementById("sixColumn").value;</span></span><br><span class="line"><span class="xml">var sevenColumn2=document.getElementById("sevenColumn").value;</span></span><br><span class="line"><span class="xml">if((id==null || id=='' || id==undefined)||</span></span><br><span class="line"><span class="xml">(numberId2==null || numberId2=='' || numberId2==undefined) ||</span></span><br><span class="line"><span class="xml">(createTime2==null || createTime2=='' || createTime2==undefined) ||</span></span><br><span class="line"><span class="xml">(oneColumn2==null || oneColumn2=='' || oneColumn2==undefined) ||</span></span><br><span class="line"><span class="xml">(twoColumn2==null || twoColumn2=='' || twoColumn2==undefined) ||</span></span><br><span class="line"><span class="xml">(threeColumn2==null || threeColumn2=='' || threeColumn2==undefined) ||</span></span><br><span class="line"><span class="xml">(fourColumn2==null || fourColumn2=='' || fourColumn2==undefined) ||</span></span><br><span class="line"><span class="xml">(fiveColumn2==null || fiveColumn2=='' || fiveColumn2==undefined) ||</span></span><br><span class="line"><span class="xml">(sixColumn2==null || sixColumn2=='' || sixColumn2==undefined) ||</span></span><br><span class="line"><span class="xml">(sevenColumn2==null || sevenColumn2=='' || sevenColumn2==undefined)</span></span><br><span class="line"><span class="xml">)&#123;</span></span><br><span class="line"><span class="xml">console.log("数据不完整,请检查参数并重新填写");</span></span><br><span class="line"><span class="xml">&#125;else&#123;</span></span><br><span class="line"><span class="xml">//发送请求进行新增</span></span><br><span class="line"><span class="xml">var requestDataBean = &#123;</span></span><br><span class="line"><span class="xml">id:id,</span></span><br><span class="line"><span class="xml">numberId:numberId2,</span></span><br><span class="line"><span class="xml">createTime:createTime2,</span></span><br><span class="line"><span class="xml">oneColumn:oneColumn2,</span></span><br><span class="line"><span class="xml">twoColumn:twoColumn2,</span></span><br><span class="line"><span class="xml">threeColumn:threeColumn2,</span></span><br><span class="line"><span class="xml">fourColumn:fourColumn2,</span></span><br><span class="line"><span class="xml">fiveColumn:fiveColumn2,</span></span><br><span class="line"><span class="xml">sixColumn:sixColumn2,</span></span><br><span class="line"><span class="xml">sevenColumn:sevenColumn2</span></span><br><span class="line"><span class="xml">&#125;;</span></span><br><span class="line"><span class="xml">console.log("edit - requestDataBean: "+JSON.stringify(requestDataBean));</span></span><br><span class="line"><span class="xml">var url="/maima/editMaiMa";</span></span><br><span class="line"><span class="xml">AjaxPost(url, requestDataBean,</span></span><br><span class="line"><span class="xml">function () &#123;</span></span><br><span class="line"><span class="xml">//ajax加载中</span></span><br><span class="line"><span class="xml">&#125;,</span></span><br><span class="line"><span class="xml">function (data) &#123;</span></span><br><span class="line"><span class="xml">console.log("========数据获取成功======");</span></span><br><span class="line"><span class="xml">if(data!=null &amp;&amp; data.Code!=null &amp;&amp; data.Code==200 &amp;&amp; data.Status!=null &amp;&amp; data.Status=="ok")&#123;</span></span><br><span class="line"><span class="xml">success_prompt(data.Msg,2000);</span></span><br><span class="line"><span class="xml">console.log("========FLUSH======");</span></span><br><span class="line"><span class="xml">go();//flush</span></span><br><span class="line"><span class="xml">&#125;else &#123;</span></span><br><span class="line"><span class="xml">fail_prompt(data.Msg,2000);</span></span><br><span class="line"><span class="xml">AjaxErro(data);</span></span><br><span class="line"><span class="xml">&#125;</span></span><br><span class="line"><span class="xml">&#125;)</span></span><br><span class="line"><span class="xml">&#125;</span></span><br><span class="line"><span class="xml">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">/**</span></span><br><span class="line"><span class="xml"> * 重置</span></span><br><span class="line"><span class="xml"> */</span></span><br><span class="line"><span class="xml">function reset()&#123;</span></span><br><span class="line"><span class="xml">document.getElementById("number").value="";</span></span><br><span class="line"><span class="xml">document.getElementById("createTime3").value="";</span></span><br><span class="line"><span class="xml">document.getElementById("createTime4").value="";</span></span><br><span class="line"><span class="xml">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">/**</span></span><br><span class="line"><span class="xml"> * 用于编辑显示页面填入数据</span></span><br><span class="line"><span class="xml"> * @param obj 被点击编辑的按钮</span></span><br><span class="line"><span class="xml"> * @param id 该按钮所代表的的双色球记录id</span></span><br><span class="line"><span class="xml"> */</span></span><br><span class="line"><span class="xml">function show(obj,id)&#123;</span></span><br><span class="line"><span class="xml">var value0 = $(obj).parents("td").parents("tr").children("td").eq(0).text();</span></span><br><span class="line"><span class="xml">var value1 = $(obj).parents("td").parents("tr").children("td").eq(1).text();</span></span><br><span class="line"><span class="xml">var value2 = $(obj).parents("td").parents("tr").children("td").eq(2).text();</span></span><br><span class="line"><span class="xml">var value3 = $(obj).parents("td").parents("tr").children("td").eq(3).text();</span></span><br><span class="line"><span class="xml">var value4 = $(obj).parents("td").parents("tr").children("td").eq(4).text();</span></span><br><span class="line"><span class="xml">var value5 = $(obj).parents("td").parents("tr").children("td").eq(5).text();</span></span><br><span class="line"><span class="xml">var value6 = $(obj).parents("td").parents("tr").children("td").eq(6).text();</span></span><br><span class="line"><span class="xml">var value7 = $(obj).parents("td").parents("tr").children("td").eq(7).text();</span></span><br><span class="line"><span class="xml">var value8 = $(obj).parents("td").parents("tr").children("td").eq(8).text();</span></span><br><span class="line"><span class="xml">console.log("show - [numberId: "+value0+" ，createTime: "+value1+" ，oneColumn: "+value2+" ，twoColumn: "+value3+" ，threeColumn: "+value4+" ，fourColumn: "+value5+" ，fiveColumn: "+value6+" ，sixColumn: "+value7+" ，sevenColumn: "+value8+" ]");</span></span><br><span class="line"><span class="xml">document.getElementById("id").value=id;</span></span><br><span class="line"><span class="xml">document.getElementById("numberId").value=value0;</span></span><br><span class="line"><span class="xml">document.getElementById("createTime").value=value1;</span></span><br><span class="line"><span class="xml">document.getElementById("oneColumn").value=value2;</span></span><br><span class="line"><span class="xml">document.getElementById("twoColumn").value=value3;</span></span><br><span class="line"><span class="xml">document.getElementById("threeColumn").value=value4;</span></span><br><span class="line"><span class="xml">document.getElementById("fourColumn").value=value5;</span></span><br><span class="line"><span class="xml">document.getElementById("fiveColumn").value=value6;</span></span><br><span class="line"><span class="xml">document.getElementById("sixColumn").value=value7;</span></span><br><span class="line"><span class="xml">document.getElementById("sevenColumn").value=value8;</span></span><br><span class="line"><span class="xml">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">function Map() &#123;</span></span><br><span class="line"><span class="xml">/** 存放键的数组(遍历用到) */</span></span><br><span class="line"><span class="xml">this.keys = new Array();</span></span><br><span class="line"><span class="xml">/** 存放数据 */</span></span><br><span class="line"><span class="xml">this.data = new Object();</span></span><br><span class="line"></span><br><span class="line"><span class="xml">/**</span></span><br><span class="line"><span class="xml"> * 放入一个键值对</span></span><br><span class="line"><span class="xml"> * @param &#123;String&#125; key</span></span><br><span class="line"><span class="xml"> * @param &#123;Object&#125; value</span></span><br><span class="line"><span class="xml"> */</span></span><br><span class="line"><span class="xml">this.put = function(key, value) &#123;</span></span><br><span class="line"><span class="xml">if(this.data[key] == null)&#123;</span></span><br><span class="line"><span class="xml">this.keys.push(key);</span></span><br><span class="line"><span class="xml">&#125;</span></span><br><span class="line"><span class="xml">this.data[key] = value;</span></span><br><span class="line"><span class="xml">&#125;;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">/**</span></span><br><span class="line"><span class="xml"> * 获取某键对应的值</span></span><br><span class="line"><span class="xml"> * @param &#123;String&#125; key</span></span><br><span class="line"><span class="xml"> * @return &#123;Object&#125; value</span></span><br><span class="line"><span class="xml"> */</span></span><br><span class="line"><span class="xml">this.get = function(key) &#123;</span></span><br><span class="line"><span class="xml">return this.data[key];</span></span><br><span class="line"><span class="xml">&#125;;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">/**</span></span><br><span class="line"><span class="xml"> * 删除一个键值对</span></span><br><span class="line"><span class="xml"> * @param &#123;String&#125; key</span></span><br><span class="line"><span class="xml"> */</span></span><br><span class="line"><span class="xml">this.remove = function(key) &#123;</span></span><br><span class="line"><span class="xml">this.keys.remove(key);</span></span><br><span class="line"><span class="xml">this.data[key] = null;</span></span><br><span class="line"><span class="xml">&#125;;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">/**</span></span><br><span class="line"><span class="xml"> * 遍历Map,执行处理函数</span></span><br><span class="line"><span class="xml"> *</span></span><br><span class="line"><span class="xml"> * @param &#123;Function&#125; 回调函数 function(key,value,index)&#123;..&#125;</span></span><br><span class="line"><span class="xml"> */</span></span><br><span class="line"><span class="xml">this.each = function(fn)&#123;</span></span><br><span class="line"><span class="xml">if(typeof fn != 'function')&#123;</span></span><br><span class="line"><span class="xml">return;</span></span><br><span class="line"><span class="xml">&#125;</span></span><br><span class="line"><span class="xml">var len = this.keys.length;</span></span><br><span class="line"><span class="xml">for(var i=0;i<span class="tag">&lt;<span class="name">len;i++)&#123;</span></span></span></span><br><span class="line"><span class="xml">var k = this.keys[i];</span></span><br><span class="line"><span class="xml">fn(k,this.data[k],i);</span></span><br><span class="line"><span class="xml">&#125;</span></span><br><span class="line"><span class="xml">&#125;;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">/**</span></span><br><span class="line"><span class="xml"> * 获取键值数组(类似<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://lib.csdn.net/base/java"</span> <span class="attr">class</span>=<span class="string">'replace_word'</span> <span class="attr">title</span>=<span class="string">"Java 知识库"</span> <span class="attr">target</span>=<span class="string">'_blank'</span> <span class="attr">style</span>=<span class="string">'color:#df3434; font-weight:bold;'</span>&gt;</span>Java<span class="tag">&lt;/<span class="name">a</span>&gt;</span>的entrySet())</span></span><br><span class="line"><span class="xml"> * @return 键值对象&#123;key,value&#125;的数组</span></span><br><span class="line"><span class="xml"> */</span></span><br><span class="line"><span class="xml">this.entrys = function() &#123;</span></span><br><span class="line"><span class="xml">var len = this.keys.length;</span></span><br><span class="line"><span class="xml">var entrys = new Array(len);</span></span><br><span class="line"><span class="xml">for (var i = 0; i <span class="tag">&lt; <span class="attr">len</span>; <span class="attr">i</span>++) &#123;</span></span></span><br><span class="line"><span class="xml">entrys[i] = &#123;</span></span><br><span class="line"><span class="xml">key : this.keys[i],</span></span><br><span class="line"><span class="xml">value : this.data[i]</span></span><br><span class="line"><span class="xml">&#125;;</span></span><br><span class="line"><span class="xml">&#125;</span></span><br><span class="line"><span class="xml">return entrys;</span></span><br><span class="line"><span class="xml">&#125;;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">/**</span></span><br><span class="line"><span class="xml"> * 判断Map是否为空</span></span><br><span class="line"><span class="xml"> */</span></span><br><span class="line"><span class="xml">this.isEmpty = function() &#123;</span></span><br><span class="line"><span class="xml">return this.keys.length == 0;</span></span><br><span class="line"><span class="xml">&#125;;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">/**</span></span><br><span class="line"><span class="xml"> * 获取键值对数量</span></span><br><span class="line"><span class="xml"> */</span></span><br><span class="line"><span class="xml">this.size = function()&#123;</span></span><br><span class="line"><span class="xml">return this.keys.length;</span></span><br><span class="line"><span class="xml">&#125;;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">/**</span></span><br><span class="line"><span class="xml"> * 重写toString</span></span><br><span class="line"><span class="xml"> */</span></span><br><span class="line"><span class="xml">this.toString = function()&#123;</span></span><br><span class="line"><span class="xml">var s = "&#123;";</span></span><br><span class="line"><span class="xml">for(var i=0;i<span class="tag">&lt;<span class="name">this.keys.length;i++,s+=',')&#123;</span></span></span></span><br><span class="line"><span class="xml">var k = this.keys[i];</span></span><br><span class="line"><span class="xml">s += k+"="+this.data[k];</span></span><br><span class="line"><span class="xml">&#125;</span></span><br><span class="line"><span class="xml">s=s.substr(0,s.length-1);</span></span><br><span class="line"><span class="xml">s+="&#125;";</span></span><br><span class="line"><span class="xml">return s;</span></span><br><span class="line"><span class="xml">&#125;;</span></span><br><span class="line"><span class="xml">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">/**</span></span><br><span class="line"><span class="xml"> * 上一页</span></span><br><span class="line"><span class="xml"> */</span></span><br><span class="line"><span class="xml">function up()&#123;</span></span><br><span class="line"><span class="xml">var upPage=document.getElementById("page").value;</span></span><br><span class="line"><span class="xml">var pageSize=document.getElementById("pageSize").value;</span></span><br><span class="line"><span class="xml">var number=document.getElementById("number").value;</span></span><br><span class="line"><span class="xml">if(upPage=='' || upPage==undefined || upPage==null || upPage<span class="tag">&lt;<span class="name">1)&#123;</span></span></span></span><br><span class="line"><span class="xml">upPage=0;</span></span><br><span class="line"><span class="xml">&#125;else&#123;</span></span><br><span class="line"><span class="xml">upPage=upPage*1-1;</span></span><br><span class="line"><span class="xml">&#125;</span></span><br><span class="line"><span class="xml">if(upPage<span class="tag">&lt;<span class="name">0)&#123;</span></span></span></span><br><span class="line"><span class="xml">upPage=0;</span></span><br><span class="line"><span class="xml">&#125;</span></span><br><span class="line"><span class="xml">var requestDataBean = &#123;page:upPage,pageSize:pageSize*1,number:number&#125;;</span></span><br><span class="line"><span class="xml">console.log("上一页 - requestDataBean: "+JSON.stringify(requestDataBean));</span></span><br><span class="line"><span class="xml">getData(requestDataBean);</span></span><br><span class="line"><span class="xml">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">/**</span></span><br><span class="line"><span class="xml"> * 下一页</span></span><br><span class="line"><span class="xml"> */</span></span><br><span class="line"><span class="xml">function down()&#123;</span></span><br><span class="line"><span class="xml">var downPage=document.getElementById("page").value;</span></span><br><span class="line"><span class="xml">var pageSize=document.getElementById("pageSize").value;</span></span><br><span class="line"><span class="xml">var number=document.getElementById("number").value;</span></span><br><span class="line"><span class="xml">if(downPage=='' || downPage==undefined || downPage==null)&#123;</span></span><br><span class="line"><span class="xml">downPage=0;</span></span><br><span class="line"><span class="xml">&#125;else&#123;</span></span><br><span class="line"><span class="xml">downPage=downPage*1+1;</span></span><br><span class="line"><span class="xml">&#125;</span></span><br><span class="line"><span class="xml">var requestDataBean = &#123;page:downPage,pageSize:pageSize*1,number:number&#125;;</span></span><br><span class="line"><span class="xml">console.log("下一页 - requestDataBean: "+JSON.stringify(requestDataBean));</span></span><br><span class="line"><span class="xml">getData(requestDataBean);</span></span><br><span class="line"><span class="xml">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">/**</span></span><br><span class="line"><span class="xml"> * 查询</span></span><br><span class="line"><span class="xml"> */</span></span><br><span class="line"><span class="xml">function go()&#123;</span></span><br><span class="line"><span class="xml">var page=document.getElementById("page").value;</span></span><br><span class="line"><span class="xml">var pageSize=document.getElementById("pageSize").value;</span></span><br><span class="line"><span class="xml">var number=document.getElementById("number").value;</span></span><br><span class="line"><span class="xml">var createTime1=document.getElementById("createTime3").value;</span></span><br><span class="line"><span class="xml">var createTime2=document.getElementById("createTime4").value;</span></span><br><span class="line"><span class="xml">var requestDataBean = &#123;page:page*1,pageSize:pageSize*1,number:number,createTime1:createTime1,createTime2:createTime2&#125;;</span></span><br><span class="line"><span class="xml">console.log("数据查询 - requestDataBean: "+JSON.stringify(requestDataBean));</span></span><br><span class="line"><span class="xml">getData(requestDataBean);</span></span><br><span class="line"><span class="xml">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">/**</span></span><br><span class="line"><span class="xml"> * 数字排序</span></span><br><span class="line"><span class="xml"> */</span></span><br><span class="line"><span class="xml">function sortNumber(a,b)</span></span><br><span class="line"><span class="xml">&#123;</span></span><br><span class="line"><span class="xml">return a - b</span></span><br><span class="line"><span class="xml">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">/**</span></span><br><span class="line"><span class="xml"> * 给detailData表格填充数据</span></span><br><span class="line"><span class="xml">     * @param sumArrays 所有数据</span></span><br><span class="line"><span class="xml"> * @param arrays 前端页面展示的数据</span></span><br><span class="line"><span class="xml"> */</span></span><br><span class="line"><span class="xml"> function fillDataToTable(arrays,sumArrays)&#123;</span></span><br><span class="line"><span class="xml"> //清空表格数据</span></span><br><span class="line"><span class="xml">var detailData=document.getElementById("detailData");</span></span><br><span class="line"><span class="xml">detailData.innerHTML="";</span></span><br><span class="line"></span><br><span class="line"><span class="xml">//表格插入表头数据</span></span><br><span class="line"><span class="xml">var row=detailData.insertRow(0);</span></span><br><span class="line"><span class="xml">row.style.fontWeight="bolder";</span></span><br><span class="line"><span class="xml">var cell0=row.insertCell(0);</span></span><br><span class="line"><span class="xml">cell0.innerHTML="期数";</span></span><br><span class="line"><span class="xml">var cell1=row.insertCell(1);</span></span><br><span class="line"><span class="xml">cell1.innerHTML="开奖日期";</span></span><br><span class="line"><span class="xml">var cell2=row.insertCell(2);</span></span><br><span class="line"><span class="xml"> cell2.innerHTML="第一位数";</span></span><br><span class="line"><span class="xml">var cell3=row.insertCell(3);</span></span><br><span class="line"><span class="xml"> cell3.innerHTML="第二位数";</span></span><br><span class="line"><span class="xml">var cell4=row.insertCell(4);</span></span><br><span class="line"><span class="xml">cell4.innerHTML="第三位数";</span></span><br><span class="line"><span class="xml">var cell5=row.insertCell(5);</span></span><br><span class="line"><span class="xml">cell5.innerHTML="第四位数";</span></span><br><span class="line"><span class="xml">var cell6=row.insertCell(6);</span></span><br><span class="line"><span class="xml">cell6.innerHTML="第五位数";</span></span><br><span class="line"><span class="xml">var cell7=row.insertCell(7);</span></span><br><span class="line"><span class="xml">cell7.innerHTML="第六位数";</span></span><br><span class="line"><span class="xml">var cell8=row.insertCell(8);</span></span><br><span class="line"><span class="xml">cell8.innerHTML="第七位数";</span></span><br><span class="line"><span class="xml">var cell9=row.insertCell(9);</span></span><br><span class="line"><span class="xml"> cell9.innerHTML="操作";</span></span><br><span class="line"></span><br><span class="line"><span class="xml">//表格分页数据插入</span></span><br><span class="line"><span class="xml">for(var i=0;i<span class="tag">&lt;<span class="name">arrays.length;i++)&#123;</span></span></span></span><br><span class="line"><span class="xml">var json=arrays[i];</span></span><br><span class="line"><span class="xml">var row2=detailData.insertRow(i+1);</span></span><br><span class="line"><span class="xml">var cell0=row2.insertCell(0);</span></span><br><span class="line"><span class="xml">cell0.innerHTML=json.number;</span></span><br><span class="line"><span class="xml">var cell1=row2.insertCell(1);</span></span><br><span class="line"><span class="xml">cell1.innerHTML=json.createTime;</span></span><br><span class="line"><span class="xml">var cell2=row2.insertCell(2);</span></span><br><span class="line"><span class="xml">cell2.innerHTML=json.oneColumn;</span></span><br><span class="line"><span class="xml">var cell3=row2.insertCell(3);</span></span><br><span class="line"><span class="xml">cell3.innerHTML=json.twoColumn;</span></span><br><span class="line"><span class="xml">var cell4=row2.insertCell(4);</span></span><br><span class="line"><span class="xml">cell4.innerHTML=json.threeColumn;</span></span><br><span class="line"><span class="xml">var cell5=row2.insertCell(5);</span></span><br><span class="line"><span class="xml">cell5.innerHTML=json.fourColumn;</span></span><br><span class="line"><span class="xml">var cell6=row2.insertCell(6);</span></span><br><span class="line"><span class="xml">cell6.innerHTML=json.fiveColumn;</span></span><br><span class="line"><span class="xml">var cell7=row2.insertCell(7);</span></span><br><span class="line"><span class="xml">cell7.innerHTML=json.sixColumn;</span></span><br><span class="line"><span class="xml">var cell8=row2.insertCell(8);</span></span><br><span class="line"><span class="xml">cell8.innerHTML=json.sevenColumn;</span></span><br><span class="line"><span class="xml">var cell9=row2.insertCell(9);</span></span><br><span class="line"><span class="xml">cell9.innerHTML="<span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">\</span>"<span class="attr">show</span>(<span class="attr">this</span>,"+<span class="attr">json.id</span>+")\" <span class="attr">class</span>=<span class="string">\</span>"<span class="attr">btn</span> <span class="attr">btn-primary</span>\" <span class="attr">data-toggle</span>=<span class="string">\</span>"<span class="attr">modal</span>\" <span class="attr">data-target</span>=<span class="string">\</span>"#<span class="attr">myModal</span>\" &gt;</span>编辑<span class="tag">&lt;/<span class="name">button</span>&gt;</span>";</span></span><br><span class="line"><span class="xml">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">//单排遗漏数计算  总排遗漏数的计算应该简单，即每一排当中的最小值index，与每一排的最大值index取出来放入集合最后遍历出最小index与最大indeax进行相减即可</span></span><br><span class="line"><span class="xml">//将总数据中sumArrays每一列数组分组出来形成sumArray=[oneArray[oneColumn,...],twoArray[twoColumn,...],...,sevenArray[sevenColumn,...]]</span></span><br><span class="line"><span class="xml"> var oneArray=[], twoArray=[], threeArray=[], fourArray=[],  fiveArray=[],  sixArray=[],  sevenArray=[], sumArray=[];</span></span><br><span class="line"><span class="xml"> for(var i=0;i<span class="tag">&lt;<span class="name">sumArrays.length;i++)&#123;</span></span></span></span><br><span class="line"><span class="xml"> var json=sumArrays[i];</span></span><br><span class="line"><span class="xml"> oneArray.push(json.oneColumn);</span></span><br><span class="line"><span class="xml"> twoArray.push(json.twoColumn);</span></span><br><span class="line"><span class="xml"> threeArray.push(json.threeColumn);</span></span><br><span class="line"><span class="xml"> fourArray.push(json.fourColumn);</span></span><br><span class="line"><span class="xml"> fiveArray.push(json.fiveColumn);</span></span><br><span class="line"><span class="xml"> sixArray.push(json.sixColumn);</span></span><br><span class="line"><span class="xml"> sevenArray.push(json.sevenColumn);</span></span><br><span class="line"><span class="xml"> &#125;</span></span><br><span class="line"><span class="xml"> //插入7列数组数据</span></span><br><span class="line"><span class="xml"> sumArray.push(oneArray);</span></span><br><span class="line"><span class="xml"> sumArray.push(twoArray);</span></span><br><span class="line"><span class="xml"> sumArray.push(threeArray);</span></span><br><span class="line"><span class="xml"> sumArray.push(fourArray);</span></span><br><span class="line"><span class="xml"> sumArray.push(fiveArray);</span></span><br><span class="line"><span class="xml"> sumArray.push(sixArray);</span></span><br><span class="line"><span class="xml"> sumArray.push(sevenArray);</span></span><br><span class="line"></span><br><span class="line"><span class="xml"> //底部表头插入</span></span><br><span class="line"><span class="xml"> var tr0=detailData.insertRow(arrays.length+1);</span></span><br><span class="line"><span class="xml"> var td0=tr0.insertCell(0);</span></span><br><span class="line"><span class="xml"> td0.colSpan=2;</span></span><br><span class="line"><span class="xml"> td0.innerHTML="遗漏信息";</span></span><br><span class="line"><span class="xml"> td0.style.fontWeight="bolder";</span></span><br><span class="line"><span class="xml"> var td00=tr0.insertCell(1);</span></span><br><span class="line"><span class="xml"> td00.colSpan=8;</span></span><br><span class="line"></span><br><span class="line"><span class="xml"> var tr=detailData.insertRow(arrays.length+2);</span></span><br><span class="line"><span class="xml"> var td=tr.insertCell(0);</span></span><br><span class="line"><span class="xml"> td.style.fontWeight="bolder";</span></span><br><span class="line"><span class="xml"> td.innerHTML="数字 | 单排最大遗漏数 | 总排最大遗漏数";</span></span><br><span class="line"><span class="xml"> td.colSpan=2;</span></span><br><span class="line"></span><br><span class="line"><span class="xml"> //根据所查询的number分隔逗号，计算并得到其遗漏信息(数字、单排最大遗漏数、总排最大遗漏数)</span></span><br><span class="line"><span class="xml"> var numbers=document.getElementById("number").value.trim();</span></span><br><span class="line"><span class="xml"> console.log("nums: "+numbers.split(","));</span></span><br><span class="line"></span><br><span class="line"><span class="xml">//需要查询的number为空；则不进行显示其遗漏信息</span></span><br><span class="line"><span class="xml"> if(numbers==null || numbers=='' || numbers==undefined)&#123;</span></span><br><span class="line"><span class="xml"> var td11=tr.insertCell(1);</span></span><br><span class="line"><span class="xml"> td11.colSpan=8;</span></span><br><span class="line"><span class="xml"> &#125;</span></span><br><span class="line"><span class="xml"> //需要查询的number不为空；则进行显示其遗漏信息</span></span><br><span class="line"><span class="xml"> else&#123;</span></span><br><span class="line"><span class="xml"> var nums=numbers.split(","); //则遗漏信息、数字、单排最大遗漏数进行显示 循环查询每个数值的单排 总排</span></span><br><span class="line"></span><br><span class="line"><span class="xml"> //需要查询的number遗漏信息数组的长度进行循环得到</span></span><br><span class="line"><span class="xml"> for(var h=0;h<span class="tag">&lt;<span class="name">nums.length;h++)&#123;</span></span></span></span><br><span class="line"><span class="xml">  var number=nums[h];//查询的数值</span></span><br><span class="line"><span class="xml"> var singleMap=new Map();//关于该数值的单排最大遗漏数</span></span><br><span class="line"><span class="xml"> var sumList=[];</span></span><br><span class="line"><span class="xml"> // var minIndexMap=new Map();//每一列， 每一个单排当中的最小index</span></span><br><span class="line"><span class="xml"> // var maxIndexMap=new Map();//每一列， 每一个单排当中的最大index</span></span><br><span class="line"></span><br><span class="line"><span class="xml"> for(var t=0;t<span class="tag">&lt;<span class="name">sumArray.length;t++)&#123;</span> //当前<span class="attr">7</span>个数组当中都存有对应的关于该需要进行查询遗漏信息的数值<span class="attr">number</span>,循环<span class="attr">7</span>次,在七列当中进行查找以及得到它们所在的<span class="attr">index</span></span></span></span><br><span class="line"><span class="xml"> var arrays2=sumArray[t];//总共有7列，当前第t，单个数组</span></span><br><span class="line"><span class="xml"> var map=new Map();</span></span><br><span class="line"></span><br><span class="line"><span class="xml"> for(var i=0;i<span class="tag">&lt;<span class="name">arrays2.length;i++)</span> &#123; //每一列数组元素的循环</span></span></span><br><span class="line"><span class="xml"> var element = arrays2[i]; //当前七列中第t列数组当中具体的元素</span></span><br><span class="line"><span class="xml"> if (number == element) &#123;</span></span><br><span class="line"><span class="xml"> if(map.get(element)==null || map.get(element)==undefined)&#123;</span></span><br><span class="line"><span class="xml">map.put(element, &#123;prior: null, curr: null, size: null&#125;); //map.put(element,0);//放入了该列当中所有不重复元素以及其实时变化的位移index+1</span></span><br><span class="line"><span class="xml">&#125;</span></span><br><span class="line"><span class="xml"> &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="xml"> for(var n=0;n<span class="tag">&lt;<span class="name">arrays2.length;n++)&#123;</span></span></span></span><br><span class="line"><span class="xml"> var key=arrays2[n]; //当前七列中第t列数组当中具体的元素</span></span><br><span class="line"><span class="xml"> if(key!=null &amp;&amp; key==element &amp;&amp; number == key)&#123; //如果存在有当前循环的数组当中的取值与map当中的键相同的则重新赋值，重新赋值后进行break;//var y=i-n;</span></span><br><span class="line"><span class="xml"> sumList.push(n);</span></span><br><span class="line"></span><br><span class="line"><span class="xml"> //存储每一个元素他的前一位相同元素的下标；y为当前元素的下标</span></span><br><span class="line"><span class="xml"> if((map.get(element)!=null &amp;&amp; map.get(element)!=undefined)</span></span><br><span class="line"><span class="xml"> &amp;&amp; map.get(element).prior==null &amp;&amp; map.get(element).curr==null &amp;&amp; map.get(element).size==null)&#123;</span></span><br><span class="line"><span class="xml"> map.put(element,&#123;prior: n, curr: n, size: 0&#125;); //第一次遇到元素相同的时候</span></span><br><span class="line"><span class="xml"> &#125;</span></span><br><span class="line"><span class="xml"> if((map.get(element)!=null &amp;&amp; map.get(element)!=undefined)</span></span><br><span class="line"><span class="xml"> &amp;&amp; (map.get(element).prior!=null &amp;&amp; map.get(element).curr!=null &amp;&amp; map.get(element).size!=null)</span></span><br><span class="line"><span class="xml">  &amp;&amp; map.get(element).prior==map.get(element).curr)&#123;</span></span><br><span class="line"><span class="xml"> map.put(element,&#123;prior: map.get(element).prior, curr: n, size: n-map.get(element).prior&#125;); //第二次遇到元素相同的时候</span></span><br><span class="line"><span class="xml"> &#125;</span></span><br><span class="line"><span class="xml"> if((map.get(element)!=null &amp;&amp; map.get(element)!=undefined)</span></span><br><span class="line"><span class="xml"> &amp;&amp; (map.get(element).prior!=null &amp;&amp; map.get(element).curr!=null  &amp;&amp; map.get(element).size!=null)</span></span><br><span class="line"><span class="xml"> &amp;&amp; map.get(element).prior!=map.get(element).curr) &#123;</span></span><br><span class="line"><span class="xml">  // 此时 map 中的 curr 即当前 key 的相同元素的上一位置 prior 的 index ;取出 prior;</span></span><br><span class="line"><span class="xml"> // 得到当前 key index 与当前 key index 的 prior 的 size；</span></span><br><span class="line"><span class="xml"> // 如果当前 size较之此时map当中element元素的size要大，则进行替换</span></span><br><span class="line"><span class="xml"> var currPrior=map.get(element).curr; //当前的上一位</span></span><br><span class="line"><span class="xml"> var currSize=n-currPrior; //当前的大小</span></span><br><span class="line"><span class="xml"> var priorSize=map.get(element).size; //上一位的大小</span></span><br><span class="line"><span class="xml"> if(currSize&gt;priorSize)&#123;</span></span><br><span class="line"><span class="xml"> map.put(element,&#123;prior:currPrior, curr:n, size:currSize&#125;);</span></span><br><span class="line"><span class="xml"> &#125;</span></span><br><span class="line"><span class="xml"> &#125;</span></span><br><span class="line"><span class="xml"> &#125;else&#123;</span></span><br><span class="line"><span class="xml"> continue;//跳出对于第i列数组中element元素对于当前n数组的当次循环，进入当前n数组迭代下一元素key的循环</span></span><br><span class="line"><span class="xml"> &#125;</span></span><br><span class="line"><span class="xml"> &#125;</span></span><br><span class="line"><span class="xml"> &#125;</span></span><br><span class="line"><span class="xml"> console.log("第"+t+"列当中，每一个元素的单排最大遗漏数："+JSON.stringify(map));</span></span><br><span class="line"><span class="xml"> if(map.get(number)!=null || map.get(number)!=undefined)&#123;</span></span><br><span class="line"><span class="xml"> //取值则为当前该map.get(number)即当前列当中的单排最大遗漏数</span></span><br><span class="line"><span class="xml"> singleMap.put(t,map.get(number).size-1);//singleMap.put(t,map.get(number)-1);//key t：哪一列， value 当前该数值在当前排t的最大遗漏数  map.get(number)需要减去1</span></span><br><span class="line"><span class="xml"> &#125;else&#123;</span></span><br><span class="line"><span class="xml"> //当前列取出number如果为空则说明当前列当中不存在有该数值，则替换为0</span></span><br><span class="line"><span class="xml"> singleMap.put(t,'当前列不存在'+number);</span></span><br><span class="line"><span class="xml"> &#125;</span></span><br><span class="line"><span class="xml"> &#125;</span></span><br><span class="line"><span class="xml"> //遍历完7个数组后得到当前查询的该数值的所有index</span></span><br><span class="line"><span class="xml"> //得到当前查询的该数值的在7列中的所有index，并进行index排序sort,每一个index都与index.next进行比较得到size</span></span><br><span class="line"><span class="xml"> //定义maxSize变量，并进行赋值</span></span><br><span class="line"><span class="xml"> sumList.sort(sortNumber);</span></span><br><span class="line"><span class="xml"> var sumMaxNumber=null;</span></span><br><span class="line"><span class="xml"> if(sumList.length==0)&#123;</span></span><br><span class="line"><span class="xml"> sumMaxNumber='不存在';</span></span><br><span class="line"><span class="xml"> &#125;else&#123;</span></span><br><span class="line"><span class="xml"> for(var g=0;g<span class="tag">&lt;<span class="name">sumList.length;g++)&#123;</span></span></span></span><br><span class="line"><span class="xml"> if(sumMaxNumber==null)&#123;</span></span><br><span class="line"><span class="xml"> sumMaxNumber=sumList[g+1]-sumList[g];</span></span><br><span class="line"><span class="xml"> &#125;else&#123;</span></span><br><span class="line"><span class="xml"> var nextSize=sumList[g+1]-sumList[g];</span></span><br><span class="line"><span class="xml"> if(nextSize&gt;sumMaxNumber)&#123;</span></span><br><span class="line"><span class="xml">sumMaxNumber=nextSize;</span></span><br><span class="line"><span class="xml">&#125;</span></span><br><span class="line"><span class="xml"> &#125;</span></span><br><span class="line"><span class="xml"> &#125;</span></span><br><span class="line"><span class="xml"> &#125;</span></span><br><span class="line"><span class="xml"> var mapArrays=singleMap.entrys();//循环之后获取得到singleMap,即单排数</span></span><br><span class="line"><span class="xml"> if (h == 0) &#123; //即第一个数值的时候填入行tr:arrays.length+2</span></span><br><span class="line"><span class="xml"> td.innerHTML="数字: "+number+" | 单排最大遗漏数 | 总排最大遗漏数: "+sumMaxNumber;</span></span><br><span class="line"><span class="xml"> for(var r=0;r<span class="tag">&lt;<span class="name">mapArrays.length;r++)</span> &#123;</span></span></span><br><span class="line"><span class="xml"> var td22 = tr.insertCell(r+1);//当前行处于第一行</span></span><br><span class="line"><span class="xml"> td22.innerHTML = singleMap.get(r);</span></span><br><span class="line"><span class="xml"> &#125;</span></span><br><span class="line"><span class="xml"> tr.insertCell(mapArrays.length+1);</span></span><br><span class="line"><span class="xml"> &#125; else &#123;</span></span><br><span class="line"><span class="xml"> //新增行并插入</span></span><br><span class="line"><span class="xml"> var newTr=detailData.insertRow(arrays.length+2+h);</span></span><br><span class="line"><span class="xml"> var newTd=newTr.insertCell(0);</span></span><br><span class="line"><span class="xml"> newTd.innerHTML="数字: "+number+" | 单排最大遗漏数 | 总排最大遗漏数: "+sumMaxNumber;</span></span><br><span class="line"><span class="xml"> newTd.style.fontWeight="bolder";</span></span><br><span class="line"><span class="xml"> newTd.colSpan=2;</span></span><br><span class="line"><span class="xml"> for(var r=0;r<span class="tag">&lt;<span class="name">mapArrays.length;r++)</span> &#123;</span></span></span><br><span class="line"><span class="xml"> var td22 = newTr.insertCell(r+1);//从第二行开始进行新增列</span></span><br><span class="line"><span class="xml"> td22.innerHTML = singleMap.get(r);</span></span><br><span class="line"><span class="xml"> &#125;</span></span><br><span class="line"><span class="xml"> newTr.insertCell(mapArrays.length+1);</span></span><br><span class="line"><span class="xml"> &#125;</span></span><br><span class="line"><span class="xml"> console.log("================== 查询数值："+number+" END ==================");</span></span><br><span class="line"><span class="xml"> &#125;</span></span><br><span class="line"><span class="xml"> &#125;</span></span><br><span class="line"><span class="xml">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">/**</span></span><br><span class="line"><span class="xml"> * 获取list接口数据</span></span><br><span class="line"><span class="xml"> * @param requestDataBean</span></span><br><span class="line"><span class="xml"> */</span></span><br><span class="line"><span class="xml">function getData(requestDataBean)&#123;</span></span><br><span class="line"><span class="xml">var url="/maima/findAllByParams";</span></span><br><span class="line"><span class="xml">AjaxPost(url, requestDataBean,</span></span><br><span class="line"><span class="xml">function () &#123;</span></span><br><span class="line"><span class="xml">//ajax加载中</span></span><br><span class="line"><span class="xml">&#125;,</span></span><br><span class="line"><span class="xml">function (data) &#123;</span></span><br><span class="line"><span class="xml">console.log("========数据获取成功======");</span></span><br><span class="line"><span class="xml">//ajax返回 //认证完成</span></span><br><span class="line"><span class="xml">if(data!=null)&#123;</span></span><br><span class="line"><span class="xml">var arrays=JSON.parse(JSON.stringify(data.list));</span></span><br><span class="line"><span class="xml">var sumArrays=JSON.parse(JSON.stringify(data.list2));</span></span><br><span class="line"><span class="xml">document.getElementById("page").value=data.page;</span></span><br><span class="line"><span class="xml">document.getElementById("pageSize").value=data.pageSize;</span></span><br><span class="line"><span class="xml">if (arrays.length!=0) &#123;</span></span><br><span class="line"><span class="xml">//前端填充数据操作</span></span><br><span class="line"><span class="xml">console.log("======= 表格填充数据 - fillDataToTable =======")</span></span><br><span class="line"><span class="xml">fillDataToTable(arrays,sumArrays);</span></span><br><span class="line"><span class="xml">&#125; else &#123;</span></span><br><span class="line"><span class="xml">AjaxErro(data);</span></span><br><span class="line"><span class="xml">&#125;</span></span><br><span class="line"><span class="xml">&#125;</span></span><br><span class="line"><span class="xml">&#125;)</span></span><br><span class="line"><span class="xml">&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="xml">/**</span></span><br><span class="line"><span class="xml"> * 页面加载</span></span><br><span class="line"><span class="xml"> */</span></span><br><span class="line"><span class="xml">window.onload = function()&#123;</span></span><br><span class="line"><span class="xml">var requestDataBean = &#123;page:0,pageSize:10&#125;;</span></span><br><span class="line"><span class="xml">console.info("页面加载 - requestDataBean: "+JSON.stringify(requestDataBean));</span></span><br><span class="line"><span class="xml">getData(requestDataBean);</span></span><br><span class="line"><span class="xml">&#125;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%-</span></span></span><span class="ruby">-</span></span><br><span class="line"></span><br><span class="line"><span class="ruby"> /<span class="regexp">/console.log(map.toString());</span></span></span><br><span class="line"><span class="ruby"> /<span class="regexp">/ var mapArrays=map.entrys();</span></span></span><br><span class="line"><span class="ruby"> /<span class="regexp">/ var maxValue=0;</span></span></span><br><span class="line"><span class="ruby"> /<span class="regexp">/ var maxKey=0;</span></span></span><br><span class="line"><span class="ruby"> /<span class="regexp">/ for(var i=0;i&lt;mapArrays.length;i++)&#123; /</span><span class="regexp">/当前列当中的map数组</span></span></span><br><span class="line"><span class="ruby">/<span class="regexp">/  var key=mapArrays[i].key;</span></span></span><br><span class="line"><span class="ruby">/<span class="regexp">/  var value=map.get(key);</span></span></span><br><span class="line"><span class="ruby"> /<span class="regexp">/ console.log("key: "+key+" value:"+value);</span></span></span><br><span class="line"><span class="ruby"> /<span class="regexp">/ &#125;</span></span></span><br><span class="line"><span class="ruby"> /<span class="regexp">/ console.log("单排最大遗漏数为 - key:"+maxKey+"  value:"+(maxValue-1));</span></span></span><br><span class="line"><span class="ruby"> /<span class="regexp">/添加元素</span></span></span><br><span class="line"><span class="ruby"> /<span class="regexp">/ var td4=tr.insertCell(t+1);</span></span></span><br><span class="line"><span class="ruby"> /<span class="regexp">/ if(maxKey&lt;=0)&#123;</span></span></span><br><span class="line"><span class="ruby">/<span class="regexp">/  td4.innerHTML="-";</span></span></span><br><span class="line"><span class="ruby"> /<span class="regexp">/ &#125;else&#123;</span></span></span><br><span class="line"><span class="ruby">/<span class="regexp">/  td4.innerHTML=maxKey;</span></span></span><br><span class="line"><span class="ruby"> /<span class="regexp">/ &#125;</span></span></span><br><span class="line"><span class="ruby"> /<span class="regexp">/ var td5=tr2.insertCell(t+1);</span></span></span><br><span class="line"><span class="ruby"> /<span class="regexp">/ if((maxValue-1)&lt;=0)&#123;</span></span></span><br><span class="line"><span class="ruby">/<span class="regexp">/  td5.innerHTML="-";</span></span></span><br><span class="line"><span class="ruby"> /<span class="regexp">/ &#125;else&#123;</span></span></span><br><span class="line"><span class="ruby">/<span class="regexp">/  td5.innerHTML=(maxValue-1);</span></span></span><br><span class="line"><span class="ruby"> /<span class="regexp">/ &#125;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="ruby">var tr=detailData.insertRow(arrays.length+<span class="number">2</span>);</span></span><br><span class="line"><span class="ruby"> var td=tr.insertCell(<span class="number">0</span>);</span></span><br><span class="line"><span class="ruby"> td.innerHTML=<span class="string">"数字"</span>;</span></span><br><span class="line"><span class="ruby"> td.style.fontWeight=<span class="string">"bolder"</span>;</span></span><br><span class="line"><span class="ruby"> td.colSpan=<span class="number">2</span>;</span></span><br><span class="line"><span class="ruby"> var tr2=detailData.insertRow(arrays.length+<span class="number">3</span>);</span></span><br><span class="line"><span class="ruby"> var td2=tr2.insertCell(<span class="number">0</span>);</span></span><br><span class="line"><span class="ruby"> td2.innerHTML=<span class="string">"单排最大遗漏数"</span>;</span></span><br><span class="line"><span class="ruby"> td2.style.fontWeight=<span class="string">"bolder"</span>;</span></span><br><span class="line"><span class="ruby"> td2.colSpan=<span class="number">2</span>;</span></span><br><span class="line"><span class="ruby"> var tr3=detailData.insertRow(arrays.length+<span class="number">4</span>);</span></span><br><span class="line"><span class="ruby"> var td3=tr3.insertCell(<span class="number">0</span>);</span></span><br><span class="line"><span class="ruby"> td3.innerHTML=<span class="string">"总排最大遗漏数"</span>;</span></span><br><span class="line"><span class="ruby"> td3.style.fontWeight=<span class="string">"bolder"</span>;</span></span><br><span class="line"><span class="ruby"> td3.colSpan=<span class="number">2</span>;</span></span><br><span class="line"><span class="ruby">/<span class="regexp">/ /</span><span class="regexp">/当前7个数组当中都存有对应的数值</span></span></span><br><span class="line"><span class="ruby">/<span class="regexp">/ for(var t=0;t&lt;sumArray.length;t++)&#123;</span></span></span><br><span class="line"><span class="ruby">/<span class="regexp">/  /</span><span class="regexp">/ var arrays=[01,28,19,35,43,08,01,12,32,41];</span></span></span><br><span class="line"><span class="ruby">/<span class="regexp">/  var arrays=sumArray[t];/</span><span class="regexp">/单个数组</span></span></span><br><span class="line"><span class="ruby">/<span class="regexp">/  console.log(arrays);</span></span></span><br><span class="line"><span class="ruby">/<span class="regexp">/  var flag=true;</span></span></span><br><span class="line"><span class="ruby">/<span class="regexp">/  var map=new Map();</span></span></span><br><span class="line"><span class="ruby">/<span class="regexp">/  for(var i=0;i&lt;arrays.length;i++)&#123; /</span><span class="regexp">/循环10次</span></span></span><br><span class="line"><span class="ruby">/<span class="regexp">/  var element=arrays[i];/</span><span class="regexp">/数组当中具体的元素</span></span></span><br><span class="line"><span class="ruby">/<span class="regexp">/  map.put(element,0);/</span><span class="regexp">/放入的只有9个</span></span></span><br><span class="line"><span class="ruby">/<span class="regexp">/</span></span></span><br><span class="line"><span class="ruby">/<span class="regexp">/  for(var n=0;n&lt;arrays.length;n++)&#123; /</span><span class="regexp">/循环10次</span></span></span><br><span class="line"><span class="ruby">/<span class="regexp">/  var key=arrays[n];</span></span></span><br><span class="line"><span class="ruby">/<span class="regexp">/  /</span><span class="regexp">/console.log("当前遍历的element: "+element+"；所处index: "+i+"  map当中循环的element: "+key+"所处index: "+n)</span></span></span><br><span class="line"><span class="ruby">/<span class="regexp">/  if(key!=null &amp;&amp; key==element)&#123; /</span><span class="regexp">/如果存在有当前循环的数组当中的取值与map当中的键相同的则重新赋值，重新赋值后进行下一次break;</span></span></span><br><span class="line"><span class="ruby">/<span class="regexp">/  var y=i-n;</span></span></span><br><span class="line"><span class="ruby">/<span class="regexp">/  /</span><span class="regexp">/console.log("key: "+key+" element:"+element+" y: "+y);</span></span></span><br><span class="line"><span class="ruby">/<span class="regexp">/  map.put(element,y);/</span><span class="regexp">/此处的y没有减去当前自己的位数,所以当单排最大遗漏数查询的时候还需要-1</span></span></span><br><span class="line"><span class="ruby">/<span class="regexp">/  break;</span></span></span><br><span class="line"><span class="ruby">/<span class="regexp">/  &#125;else&#123;</span></span></span><br><span class="line"><span class="ruby">/<span class="regexp">/  continue;</span></span></span><br><span class="line"><span class="ruby">/<span class="regexp">/  &#125;</span></span></span><br><span class="line"><span class="ruby">/<span class="regexp">/  &#125;</span></span></span><br><span class="line"><span class="ruby">/<span class="regexp">/  &#125;</span></span></span><br><span class="line"><span class="ruby">/<span class="regexp">/  /</span><span class="regexp">/console.log(map.toString());</span></span></span><br><span class="line"><span class="ruby">/<span class="regexp">/  var mapArrays=map.entrys();</span></span></span><br><span class="line"><span class="ruby">/<span class="regexp">/  var maxValue=0;</span></span></span><br><span class="line"><span class="ruby">/<span class="regexp">/  var maxKey=0;</span></span></span><br><span class="line"><span class="ruby">/<span class="regexp">/  for(var i=0;i&lt;mapArrays.length;i++)&#123;</span></span></span><br><span class="line"><span class="ruby">/<span class="regexp">/  var key=mapArrays[i].key;</span></span></span><br><span class="line"><span class="ruby">/<span class="regexp">/  var value=map.get(key);</span></span></span><br><span class="line"><span class="ruby">/<span class="regexp">/  /</span><span class="regexp">/console.log("key: "+key+" value:"+value);</span></span></span><br><span class="line"><span class="ruby">/<span class="regexp">/  if(maxValue&lt;value)&#123;</span></span></span><br><span class="line"><span class="ruby">/<span class="regexp">/  maxValue=value;</span></span></span><br><span class="line"><span class="ruby">/<span class="regexp">/  maxKey=key;</span></span></span><br><span class="line"><span class="ruby">/<span class="regexp">/  &#125;</span></span></span><br><span class="line"><span class="ruby">/<span class="regexp">/  &#125;</span></span></span><br><span class="line"><span class="ruby">/<span class="regexp">/  console.log("单排最大遗漏数为 - key:"+maxKey+"  value:"+(maxValue-1));</span></span></span><br><span class="line"><span class="ruby">/<span class="regexp">/  /</span><span class="regexp">/添加元素</span></span></span><br><span class="line"><span class="ruby">/<span class="regexp">/  var td4=tr.insertCell(t+1);</span></span></span><br><span class="line"><span class="ruby">/<span class="regexp">/  if(maxKey&lt;=0)&#123;</span></span></span><br><span class="line"><span class="ruby">/<span class="regexp">/  td4.innerHTML="-";</span></span></span><br><span class="line"><span class="ruby">/<span class="regexp">/  &#125;else&#123;</span></span></span><br><span class="line"><span class="ruby">/<span class="regexp">/  td4.innerHTML=maxKey;</span></span></span><br><span class="line"><span class="ruby">/<span class="regexp">/  &#125;</span></span></span><br><span class="line"><span class="ruby">/<span class="regexp">/  var td5=tr2.insertCell(t+1);</span></span></span><br><span class="line"><span class="ruby">/<span class="regexp">/  if((maxValue-1)&lt;=0)&#123;</span></span></span><br><span class="line"><span class="ruby">/<span class="regexp">/  td5.innerHTML="-";</span></span></span><br><span class="line"><span class="ruby">/<span class="regexp">/  &#125;else&#123;</span></span></span><br><span class="line"><span class="ruby">/<span class="regexp">/  td5.innerHTML=(maxValue-1);</span></span></span><br><span class="line"><span class="ruby">/<span class="regexp">/  &#125;</span></span></span><br><span class="line"><span class="ruby">/<span class="regexp">/ &#125;</span></span></span><br><span class="line"><span class="ruby">-</span><span class="xml">-%&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;需求内容&quot;&gt;&lt;a href=&quot;#需求内容&quot; class=&quot;headerlink&quot; title=&quot;需求内容&quot;&gt;&lt;/a&gt;需求内容&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://github.com/fengshana/Mamai&quot; target=&quot;_blank&quot; r
      
    
    </summary>
    
    
      <category term="前端" scheme="https://fengshana.github.io/categories/%E5%89%8D%E7%AB%AF/"/>
    
    
      <category term="javaScript" scheme="https://fengshana.github.io/tags/javaScript/"/>
    
      <category term="前端" scheme="https://fengshana.github.io/tags/%E5%89%8D%E7%AB%AF/"/>
    
      <category term="双色球" scheme="https://fengshana.github.io/tags/%E5%8F%8C%E8%89%B2%E7%90%83/"/>
    
  </entry>
  
  <entry>
    <title>串</title>
    <link href="https://fengshana.github.io/2020/04/07/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E4%B8%B2-05/"/>
    <id>https://fengshana.github.io/2020/04/07/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E4%B8%B2-05/</id>
    <published>2020-04-07T04:52:56.000Z</published>
    <updated>2020-04-07T20:40:23.081Z</updated>
    
    <content type="html"><![CDATA[<h2 id="阅读笔记"><a href="#阅读笔记" class="headerlink" title="阅读笔记"></a>阅读笔记</h2><p><img src="/2020/04/07/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E4%B8%B2-05/%E4%B8%B2-05.png" alt="串-05"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;阅读笔记&quot;&gt;&lt;a href=&quot;#阅读笔记&quot; class=&quot;headerlink&quot; title=&quot;阅读笔记&quot;&gt;&lt;/a&gt;阅读笔记&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/2020/04/07/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%
      
    
    </summary>
    
    
      <category term="数据结构" scheme="https://fengshana.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
      <category term="串" scheme="https://fengshana.github.io/tags/%E4%B8%B2/"/>
    
      <category term="数据结构" scheme="https://fengshana.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>栈与队列</title>
    <link href="https://fengshana.github.io/2020/04/05/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%88%E4%B8%8E%E9%98%9F%E5%88%97-04/"/>
    <id>https://fengshana.github.io/2020/04/05/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%88%E4%B8%8E%E9%98%9F%E5%88%97-04/</id>
    <published>2020-04-05T04:52:56.000Z</published>
    <updated>2020-04-07T01:17:47.045Z</updated>
    
    <content type="html"><![CDATA[<h2 id="阅读笔记"><a href="#阅读笔记" class="headerlink" title="阅读笔记"></a>阅读笔记</h2><p><img src="/2020/04/05/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%88%E4%B8%8E%E9%98%9F%E5%88%97-04/%E6%A0%88%E4%B8%8E%E9%98%9F%E5%88%97-04.png" alt="栈与队列-04"></p><p><img src="/2020/04/05/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%88%E4%B8%8E%E9%98%9F%E5%88%97-04/%E5%BC%80%E5%9C%BA%E7%99%BD.png" alt="开场白"></p><p><img src="/2020/04/05/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%88%E4%B8%8E%E9%98%9F%E5%88%97-04/%E6%A0%88%E7%9A%84%E5%AE%9A%E4%B9%89.png" alt="栈的定义"></p><p><img src="/2020/04/05/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%88%E4%B8%8E%E9%98%9F%E5%88%97-04/%E6%A0%88%E7%9A%84%E6%8A%BD%E8%B1%A1%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B.png" alt="栈的抽象数据类型"></p><p><img src="/2020/04/05/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%88%E4%B8%8E%E9%98%9F%E5%88%97-04/%E6%A0%88%E7%9A%84%E9%A1%BA%E5%BA%8F%E5%AD%98%E5%82%A8%E7%BB%93%E6%9E%84%E5%8F%8A%E5%AE%9E%E7%8E%B0.png" alt="栈的顺序存储结构及实现"></p><p><img src="/2020/04/05/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%88%E4%B8%8E%E9%98%9F%E5%88%97-04/%E4%B8%A4%E6%A0%88%E7%9A%84%E5%85%B1%E4%BA%AB%E7%A9%BA%E9%97%B4.png" alt="两栈的共享空间"></p><p><img src="/2020/04/05/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%88%E4%B8%8E%E9%98%9F%E5%88%97-04/%E6%A0%88%E7%9A%84%E9%93%BE%E5%BC%8F%E5%AD%98%E5%82%A8%E7%BB%93%E6%9E%84%E5%8F%8A%E5%AE%9E%E7%8E%B0.png" alt="栈的链式存储结构及实现"></p><p><img src="/2020/04/05/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%88%E4%B8%8E%E9%98%9F%E5%88%97-04/%E6%A0%88%E7%9A%84%E4%BD%9C%E7%94%A8.png" alt="栈的作用"></p><p><img src="/2020/04/05/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%88%E4%B8%8E%E9%98%9F%E5%88%97-04/%E6%A0%88%E7%9A%84%E5%BA%94%E7%94%A8-%E9%80%92%E5%BD%92.png" alt="栈的应用-递归"></p><p><img src="/2020/04/05/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%88%E4%B8%8E%E9%98%9F%E5%88%97-04/%E6%A0%88%E7%9A%84%E5%BA%94%E7%94%A8-%E5%9B%9B%E5%88%99%E8%BF%90%E7%AE%97%E8%A1%A8%E8%BE%BE%E5%BC%8F%E6%B1%82%E5%80%BC.png" alt="栈的应用-四则运算表达式求值"></p><p><img src="/2020/04/05/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%88%E4%B8%8E%E9%98%9F%E5%88%97-04/%E9%98%9F%E5%88%97%E7%9A%84%E5%AE%9A%E4%B9%89.png" alt="队列的定义"></p><p><img src="/2020/04/05/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%88%E4%B8%8E%E9%98%9F%E5%88%97-04/%E9%98%9F%E5%88%97%E7%9A%84%E6%8A%BD%E8%B1%A1%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B.png" alt="队列的抽象数据类型"></p><p><img src="/2020/04/05/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%88%E4%B8%8E%E9%98%9F%E5%88%97-04/%E5%BE%AA%E7%8E%AF%E9%98%9F%E5%88%97.png" alt="循环队列"></p><p><img src="/2020/04/05/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%88%E4%B8%8E%E9%98%9F%E5%88%97-04/%E9%98%9F%E5%88%97%E7%9A%84%E9%93%BE%E5%BC%8F%E5%AD%98%E5%82%A8%E7%BB%93%E6%9E%84%E5%8F%8A%E5%AE%9E%E7%8E%B0.png" alt="队列的链式存储结构及实现"></p><p><img src="/2020/04/05/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%88%E4%B8%8E%E9%98%9F%E5%88%97-04/%E6%80%BB%E7%BB%93%E5%9B%9E%E9%A1%BE.png" alt="总结回顾"></p><p><img src="/2020/04/05/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/%E6%A0%88%E4%B8%8E%E9%98%9F%E5%88%97-04/%E7%BB%93%E5%B0%BE%E8%AF%AD.png" alt="结尾语"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;阅读笔记&quot;&gt;&lt;a href=&quot;#阅读笔记&quot; class=&quot;headerlink&quot; title=&quot;阅读笔记&quot;&gt;&lt;/a&gt;阅读笔记&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;/2020/04/05/%E5%A4%A7%E8%AF%9D%E6%95%B0%E6%8D%AE%E7%
      
    
    </summary>
    
    
      <category term="数据结构" scheme="https://fengshana.github.io/categories/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
    
      <category term="数据结构" scheme="https://fengshana.github.io/tags/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    
      <category term="栈与队列" scheme="https://fengshana.github.io/tags/%E6%A0%88%E4%B8%8E%E9%98%9F%E5%88%97/"/>
    
  </entry>
  
  <entry>
    <title>社会主义接班人</title>
    <link href="https://fengshana.github.io/2020/04/03/%E9%9A%8F%E7%AC%94/%E6%88%91%E6%98%AF%E7%A4%BE%E4%BC%9A%E4%B8%BB%E4%B9%89%E6%8E%A5%E7%8F%AD%E4%BA%BA/"/>
    <id>https://fengshana.github.io/2020/04/03/%E9%9A%8F%E7%AC%94/%E6%88%91%E6%98%AF%E7%A4%BE%E4%BC%9A%E4%B8%BB%E4%B9%89%E6%8E%A5%E7%8F%AD%E4%BA%BA/</id>
    <published>2020-04-03T11:52:56.000Z</published>
    <updated>2020-04-03T11:13:32.350Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>帮我妹改改作文。</p></blockquote><p>主题：灾害到来时我该怎么做</p><ol><li>身份：新时代的青年人，是社会建设和国家发展的接班人</li><li>态度：勇敢面对，承担使命</li><li>方向：针对新冠疫情；视角要宽；</li><li>人群：90,00代的突出表现和感人事迹</li></ol><p>面临黑暗，我向阳光</p><p>  汽车的鸣笛，街道的喧闹。<br>  在蓝天白云下，在灿阳照射下，看似和谐美好的生活，也有阳光穿不透的黑暗，<br>  他们在黑暗里肆意欢笑，趁人不注意，便将罪恶的双手伸向人们，<br>  他们在变态心理的引导下剥夺了人爱阳光照耀的机会，<br>  将人无情地拉进黑暗。</p><p>  黑暗就如病毒，如同冠状病毒，从天而降，肆意传播，于是将人们的天空浸染成了黑色，<br>  雨水冲刷着人们的双眼。但总会有阳光，哪怕只剩一缕，他也会穿过乌云照向大地。<br>  新闻中不断播的着“巨婴”的行为，可以说是个反面教材了，<br>  在面对危险时，他们慌乱了手脚，将内心底的自私播出来给人们看，<br>  像跳梁小丑，引人发笑。当医生带着阳光冲向黑暗，“巨婴”们手里拿着盾牌，却站反了方向。<br>  我们理应相信那一缕阳光，将我们内心的力量融合，为医生助力。</p><p>  黑暗也如同恐惧心理，覆压人的心灵，痛打着人们的躯体，凌辱了人的自尊，却仍在暗自偷笑。<br>  校园暴力给人带来的伤痛往往是比身体的疼痛更令人刻骨铭心。<br>  但总有强大心灵带着阳光，即使”身在井隅”，却仍然”心向璀璨”。<br>  冰冷的法律中出现裂痕，投进去了温暖，扫黑，禁止校园暴力的法律的颁布，<br>  在这个社会，让人们走在街道上，没有胆怯。我们主动站出来打击黑恶势力，将力量团结在一起。<br>  黑暗骑士也没有那么可怕。</p><p>  我想阳光的力量一定可以战胜黑暗，我想，抬头暖阳春草，用拥抱将黑暗消融。<br>  阳光会穿过茂密的树枝，穿过乱窜的树枝，知道最后，千缕阳光冲破黑来前来拥抱我。</p><p>  ======================================================================</p><h2 id="面临黑暗，我向阳光"><a href="#面临黑暗，我向阳光" class="headerlink" title="面临黑暗，我向阳光"></a>面临黑暗，我向阳光</h2><p>“等到黑夜翻面之后，会是新的白昼；<br>等到海啸退去之后，只是潮起潮落；<br>别到最后你才发觉，心里头的野兽，还没到最终就已经罢休；<br>心脏没有那么脆弱，总还会有执着；<br>人生不会只有收获，总难免有伤口；<br>不要害怕生命中，不完美的角落；<br>阳光在每个裂缝中散落，不如就勇敢打破生命中的裂缝，阳光就逐渐洒满了其中。”<br>——题记</p><p>2019的尾巴到2020的开端，甚至更甚。<br>爆发的新冠状病毒，在这场看不见硝烟的抗疫战争中告诉我们，<br>这不仅仅是一场我们巍巍中华人民需要迎接且不能退缩的挑战，这更是让我们泱泱华夏子孙心与心贴在了一起的连线。</p><p>在这场抗疫当中，有着数不清的前线抗疫战士为了这场战争前继后扑。<br>贵州省黔西南州兴义市人民医院的一位呼吸科医生张恩莉争分夺秒，只为更多患者康复；<br>吉林省援鄂医疗队的一位护士长高岚守护生命，坚持到最后胜利；<br>武汉大学人民医院东院区山东医疗队的主治医生郭海鹏用仁心仁术守护生命…</p><p>不仅仅是前线的抗疫战士，就连普普通通老百姓也送上了来自他们的绵薄之力。<br>山东日照一个环卫工人捐了一万二,钱虽然不是很多，但对于他来说却是一个大数目；<br>1月28日，寿光免费赠送了300吨新鲜蔬菜。并且29日起，每天给武汉送600吨平价新鲜蔬菜，持续供应10到15天。截止到2月3日共捐赠1120吨；<br>1月29日，临沂兰陵县捐赠200吨大蒜;<br>1月31日，临沂蔬菜公司原计划捐赠100吨蔬菜，结果这个消息传到了菜农耳朵里又自愿增加60吨，共计160吨;<br>1月31日，金乡捐赠300吨大蒜;<br>2月1日，滕州捐赠66吨马铃薯;<br>2月4日，菏泽8节车厢满载着275吨优质农产品驰援武汉…</p><p>给出力量的不仅仅来自于前线、百姓、企业…<br>也有来自00后，90后那些一度被认为仍处在温室的花朵，也给予了来自他们微弱的力量。</p><p>“阿姨，您的处方单是以前的，药店说需要新的处方单才能开药，请您让主治医师再开一张过来吧”，“叔叔，您要的药没有了，看看这种行不行”，……<br>在武汉市汉阳区晴川街的一家药店，19岁的张玉欣一边跟店主报需求，一边联系居民询问购药的细节，忙的不可开交。<br>张玉欣是武汉本地的“00”后大学生，疫情发生后，她主动到社区报名，成为一名志愿者，主要负责给居民买药送药。<br>“之前有过志愿服务经验，现在我们的城市遇到困难了，我想为家乡人民出一份力。”张玉欣说。<br>张玉欣工作的汉阳晴川街龙灯社区龙灯里小区是一个老旧小区，居民大多是老年人。<br>为了满足居民多样化的用药需求，张玉欣和同事们经常从早跑到晚，遇到一些难买到的药，还得一家家药店去询问，经常饭都来不及吃。<br>“虽然只是跑腿的工作，但有些药对居民来说是‘救命药’，我们必须争分夺秒去买。”张玉欣说。<br>小区居民买高血压、糖尿病等慢性病的药物比较多，有的隔几天就需要再买一次。最多的时候，她一天要买五六十种药品，光排队就要好几个小时。<br>让张玉欣印象最深的是，一天下午，她接到居民求助：一名70多岁的危重症者急需球蛋白。她和同事立即开车外出找药，一家家药店去询问，从汉阳一路搜到汉口，辗转10多家药店，终于在快要天黑时，在一家即将打烊的药店买到了药。<br>当他们把药送到求助居民手中时，对方感动的热泪盈眶。志愿者的辛苦付出，居民都看在眼里。<br>“开始时一些居民不放心，但看到那些买药的居民不仅拿到了急需的药，零钱也一份不少，现在他们都提前写下医保卡密码，放心地交给我们购药”张玉欣欣慰地说。</p><p>“身在无间，心在桃源”。<br>前有武汉汉阳区“00”后志愿者张玉欣为居民买药送药争分夺秒，后有“90”后一线抗疫英雄谢小玉的12小时无私奉献。</p><p>过去有人说他们是娇滴滴的一代，但现在看，他们成了抗疫一线的主力军，不怕苦、不怕牺牲。抗疫一线比其他地方更能考验人。”<br>3月10日，习近平总书记来到武汉市东湖新城社区考察。听完社区志愿者代表、中国矿业大学(北京)大二学生谢小玉的工作汇报后，总书记深有感触地说。<br>　　受到总书记的肯定和鼓励，谢小玉工作起来更有干劲了。这名社区第一批参加志愿服务、唯一的大学生志愿者，已经在30栋楼值守一个多月。日前，记者来到东湖新城社区，感受了谢小玉忙碌的一天。<br>　　上午9点——主动上门问需求。<br>　　趁着上午9点物资尚未送达的待命时刻，谢小玉看望了住在30栋楼15层的80多岁的周奶奶。<br>　　“奶奶，降压药够吗?燃气卡要充值吗?”“小玉来啦，放心，都够用。”周奶奶感动地说，有一次为了帮她买降压药，谢小玉连跑了3家药店。<br>　　因为老人家不会用手机、腿脚又不方便，谢小玉就特别关心周奶奶。“周奶奶第一次接电话时，看到是陌生的手机号码，以为遇到了骗子，熟悉了以后，周奶奶经常主动打电话找我谈心。”她说，以前连对门邻居都不熟悉，这段时间却认识了很多社区邻居，有些人还给她送防护物资。<br>　　服务200多户居民不是简单事。单从买药来说，居民对生产厂家、品牌型号都有特殊要求。有时候她和其他志愿者连“逛”几天药店，才能买到某种指定的药。<br>　　上午10点——大箱小箱送快递。<br>　　“我的顺丰快递到南门了。”上午10点，30栋楼1单元一位居民在群里求助志愿者，谢小玉看到后立刻起身。<br>　　取快递是志愿者的日常工作，30栋楼离社区南门最远，来回一趟要十几分钟。一上午谢小玉就帮居民取了4次快递，看到她气喘吁吁地抱着大箱小箱，其他志愿者连忙帮她找推车。“没事，这几天，我的力气都锻炼大了。”谢小玉说。<br>　　“快递业务是从2月下旬开始逐渐增多的，最忙时一天要跑十几趟，一批快递在南门，一批在社区服务站前，收到居民通知就得赶紧取走、避免堆积。”谢小玉介绍说，居民个性化需求比较多，经常会有退换货的情况。<br>　　几天前，谢小玉向一位社区居民借了辆电瓶车。“最近取快递、取货方便多了，但小玉总是把电瓶车给我们用。”一起负责30栋楼的下沉干部毕彪说，谢小玉年纪虽小却很爱照顾人。<br>　　当然，工作中也有不顺心的时候。有一次分快递时，有居民冲她发了火，她哭了。“不只是感到委屈，更多的是觉得自己没做好。”谢小玉不好意思地说，社区工作人员和家人都在鼓励她，她也慢慢学会了调整心态。<br>　　下午5点半——挨家挨户发活鱼。<br>　　“团购活鱼到楼下了。”下午5点半，近10份活鱼在灌满清水的塑料袋里活蹦乱跳。谢小玉在群里发出通知，担心有居民没及时看到，她又一家家打电话通知。“谢谢小玉!”不到20分钟，鱼分发完了。随后，她仔细查阅笔记本上的记录，再次确认当天的物资和生活用品是否全部送到，然后继续值班。<br>　　脚踩一双粉色球鞋，外面套着一件红马甲，扎着利落的马尾辫，未满20岁的谢小玉浑身洋溢着青春的活力。她原本计划今年寒假和家人出去旅游过年，“虽然旅游没成行，但当社区志愿者也挺有意义的。”<br>　　搭档万小强说，小玉上岗时正值2月中旬寒潮来袭，爱心物资大部分是米面油，都特别沉，一周要发三四次。小玉挨家挨户敲门送货，好几次一直从傍晚忙到晚上11点。“这个‘00后’小姑娘一点也不娇气，很坚强，很有责任感。”万小强佩服地说。<br>　　“抗疫一线也是大学，志愿服务就是课堂。社区工作的经历和体验，是我课堂上学不到的。现在，我的承受能力、沟通能力、信息整合能力都增强了。”谢小玉自豪地说。</p><p>阳光会穿过茂密的树枝，投下的那些光影将斑驳这段可歌可泣的岁月，成为这程征途上熠熠生辉的勋章。<br>我知道最后，千万缕阳光会冲破黑暗前来拥抱那些需要握住阳光的人。<br>我想，其实勇敢一点，我们也能手握阳光，给予他人。</p><p>那是一个即将下着雨的午后，<br>早些时候火辣的太阳瞧得人都睁不开眼睛，<br>烤的地铁车厢的壳都想生烟，车窗外的樟树叶子被晒的都好像要反光似的，卟呤卟呤的。<br>得亏地铁中有穿堂风倒是凉快。<br>不过本来身上就发了汗，黏黏糊糊的。<br>风一吹，贴在身上的衣服与皮肉之间倒是分开了，反倒生出一股子燥意。<br>就是一冷一热夹杂搞得人有点头昏脑涨，有点崩溃。<br>说白了，就是有点晕地铁。<br>车上人多的很，一个小小的车厢挤得好像已经腾不出地儿再去容纳更多的人了。<br>周遭放眼望去就是人。<br>戴着耳机听歌看电视的，看新闻的，低头玩手机的，逗孩子乐呵的，打电话的，望向车窗外放空的，喊着借过让道的，也有些观察着别人的人。<br>总之就是人挤人，挨着站一块儿。挤一挤，位置总会有的。<br>充斥在耳旁的声音还有地铁上穿堂而过的风声，那响声绝了，感觉就像是坐在过山车上尖叫声。<br>六月的天说变就变，不过一会儿，车窗外的天空就被就大块黑漆漆的乌云给占地为王了。<br>阴沉沉的，就像考试没考好爸妈的脸色似的，跟锅底有的一拼。跟要下暴雨似的，确是有黑云压城城欲摧的气势。<br>“哕！”<br>天！我一听声音就知道离我不远。我就杵在地铁门口的地儿，估算一下离我也就两个人的距离吧，听着声音倒不像是好事。<br>看向车窗外的视线立马掉转了180度，看向了声源地，准备凑凑热闹。<br>那是一个小男孩，得到我鼻子这么高了。<br>一手捂着口，脸通红着，冒着热汗，又止不住的想要吐。<br>不是想要吐，是止不住的吐，到后面吐到没东西吐了在那里干呕。<br>中午应该是吃了带有火腿肠热狗面包一类的快餐，<br>呕出的酸臭粘液从他指缝中滑过，连着口水丝都掺有一股浓浓的感觉没有消化完全的那股味道，<br>淌了一地的污秽物，红的白的黄的浑浊搅在一起，胆汁都要给吐出来了。<br>真真是惨不忍睹，人间惨剧。<br>旁边站着一位中年女士也是急了眼，手抓着小男孩的衣领骂，伸手拍打了小男孩背部几下，像是在训斥他怎么没有忍住在公共场合给吐了，<br>那小男孩有些不满，有些抵触，又做不得声。<br>该是他的妈妈。<br>那母亲也红了脸，隔着人我都能感觉得到她满脸的尴尬之情，无以言表。<br>她忙的翻了翻挎包，挎包夹层，里里外外找了一通，都没来得及扣好挎包的扣子，又从衣服口袋里翻了翻，没翻出什么东西，又从裤口袋里翻了翻，还是没找着什么。<br>她大概是在找能够清理那些污秽物的东西。<br>我突然发现，整一我在的这节车厢，不，是这小男孩和他母亲所在的这一车厢都安静了很多。<br>地铁上的穿堂风依然呼呼疾行而过，顺路将这节车厢的酸臭味稍稍带去了些许。<br>并且最最最古怪的事是，明明之前还挤得不可开交，现在倒是成了距离那对母子所在范围一两米都没有什么人。<br>他们都捂着口鼻，神色异样，仍在惊异怎么吐了，怎么偏偏在这节车厢吐了，今天可真是倒霉。<br>呕吐物带来的酸臭味让人退避三尺。<br>那对母子希望能有人帮助他们一点点，就一节纸巾或者是一个塑料袋的善意，那一点微末的雪中送炭，却都无人问津。<br>离那对母子最近的一位农民老奶奶颤巍巍的从自己挑的篮子当中找出了个卖菜的那种塑料袋，短小粗糙泛黄的手中递出了她的一点零星善意。<br>“你拿塑料袋盛着”。<br>那母亲连声道谢，一边鞠躬一边道谢，赶紧让那小男孩拿着那塑料袋以免再吐。<br>有了老奶奶递出的那个塑料袋，旁边一些近身旁的人也纷纷从口袋里拿出一包包的纸巾。<br>那母亲一边道谢一边拿着不多的纸巾去擦地铁上小男孩吐的一片狼藉，将那一张张纸一点点包住污秽，然后放到塑料袋里面。<br>但是纸巾依然不够。<br>我知道我今天出门前特意带了卷纸出来了。但我不太好意思拿出来给那母亲用。<br>于是我从包里将卷纸扯了一大长节，再在包里尴尬的折好紧张的递了过去。<br>我朝她笑了笑，她脸仍然是红着，但是已经好些了，也朝我笑了笑，拿过纸巾，怀着歉意拘谨的道谢。<br>狼藉已经被那母亲擦拭得差不多了，小男孩也吐的差不多了，看上去脸色要舒服点了。<br>我又扯了节纸巾折好了递了过去给那小男孩。<br>“可以拿着擦手”。<br>那小男孩摇了摇手，连声道谢说不用。<br>于是我拿着那节纸巾又把手给缩了回来。<br>“要下车的乘客，请您提前做好准备”。<br>地铁停下来的时候，那对母子从我身旁经过，我将那节纸巾准备递给那母亲。<br>“可以拿着擦手”。<br>那母亲提着污秽物的塑料袋，笑笑温婉答道：“不用了，谢谢你”。<br>直到他们下了地铁后，我手里仍有些紧张的拿着那节纸巾，心底突然放松了些，畅快了许多。<br>好像突然晓得”初极狭，才通人，复行数十步，豁然开朗”是个什么滋味儿。<br>地铁上又涌上来了许多人。人依然很挤。<br>嘈杂的声音依然存在着，穿堂风也依然在疾声作响，只是忽然从耳畔淡了下去。<br>车窗外的云好像也没有那么黑了。压的人透不过气的那股子气好像也泄了了下去。<br>而最终，这场疑似暴雨的天气也没有来临。</p><p>我想，其实勇敢一点，他人不仅能获取阳光，或许还能将阳光撒的更远。</p><p>即便是一脚踏空，我也会相信会有人将你扶起；<br>我向上不再会是迷茫，也不再会是抹掉的慌张，而是抬头便是暖阳春草；<br>我向下听见你说这世界不再是空荡荡，而是看见你会伸开双手将我搂住给我拥抱。<br>踩碎了冰冷走过时光，睁开眼你就会听到人间四月芳菲始盛开的声音。</p><p>微笑向暖，清风自来；而面临黑暗，我心向阳光。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;帮我妹改改作文。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;主题：灾害到来时我该怎么做&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;身份：新时代的青年人，是社会建设和国家发展的接班人&lt;/li&gt;
&lt;li&gt;态度：勇敢面对，承担使命&lt;/li&gt;
&lt;li&gt;方向：针对新冠疫情；
      
    
    </summary>
    
    
      <category term="随笔" scheme="https://fengshana.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    
      <category term="社会主义接班人" scheme="https://fengshana.github.io/tags/%E7%A4%BE%E4%BC%9A%E4%B8%BB%E4%B9%89%E6%8E%A5%E7%8F%AD%E4%BA%BA/"/>
    
  </entry>
  
</feed>
